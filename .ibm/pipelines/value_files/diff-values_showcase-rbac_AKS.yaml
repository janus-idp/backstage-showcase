# This file is for AKS installation only. 
# It is applied by `helm upgrade` after the `values-showcase.yaml` is applied and only contains complementary differences for AKS.
# Note, that it overwrites the whole key that is present in this file. 
#   e.g. global.dynamic.plugins key is completely overwritten by the content of this file.
route:
  enabled: false
global:
  dynamic:
    plugins:
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic
        disabled: false
        pluginConfig:
          catalog:
            providers:
              github:
                my-test-org:
                  organization: janus-qe
                  catalogPath: '/catalog-info.yaml'
                  schedule:
                    frequency:
                      minutes: 1
                    timeout:
                      minutes: 1
                    initialDelay:
                      seconds: 15
      - package: ./dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-org-dynamic
        disabled: false
      - package:  ./dynamic-plugins/dist/backstage-plugin-github-issues
        disabled: false
      - package: ./dynamic-plugins/dist/roadiehq-backstage-plugin-github-pull-requests
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-github-actions
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-quay
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-keycloak-backend-dynamic
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-tekton
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes
        disabled: false
      - package: ./dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic
        disabled: false
        pluginConfig:
          kubernetes:
            clusterLocatorMethods:
              - clusters:
                - authProvider: serviceAccount
                  name: 'my-cluster'
                  serviceAccountToken: ${K8S_SERVICE_ACCOUNT_TOKEN}
                  url: ${K8S_CLUSTER_API_SERVER_URL}
                type: config
            customResources:
              # Add for tekton
              - apiVersion: 'v1beta1'
                group: 'tekton.dev'
                plural: 'pipelines'
              - apiVersion: v1beta1
                group: tekton.dev
                plural: pipelineruns
              - apiVersion: v1beta1
                group: tekton.dev
                plural: taskruns
              # Add for topology plugin
              - apiVersion: 'v1'
                group: 'route.openshift.io'
                plural: 'routes'
              # Add to view topology code decorators
              - group: 'org.eclipse.che'
                apiVersion: 'v2'
                plural: 'checlusters'
            serviceLocatorMethod:
              type: multiTenant
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-ocm
        disabled: false
      # Enable Bulk import plugins.
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-bulk-import-backend-dynamic
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-bulk-import
        disabled: false
      # Enable tech-radar plugin.
      - package: ./dynamic-plugins/dist/backstage-plugin-tech-radar
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-acr
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-rbac
        disabled: false
      - package: ./dynamic-plugins/dist/roadiehq-scaffolder-backend-module-http-request-dynamic
        disabled: false
      - package: ./dynamic-plugins/dist/janus-idp-backstage-plugin-analytics-provider-segment
        disabled: true
upstream:
  backstage:
    appConfig:
      app:
        # Please update to match host in case you don't want to configure hostname via `global.clusterRouterBase` or `global.host`.
        baseUrl: 'https://{{- include "janus-idp.hostname" . }}'
      backend:
        baseUrl: 'https://{{- include "janus-idp.hostname" . }}'
        cors:
          origin: 'https://{{- include "janus-idp.hostname" . }}'
        database:
          connection:
            host: null
            port: null
            password: ${POSTGRESQL_ADMIN_PASSWORD}
            user: postgres
            ssl: null
        auth:
          keys:
            - secret: ${BACKEND_SECRET}
    extraEnvVars:
      - name: BACKEND_SECRET
        valueFrom:
          secretKeyRef:
            key: backend-secret
            name: '{{ include "janus-idp.backend-secret-name" $ }}'
      - name: POSTGRESQL_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: postgres-password
            name: '{{ .Release.Name }}-postgresql'
      # disable telemetry in CI
      - name: SEGMENT_TEST_MODE
        value: 'true'
    extraVolumeMounts:
      # The initContainer below will install dynamic plugins in this volume mount.
      - name: dynamic-plugins-root
        mountPath: /opt/app-root/src/dynamic-plugins-root
      - name: rbac-policy
        mountPath: /opt/app-root/src/rbac
    extraVolumes:
      # -- Ephemeral volume that will contain the dynamic plugins installed by the initContainer below at start.
      # To have more control on underlying storage, the [emptyDir](https://docs.openshift.com/container-platform/4.13/storage/understanding-ephemeral-storage.html)
      # could be changed to a [generic ephemeral volume](https://docs.openshift.com/container-platform/4.13/storage/generic-ephemeral-vols.html#generic-ephemeral-vols-procedure_generic-ephemeral-volumes).
      - name: dynamic-plugins-root
        emptyDir: {}
      - name: rbac-policy
        configMap:
          defaultMode: 420
          name: rbac-policy

      # Volume that will expose the `dynamic-plugins.yaml` file from the `dynamic-plugins` config map.
      # The `dynamic-plugins` config map is created by the helm chart from the content of the `global.dynamic` field.
      - name: dynamic-plugins
        configMap:
          defaultMode: 420
          name: dynamic-plugins
          optional: true
      # Optional volume that allows exposing the `.npmrc` file (through a `dynamic-plugins-npmrc` secret)
      # to be used when running `npm pack` during the dynamic plugins installation by the initContainer.
      - name: dynamic-plugins-npmrc
        secret:
          defaultMode: 420
          optional: true
          secretName: dynamic-plugins-npmrc
    extraEnvVarsSecrets:
      - rhdh-secrets
  postgresql:
    enabled: true
    postgresqlDataDir: /var/lib/pgsql/data/userdata
    image:
      registry: quay.io
      repository: fedora/postgresql-15
      tag: latest
    auth:
      secretKeys:
        adminPasswordKey: postgres-password
        userPasswordKey: password
      existingSecret: null
    primary:
      securityContext:
        enabled: false
      podSecurityContext:
        enabled: true
        fsGroup: 3000
      containerSecurityContext:
        enabled: false
      persistence:
        enabled: true
        size: 1Gi
        mountPath: /var/lib/pgsql/data
      extraEnvVars:
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: '{{ .Release.Name }}-postgresql'
  volumePermissions:
    enabled: true
  ingress:
    enabled: true
    className: webapprouting.kubernetes.azure.com
    host: ''