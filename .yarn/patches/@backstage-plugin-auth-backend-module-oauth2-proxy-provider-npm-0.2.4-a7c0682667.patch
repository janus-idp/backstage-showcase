diff --git a/dist/index.cjs.js b/dist/index.cjs.js
index 9f18425c9bf02bb82a6e0401a5b939fd3847b11d..d1c33b7154ac59ae2c08203c016377bd25280449 100644
--- a/dist/index.cjs.js
+++ b/dist/index.cjs.js
@@ -3,11 +3,16 @@
 Object.defineProperty(exports, '__esModule', { value: true });
 
 var module$1 = require('./module.cjs.js');
+var resolvers = require('./resolvers.cjs.js');
 var authenticator = require('./authenticator.cjs.js');
 
 
 
 exports.default = module$1.authModuleOauth2ProxyProvider;
+Object.defineProperty(exports, "oauth2ProxySignInResolvers", {
+  enumerable: true,
+  get: function () { return resolvers.oauth2ProxySignInResolvers; }
+});
 exports.OAUTH2_PROXY_JWT_HEADER = authenticator.OAUTH2_PROXY_JWT_HEADER;
 exports.oauth2ProxyAuthenticator = authenticator.oauth2ProxyAuthenticator;
 //# sourceMappingURL=index.cjs.js.map
diff --git a/dist/index.cjs.js.map b/dist/index.cjs.js.map
index 401e75a40acded8d9fcbf1a9bc94d43a344be587..d6f2130daa15d872b74741048d0a937eac3e1424 100644
--- a/dist/index.cjs.js.map
+++ b/dist/index.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.cjs.js","sources":[],"sourcesContent":[],"names":[],"mappings":";;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/dist/index.d.ts b/dist/index.d.ts
index bc1f5162679e0e783790095e79cc8a67be0edab4..6b0e786f8dec1ebe80bb348a7d8e8a19e3bcc4bf 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -46,6 +46,15 @@ type OAuth2ProxyResult<JWTPayload = {}> = {
     getHeader(name: string): string | undefined;
 };
 
+/**
+ * @public
+ */
+declare namespace oauth2ProxySignInResolvers {
+    const forwardedUserMatchingUserEntityName: _backstage_plugin_auth_node.SignInResolverFactory<OAuth2ProxyResult, {
+        dangerouslyAllowSignInWithoutUserInCatalog?: boolean | undefined;
+    } | undefined>;
+}
+
 /**
  * NOTE: This may come in handy if you're doing work on this provider:
  * plugins/auth-backend/examples/docker-compose.oauth2-proxy.yaml
@@ -58,4 +67,4 @@ declare const oauth2ProxyAuthenticator: _backstage_plugin_auth_node.ProxyAuthent
     accessToken: string;
 }>;
 
-export { OAUTH2_PROXY_JWT_HEADER, type OAuth2ProxyResult, authModuleOauth2ProxyProvider as default, oauth2ProxyAuthenticator };
+export { OAUTH2_PROXY_JWT_HEADER, type OAuth2ProxyResult, authModuleOauth2ProxyProvider as default, oauth2ProxyAuthenticator, oauth2ProxySignInResolvers };
diff --git a/dist/resolvers.cjs.js b/dist/resolvers.cjs.js
index fcac494dbc8dce0c98d1056dc88766f56fefdf50..7a0a07d6e9f4d87ecd6ecbba2ebfdcc033fa613b 100644
--- a/dist/resolvers.cjs.js
+++ b/dist/resolvers.cjs.js
@@ -1,19 +1,32 @@
 'use strict';
 
 var pluginAuthNode = require('@backstage/plugin-auth-node');
+var zod = require('zod');
 
 exports.oauth2ProxySignInResolvers = void 0;
 ((oauth2ProxySignInResolvers2) => {
   oauth2ProxySignInResolvers2.forwardedUserMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
-    create() {
+    optionsSchema: zod.z.object({
+      dangerouslyAllowSignInWithoutUserInCatalog: zod.z.boolean().optional()
+    }).optional(),
+    create(options = {}) {
       return async (info, ctx) => {
         const name = info.result.getHeader("x-forwarded-user");
         if (!name) {
           throw new Error("Request did not contain a user");
         }
-        return ctx.signInWithCatalogUser({
-          entityRef: { name }
-        });
+        try {
+          return await ctx.signInWithCatalogUser({
+            entityRef: { name }
+          });
+        } catch (error) {
+          return await pluginAuthNode.handleSignInUserNotFound({
+            ctx,
+            error,
+            userEntityName: name,
+            dangerouslyAllowSignInWithoutUserInCatalog: options?.dangerouslyAllowSignInWithoutUserInCatalog
+          });
+        }
       };
     }
   });
diff --git a/dist/resolvers.cjs.js.map b/dist/resolvers.cjs.js.map
index 35ea212d2f53a3504f053557cb35db8aa875eb5f..1931064ea88bb57137316ab19430f30967686587 100644
--- a/dist/resolvers.cjs.js.map
+++ b/dist/resolvers.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolvers.cjs.js","sources":["../src/resolvers.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createSignInResolverFactory,\n  SignInInfo,\n} from '@backstage/plugin-auth-node';\nimport { OAuth2ProxyResult } from './types';\n\n/**\n * @public\n */\nexport namespace oauth2ProxySignInResolvers {\n  export const forwardedUserMatchingUserEntityName =\n    createSignInResolverFactory({\n      create() {\n        return async (info: SignInInfo<OAuth2ProxyResult>, ctx) => {\n          const name = info.result.getHeader('x-forwarded-user');\n          if (!name) {\n            throw new Error('Request did not contain a user');\n          }\n          return ctx.signInWithCatalogUser({\n            entityRef: { name },\n          });\n        };\n      },\n    });\n}\n"],"names":["oauth2ProxySignInResolvers","createSignInResolverFactory"],"mappings":";;;;AAyBiBA;AAAA,CAAV,CAAUA,2BAAV,KAAA;AACE,EAAMA,2BAAAA,CAAA,sCACXC,0CAA4B,CAAA;AAAA,IAC1B,MAAS,GAAA;AACP,MAAO,OAAA,OAAO,MAAqC,GAAQ,KAAA;AACzD,QAAA,MAAM,IAAO,GAAA,IAAA,CAAK,MAAO,CAAA,SAAA,CAAU,kBAAkB,CAAA;AACrD,QAAA,IAAI,CAAC,IAAM,EAAA;AACT,UAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA;AAElD,QAAA,OAAO,IAAI,qBAAsB,CAAA;AAAA,UAC/B,SAAA,EAAW,EAAE,IAAK;AAAA,SACnB,CAAA;AAAA,OACH;AAAA;AACF,GACD,CAAA;AAAA,CAdY,EAAAD,kCAAA,KAAAA,kCAAA,GAAA,EAAA,CAAA,CAAA;;"}
\ No newline at end of file
+{"version":3,"file":"resolvers.cjs.js","sources":["../src/resolvers.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createSignInResolverFactory,\n  handleSignInUserNotFound,\n  SignInInfo,\n} from '@backstage/plugin-auth-node';\nimport { OAuth2ProxyResult } from './types';\nimport { z } from 'zod';\n\n/**\n * @public\n */\nexport namespace oauth2ProxySignInResolvers {\n  export const forwardedUserMatchingUserEntityName =\n    createSignInResolverFactory({\n      optionsSchema: z\n        .object({\n          dangerouslyAllowSignInWithoutUserInCatalog: z.boolean().optional(),\n        })\n        .optional(),\n      create(options = {}) {\n        return async (info: SignInInfo<OAuth2ProxyResult>, ctx) => {\n          const name = info.result.getHeader('x-forwarded-user');\n          if (!name) {\n            throw new Error('Request did not contain a user');\n          }\n          try {\n            return await ctx.signInWithCatalogUser({\n              entityRef: { name },\n            });\n          } catch (error) {\n            return await handleSignInUserNotFound({\n              ctx,\n              error,\n              userEntityName: name,\n              dangerouslyAllowSignInWithoutUserInCatalog:\n                options?.dangerouslyAllowSignInWithoutUserInCatalog,\n            });\n          }\n        };\n      },\n    });\n}\n"],"names":["oauth2ProxySignInResolvers","createSignInResolverFactory","z","handleSignInUserNotFound"],"mappings":";;;;;AA2BiBA;AAAA,CAAV,CAAUA,2BAAV,KAAA;AACE,EAAMA,2BAAAA,CAAA,sCACXC,0CAA4B,CAAA;AAAA,IAC1B,aAAA,EAAeC,MACZ,MAAO,CAAA;AAAA,MACN,0CAA4C,EAAAA,KAAA,CAAE,OAAQ,EAAA,CAAE,QAAS;AAAA,KAClE,EACA,QAAS,EAAA;AAAA,IACZ,MAAA,CAAO,OAAU,GAAA,EAAI,EAAA;AACnB,MAAO,OAAA,OAAO,MAAqC,GAAQ,KAAA;AACzD,QAAA,MAAM,IAAO,GAAA,IAAA,CAAK,MAAO,CAAA,SAAA,CAAU,kBAAkB,CAAA;AACrD,QAAA,IAAI,CAAC,IAAM,EAAA;AACT,UAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA;AAElD,QAAI,IAAA;AACF,UAAO,OAAA,MAAM,IAAI,qBAAsB,CAAA;AAAA,YACrC,SAAA,EAAW,EAAE,IAAK;AAAA,WACnB,CAAA;AAAA,iBACM,KAAO,EAAA;AACd,UAAA,OAAO,MAAMC,uCAAyB,CAAA;AAAA,YACpC,GAAA;AAAA,YACA,KAAA;AAAA,YACA,cAAgB,EAAA,IAAA;AAAA,YAChB,4CACE,OAAS,EAAA;AAAA,WACZ,CAAA;AAAA;AACH,OACF;AAAA;AACF,GACD,CAAA;AAAA,CA7BY,EAAAH,kCAAA,KAAAA,kCAAA,GAAA,EAAA,CAAA,CAAA;;"}
\ No newline at end of file
