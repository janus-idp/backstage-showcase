diff --git a/config.d.ts b/config.d.ts
index d59c40697ab250330eb71483692def8785142e07..17b26a6eb580921e8a50b3ef87316e6cdb89b7a4 100644
--- a/config.d.ts
+++ b/config.d.ts
@@ -34,10 +34,11 @@ export interface Config {
           signIn?: {
             resolvers: Array<
               | {
-                  resolver: 'emailLocalPartMatchingUserEntityName';
-                  allowedDomains?: string[];
-                }
+                resolver: 'emailLocalPartMatchingUserEntityName';
+                allowedDomains?: string[];
+              }
               | { resolver: 'emailMatchingUserEntityProfileEmail' }
+              | { resolver: 'preferredUsernameMatchingUserEntityName' }
             >;
           };
         };
diff --git a/dist/authenticator.cjs.js.map b/dist/authenticator.cjs.js.map
index f5838857e575c085b99bec2b558b8d3818b89c9d..92e72750e7e99f74d8aacf56dc8c42a601b97a1c 100644
--- a/dist/authenticator.cjs.js.map
+++ b/dist/authenticator.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"authenticator.cjs.js","sources":["../src/authenticator.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport crypto from 'crypto';\nimport {\n  custom,\n  CustomHttpOptionsProvider,\n  Issuer,\n  ClientAuthMethod,\n  TokenSet,\n  UserinfoResponse,\n  Strategy as OidcStrategy,\n} from 'openid-client';\nimport {\n  createOAuthAuthenticator,\n  OAuthAuthenticatorResult,\n  PassportDoneCallback,\n  PassportHelpers,\n  PassportOAuthAuthenticatorHelper,\n  PassportOAuthPrivateInfo,\n} from '@backstage/plugin-auth-node';\n\nconst HTTP_OPTION_TIMEOUT = 10000;\nconst httpOptionsProvider: CustomHttpOptionsProvider = (_url, options) => {\n  return {\n    ...options,\n    timeout: HTTP_OPTION_TIMEOUT,\n  };\n};\n\n/**\n * authentication result for the OIDC which includes the token set and user\n * profile response\n * @public\n */\nexport type OidcAuthResult = {\n  tokenset: TokenSet;\n  userinfo: UserinfoResponse;\n};\n\n/** @public */\nexport const oidcAuthenticator = createOAuthAuthenticator({\n  defaultProfileTransform: async (\n    input: OAuthAuthenticatorResult<OidcAuthResult>,\n  ) => ({\n    profile: {\n      email: input.fullProfile.userinfo.email,\n      picture: input.fullProfile.userinfo.picture,\n      displayName: input.fullProfile.userinfo.name,\n    },\n  }),\n  scopes: {\n    persist: true,\n    required: ['openid', 'profile', 'email'],\n  },\n  initialize({ callbackUrl, config }) {\n    const clientId = config.getString('clientId');\n    const clientSecret = config.getString('clientSecret');\n    const metadataUrl = config.getString('metadataUrl');\n    const customCallbackUrl = config.getOptionalString('callbackUrl');\n    const tokenEndpointAuthMethod = config.getOptionalString(\n      'tokenEndpointAuthMethod',\n    ) as ClientAuthMethod;\n    const tokenSignedResponseAlg = config.getOptionalString(\n      'tokenSignedResponseAlg',\n    );\n    const initializedPrompt = config.getOptionalString('prompt');\n\n    if (config.has('scope')) {\n      throw new Error(\n        'The oidc provider no longer supports the \"scope\" configuration option. Please use the \"additionalScopes\" option instead.',\n      );\n    }\n\n    Issuer[custom.http_options] = httpOptionsProvider;\n    const promise = Issuer.discover(metadataUrl).then(issuer => {\n      issuer[custom.http_options] = httpOptionsProvider;\n      issuer.Client[custom.http_options] = httpOptionsProvider;\n\n      const client = new issuer.Client({\n        access_type: 'offline', // this option must be passed to provider to receive a refresh token\n        client_id: clientId,\n        client_secret: clientSecret,\n        redirect_uris: [customCallbackUrl || callbackUrl],\n        response_types: ['code'],\n        token_endpoint_auth_method:\n          tokenEndpointAuthMethod || 'client_secret_basic',\n        id_token_signed_response_alg: tokenSignedResponseAlg || 'RS256',\n      });\n      client[custom.http_options] = httpOptionsProvider;\n\n      const strategy = new OidcStrategy(\n        {\n          client,\n          passReqToCallback: false,\n        },\n        (\n          tokenset: TokenSet,\n          userinfo: UserinfoResponse,\n          done: PassportDoneCallback<OidcAuthResult, PassportOAuthPrivateInfo>,\n        ) => {\n          if (typeof done !== 'function') {\n            throw new Error(\n              'OIDC IdP must provide a userinfo_endpoint in the metadata response',\n            );\n          }\n\n          done(\n            undefined,\n            { tokenset, userinfo },\n            { refreshToken: tokenset.refresh_token },\n          );\n        },\n      );\n\n      const helper = PassportOAuthAuthenticatorHelper.from(strategy);\n      return { helper, client, strategy };\n    });\n\n    return { initializedPrompt, promise };\n  },\n\n  async start(input, ctx) {\n    const { initializedPrompt, promise } = ctx;\n    const { helper, strategy } = await promise;\n    const options: Record<string, string> = {\n      scope: input.scope,\n      state: input.state,\n      nonce: crypto.randomBytes(16).toString('base64'),\n    };\n    const prompt = initializedPrompt || 'none';\n    if (prompt !== 'auto') {\n      options.prompt = prompt;\n    }\n\n    return new Promise((resolve, reject) => {\n      strategy.error = reject;\n\n      return helper\n        .start(input, {\n          ...options,\n        })\n        .then(resolve);\n    });\n  },\n\n  async authenticate(\n    input,\n    ctx,\n  ): Promise<OAuthAuthenticatorResult<OidcAuthResult>> {\n    const { strategy } = await ctx.promise;\n    const { result, privateInfo } =\n      await PassportHelpers.executeFrameHandlerStrategy<\n        OidcAuthResult,\n        PassportOAuthPrivateInfo\n      >(input.req, strategy);\n\n    return {\n      fullProfile: result,\n      session: {\n        accessToken: result.tokenset.access_token!,\n        tokenType: result.tokenset.token_type ?? 'bearer',\n        scope: result.tokenset.scope!,\n        expiresInSeconds: result.tokenset.expires_in,\n        idToken: result.tokenset.id_token,\n        refreshToken: privateInfo.refreshToken,\n      },\n    };\n  },\n\n  async refresh(input, ctx) {\n    const { client } = await ctx.promise;\n    const tokenset = await client.refresh(input.refreshToken);\n    if (!tokenset.access_token) {\n      throw new Error('Refresh failed');\n    }\n    const userinfo = await client.userinfo(tokenset.access_token);\n\n    return new Promise((resolve, reject) => {\n      if (!tokenset.access_token) {\n        reject(new Error('Refresh Failed'));\n      }\n      resolve({\n        fullProfile: { userinfo, tokenset },\n        session: {\n          accessToken: tokenset.access_token!,\n          tokenType: tokenset.token_type ?? 'bearer',\n          scope: tokenset.scope!,\n          expiresInSeconds: tokenset.expires_in,\n          idToken: tokenset.id_token,\n          refreshToken: tokenset.refresh_token,\n        },\n      });\n    });\n  },\n\n  async logout(input, ctx) {\n    const { client } = await ctx.promise;\n    const issuer = client.issuer;\n    /**\n     * https://github.com/panva/node-openid-client/blob/main/lib/client.js#L1398\n     * client.revoke will check revocation_endpoint and if undefined throw error。\n     *\n     * if oidc server do not provide revocation_endpoint，we should not call revoke function\n     */\n\n    if (input.refreshToken && issuer.revocation_endpoint) {\n      await client.revoke(input.refreshToken);\n    }\n  },\n});\n"],"names":["createOAuthAuthenticator","Issuer","custom","OidcStrategy","PassportOAuthAuthenticatorHelper","crypto","PassportHelpers"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"authenticator.cjs.js","sources":["../src/authenticator.ts"],"sourcesContent":["/*\r\n * Copyright 2023 The Backstage Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport crypto from 'crypto';\r\nimport {\r\n  custom,\r\n  CustomHttpOptionsProvider,\r\n  Issuer,\r\n  ClientAuthMethod,\r\n  TokenSet,\r\n  UserinfoResponse,\r\n  Strategy as OidcStrategy,\r\n} from 'openid-client';\r\nimport {\r\n  createOAuthAuthenticator,\r\n  OAuthAuthenticatorResult,\r\n  PassportDoneCallback,\r\n  PassportHelpers,\r\n  PassportOAuthAuthenticatorHelper,\r\n  PassportOAuthPrivateInfo,\r\n} from '@backstage/plugin-auth-node';\r\n\r\nconst HTTP_OPTION_TIMEOUT = 10000;\r\nconst httpOptionsProvider: CustomHttpOptionsProvider = (_url, options) => {\r\n  return {\r\n    ...options,\r\n    timeout: HTTP_OPTION_TIMEOUT,\r\n  };\r\n};\r\n\r\n/**\r\n * authentication result for the OIDC which includes the token set and user\r\n * profile response\r\n * @public\r\n */\r\nexport type OidcAuthResult = {\r\n  tokenset: TokenSet;\r\n  userinfo: UserinfoResponse;\r\n};\r\n\r\n/** @public */\r\nexport const oidcAuthenticator = createOAuthAuthenticator({\r\n  defaultProfileTransform: async (\r\n    input: OAuthAuthenticatorResult<OidcAuthResult>,\r\n  ) => ({\r\n    profile: {\r\n      email: input.fullProfile.userinfo.email,\r\n      picture: input.fullProfile.userinfo.picture,\r\n      displayName: input.fullProfile.userinfo.name,\r\n    },\r\n  }),\r\n  scopes: {\r\n    persist: true,\r\n    required: ['openid', 'profile', 'email'],\r\n  },\r\n  initialize({ callbackUrl, config }) {\r\n    const clientId = config.getString('clientId');\r\n    const clientSecret = config.getString('clientSecret');\r\n    const metadataUrl = config.getString('metadataUrl');\r\n    const customCallbackUrl = config.getOptionalString('callbackUrl');\r\n    const tokenEndpointAuthMethod = config.getOptionalString(\r\n      'tokenEndpointAuthMethod',\r\n    ) as ClientAuthMethod;\r\n    const tokenSignedResponseAlg = config.getOptionalString(\r\n      'tokenSignedResponseAlg',\r\n    );\r\n    const initializedPrompt = config.getOptionalString('prompt');\r\n\r\n    if (config.has('scope')) {\r\n      throw new Error(\r\n        'The oidc provider no longer supports the \"scope\" configuration option. Please use the \"additionalScopes\" option instead.',\r\n      );\r\n    }\r\n\r\n    Issuer[custom.http_options] = httpOptionsProvider;\r\n    const promise = Issuer.discover(metadataUrl).then(issuer => {\r\n      issuer[custom.http_options] = httpOptionsProvider;\r\n      issuer.Client[custom.http_options] = httpOptionsProvider;\r\n\r\n      const client = new issuer.Client({\r\n        access_type: 'offline', // this option must be passed to provider to receive a refresh token\r\n        client_id: clientId,\r\n        client_secret: clientSecret,\r\n        redirect_uris: [customCallbackUrl || callbackUrl],\r\n        response_types: ['code'],\r\n        token_endpoint_auth_method:\r\n          tokenEndpointAuthMethod || 'client_secret_basic',\r\n        id_token_signed_response_alg: tokenSignedResponseAlg || 'RS256',\r\n      });\r\n      client[custom.http_options] = httpOptionsProvider;\r\n\r\n      const strategy = new OidcStrategy(\r\n        {\r\n          client,\r\n          passReqToCallback: false,\r\n        },\r\n        (\r\n          tokenset: TokenSet,\r\n          userinfo: UserinfoResponse,\r\n          done: PassportDoneCallback<OidcAuthResult, PassportOAuthPrivateInfo>,\r\n        ) => {\r\n          if (typeof done !== 'function') {\r\n            throw new Error(\r\n              'OIDC IdP must provide a userinfo_endpoint in the metadata response',\r\n            );\r\n          }\r\n\r\n          done(\r\n            undefined,\r\n            { tokenset, userinfo },\r\n            { refreshToken: tokenset.refresh_token },\r\n          );\r\n        },\r\n      );\r\n\r\n      const helper = PassportOAuthAuthenticatorHelper.from(strategy);\r\n      return { helper, client, strategy };\r\n    });\r\n\r\n    return { initializedPrompt, promise };\r\n  },\r\n\r\n  async start(input, ctx) {\r\n    const { initializedPrompt, promise } = ctx;\r\n    const { helper, strategy } = await promise;\r\n    const options: Record<string, string> = {\r\n      scope: input.scope,\r\n      state: input.state,\r\n      nonce: crypto.randomBytes(16).toString('base64'),\r\n    };\r\n    const prompt = initializedPrompt || 'none';\r\n    if (prompt !== 'auto') {\r\n      options.prompt = prompt;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      strategy.error = reject;\r\n\r\n      return helper\r\n        .start(input, {\r\n          ...options,\r\n        })\r\n        .then(resolve);\r\n    });\r\n  },\r\n\r\n  async authenticate(\r\n    input,\r\n    ctx,\r\n  ): Promise<OAuthAuthenticatorResult<OidcAuthResult>> {\r\n    const { strategy } = await ctx.promise;\r\n    const { result, privateInfo } =\r\n      await PassportHelpers.executeFrameHandlerStrategy<\r\n        OidcAuthResult,\r\n        PassportOAuthPrivateInfo\r\n      >(input.req, strategy);\r\n\r\n    return {\r\n      fullProfile: result,\r\n      session: {\r\n        accessToken: result.tokenset.access_token!,\r\n        tokenType: result.tokenset.token_type ?? 'bearer',\r\n        scope: result.tokenset.scope!,\r\n        expiresInSeconds: result.tokenset.expires_in,\r\n        idToken: result.tokenset.id_token,\r\n        refreshToken: privateInfo.refreshToken,\r\n      },\r\n    };\r\n  },\r\n\r\n  async refresh(input, ctx) {\r\n    const { client } = await ctx.promise;\r\n    const tokenset = await client.refresh(input.refreshToken);\r\n    if (!tokenset.access_token) {\r\n      throw new Error('Refresh failed');\r\n    }\r\n    const userinfo = await client.userinfo(tokenset.access_token);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (!tokenset.access_token) {\r\n        reject(new Error('Refresh Failed'));\r\n      }\r\n      resolve({\r\n        fullProfile: { userinfo, tokenset },\r\n        session: {\r\n          accessToken: tokenset.access_token!,\r\n          tokenType: tokenset.token_type ?? 'bearer',\r\n          scope: tokenset.scope!,\r\n          expiresInSeconds: tokenset.expires_in,\r\n          idToken: tokenset.id_token,\r\n          refreshToken: tokenset.refresh_token,\r\n        },\r\n      });\r\n    });\r\n  },\r\n\r\n  async logout(input, ctx) {\r\n    const { client } = await ctx.promise;\r\n    const issuer = client.issuer;\r\n    /**\r\n     * https://github.com/panva/node-openid-client/blob/main/lib/client.js#L1398\r\n     * client.revoke will check revocation_endpoint and if undefined throw error。\r\n     *\r\n     * if oidc server do not provide revocation_endpoint，we should not call revoke function\r\n     */\r\n\r\n    if (input.refreshToken && issuer.revocation_endpoint) {\r\n      await client.revoke(input.refreshToken);\r\n    }\r\n  },\r\n});\r\n"],"names":["createOAuthAuthenticator","Issuer","custom","OidcStrategy","PassportOAuthAuthenticatorHelper","crypto","PassportHelpers"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/index.d.ts b/dist/index.d.ts
index bd2eb330b124be25d60f9dd2bb325a5cf02c1761..b8be7582ab706e90f787ee8349306e70d18ede75 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,5 +1,5 @@
 import * as _backstage_plugin_auth_node from '@backstage/plugin-auth-node';
-import { PassportOAuthAuthenticatorHelper } from '@backstage/plugin-auth-node';
+import { PassportOAuthAuthenticatorHelper, OAuthAuthenticatorResult } from '@backstage/plugin-auth-node';
 import * as openid_client from 'openid-client';
 import { TokenSet, UserinfoResponse, Strategy } from 'openid-client';
 import * as _backstage_backend_plugin_api from '@backstage/backend-plugin-api';
@@ -44,6 +44,11 @@ declare namespace oidcSignInResolvers {
      * as email of the entity.
      */
     const emailMatchingUserEntityProfileEmail: _backstage_plugin_auth_node.SignInResolverFactory<unknown, unknown>;
+    /**
+  * A oidc resolver that looks up the user using their preferred username
+  * as the entity name
+  */
+    const preferredUsernameMatchingUserEntityName: _backstage_plugin_auth_node.SignInResolverFactory<OAuthAuthenticatorResult<OidcAuthResult>, unknown>;
 }
 
 export { type OidcAuthResult, authModuleOidcProvider as default, oidcAuthenticator, oidcSignInResolvers };
diff --git a/dist/module.cjs.js b/dist/module.cjs.js
index f9dc2ae601a240550c1f975ddd55b94796ae081f..18c95c0b1b8cee1c3afcfcb035397d587cbcf6b6 100644
--- a/dist/module.cjs.js
+++ b/dist/module.cjs.js
@@ -19,8 +19,7 @@ const authModuleOidcProvider = backendPluginApi.createBackendModule({
           factory: pluginAuthNode.createOAuthProviderFactory({
             authenticator: authenticator.oidcAuthenticator,
             signInResolverFactories: {
-              ...resolvers.oidcSignInResolvers,
-              ...pluginAuthNode.commonSignInResolvers
+              ...resolvers.oidcSignInResolvers
             }
           })
         });
diff --git a/dist/module.cjs.js.map b/dist/module.cjs.js.map
index 1f62b0c3a73d65d0618e2a14c5b9e0244d921955..e225d9f66b84b63d0c676e3fa424efe884d5e4f7 100644
--- a/dist/module.cjs.js.map
+++ b/dist/module.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createBackendModule } from '@backstage/backend-plugin-api';\nimport {\n  authProvidersExtensionPoint,\n  commonSignInResolvers,\n  createOAuthProviderFactory,\n} from '@backstage/plugin-auth-node';\nimport { oidcAuthenticator } from './authenticator';\nimport { oidcSignInResolvers } from './resolvers';\n\n/** @public */\nexport const authModuleOidcProvider = createBackendModule({\n  pluginId: 'auth',\n  moduleId: 'oidc-provider',\n  register(reg) {\n    reg.registerInit({\n      deps: {\n        providers: authProvidersExtensionPoint,\n      },\n      async init({ providers }) {\n        providers.registerProvider({\n          providerId: 'oidc',\n          factory: createOAuthProviderFactory({\n            authenticator: oidcAuthenticator,\n            signInResolverFactories: {\n              ...oidcSignInResolvers,\n              ...commonSignInResolvers,\n            },\n          }),\n        });\n      },\n    });\n  },\n});\n"],"names":["createBackendModule","authProvidersExtensionPoint","createOAuthProviderFactory","oidcAuthenticator","oidcSignInResolvers","commonSignInResolvers"],"mappings":";;;;;;;AAyBO,MAAM,yBAAyBA,oCAAoB,CAAA;AAAA,EACxD,QAAU,EAAA,MAAA;AAAA,EACV,QAAU,EAAA,eAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,SAAW,EAAAC,0CAAA;AAAA,OACb;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,SAAA,EAAa,EAAA;AACxB,QAAA,SAAA,CAAU,gBAAiB,CAAA;AAAA,UACzB,UAAY,EAAA,MAAA;AAAA,UACZ,SAASC,yCAA2B,CAAA;AAAA,YAClC,aAAe,EAAAC,+BAAA;AAAA,YACf,uBAAyB,EAAA;AAAA,cACvB,GAAGC,6BAAA;AAAA,cACH,GAAGC,oCAAA;AAAA,aACL;AAAA,WACD,CAAA;AAAA,SACF,CAAA,CAAA;AAAA,OACH;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACF,CAAC;;;;"}
\ No newline at end of file
+{"version":3,"file":"module.cjs.js","sources":["../src/module.ts"],"sourcesContent":["/*\r\n * Copyright 2023 The Backstage Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { createBackendModule } from '@backstage/backend-plugin-api';\r\nimport {\r\n  authProvidersExtensionPoint,\r\n  createOAuthProviderFactory\r\n} from '@backstage/plugin-auth-node';\r\nimport { oidcAuthenticator } from './authenticator';\r\nimport { oidcSignInResolvers } from './resolvers';\r\n\r\n/** @public */\r\nexport const authModuleOidcProvider = createBackendModule({\r\n  pluginId: 'auth',\r\n  moduleId: 'oidc-provider',\r\n  register(reg) {\r\n    reg.registerInit({\r\n      deps: {\r\n        providers: authProvidersExtensionPoint,\r\n      },\r\n      async init({ providers }) {\r\n        providers.registerProvider({\r\n          providerId: 'oidc',\r\n          factory: createOAuthProviderFactory({\r\n            authenticator: oidcAuthenticator,\r\n            signInResolverFactories: {\r\n              ...oidcSignInResolvers,\r\n            },\r\n          }),\r\n        });\r\n      },\r\n    });\r\n  },\r\n});\r\n"],"names":["createBackendModule","authProvidersExtensionPoint","createOAuthProviderFactory","oidcAuthenticator","oidcSignInResolvers"],"mappings":";;;;;;;AAwBO,MAAM,yBAAyBA,oCAAoB,CAAA;AAAA,EACxD,QAAU,EAAA,MAAA;AAAA,EACV,QAAU,EAAA,eAAA;AAAA,EACV,SAAS,GAAK,EAAA;AACZ,IAAA,GAAA,CAAI,YAAa,CAAA;AAAA,MACf,IAAM,EAAA;AAAA,QACJ,SAAW,EAAAC,0CAAA;AAAA,OACb;AAAA,MACA,MAAM,IAAA,CAAK,EAAE,SAAA,EAAa,EAAA;AACxB,QAAA,SAAA,CAAU,gBAAiB,CAAA;AAAA,UACzB,UAAY,EAAA,MAAA;AAAA,UACZ,SAASC,yCAA2B,CAAA;AAAA,YAClC,aAAe,EAAAC,+BAAA;AAAA,YACf,uBAAyB,EAAA;AAAA,cACvB,GAAGC,6BAAA;AAAA,aACL;AAAA,WACD,CAAA;AAAA,SACF,CAAA,CAAA;AAAA,OACH;AAAA,KACD,CAAA,CAAA;AAAA,GACH;AACF,CAAC;;;;"}
\ No newline at end of file
diff --git a/dist/resolvers.cjs.js b/dist/resolvers.cjs.js
index 380a9624cb461b3782fc319d7722dc1da1c442d7..dc3ebe39b74807c3b0a94835030a89640d7ce976 100644
--- a/dist/resolvers.cjs.js
+++ b/dist/resolvers.cjs.js
@@ -6,5 +6,16 @@ exports.oidcSignInResolvers = void 0;
 ((oidcSignInResolvers2) => {
   oidcSignInResolvers2.emailLocalPartMatchingUserEntityName = pluginAuthNode.commonSignInResolvers.emailLocalPartMatchingUserEntityName;
   oidcSignInResolvers2.emailMatchingUserEntityProfileEmail = pluginAuthNode.commonSignInResolvers.emailMatchingUserEntityProfileEmail;
+  oidcSignInResolvers2.preferredUsernameMatchingUserEntityName = pluginAuthNode.createSignInResolverFactory({
+    create() {
+      return async (info, ctx) => {
+        const userId = info.result.fullProfile.userinfo.preferred_username;
+        if (!userId) {
+          throw new Error(`OIDC user profile does not contain a username`);
+        }
+        return ctx.signInWithCatalogUser({ entityRef: { name: userId } });
+      };
+    }
+  });
 })(exports.oidcSignInResolvers || (exports.oidcSignInResolvers = {}));
 //# sourceMappingURL=resolvers.cjs.js.map
diff --git a/dist/resolvers.cjs.js.map b/dist/resolvers.cjs.js.map
index b345faec13e95559fa23cb3fefb8d657b04a48ff..e631e22279a30f7efe136db9d0ae170bce1b329a 100644
--- a/dist/resolvers.cjs.js.map
+++ b/dist/resolvers.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"resolvers.cjs.js","sources":["../src/resolvers.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { commonSignInResolvers } from '@backstage/plugin-auth-node';\n\n/**\n * Available sign-in resolvers for the Oidc auth provider.\n *\n * @public\n */\nexport namespace oidcSignInResolvers {\n  /**\n   * A oidc resolver that looks up the user using the local part of\n   * their email address as the entity name.\n   */\n  export const emailLocalPartMatchingUserEntityName =\n    commonSignInResolvers.emailLocalPartMatchingUserEntityName;\n\n  /**\n   * A oidc resolver that looks up the user using their email address\n   * as email of the entity.\n   */\n  export const emailMatchingUserEntityProfileEmail =\n    commonSignInResolvers.emailMatchingUserEntityProfileEmail;\n}\n"],"names":["oidcSignInResolvers","commonSignInResolvers"],"mappings":";;;;AAuBiBA,qCAAA;AAAA,CAAV,CAAUA,oBAAV,KAAA;AAKE,EAAMA,oBAAAA,CAAA,uCACXC,oCAAsB,CAAA,oCAAA,CAAA;AAMjB,EAAMD,oBAAAA,CAAA,sCACXC,oCAAsB,CAAA,mCAAA,CAAA;AAAA,CAbT,EAAAD,2BAAA,KAAAA,2BAAA,GAAA,EAAA,CAAA,CAAA;;"}
\ No newline at end of file
+{"version":3,"file":"resolvers.cjs.js","sources":["../src/resolvers.ts"],"sourcesContent":["/*\r\n * Copyright 2023 The Backstage Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {\r\n  AuthResolverContext,\r\n  OAuthAuthenticatorResult,\r\n  SignInInfo,\r\n  commonSignInResolvers,\r\n  createSignInResolverFactory,\r\n} from '@backstage/plugin-auth-node';\r\nimport { OidcAuthResult } from './authenticator';\r\n\r\n/**\r\n * Available sign-in resolvers for the Oidc auth provider.\r\n *\r\n * @public\r\n */\r\nexport namespace oidcSignInResolvers {\r\n  /**\r\n   * A oidc resolver that looks up the user using the local part of\r\n   * their email address as the entity name.\r\n   */\r\n  export const emailLocalPartMatchingUserEntityName =\r\n    commonSignInResolvers.emailLocalPartMatchingUserEntityName;\r\n\r\n  /**\r\n   * A oidc resolver that looks up the user using their email address\r\n   * as email of the entity.\r\n   */\r\n  export const emailMatchingUserEntityProfileEmail =\r\n    commonSignInResolvers.emailMatchingUserEntityProfileEmail;\r\n\r\n  /**\r\n* A oidc resolver that looks up the user using their preferred username\r\n* as the entity name\r\n*/\r\n  export const preferredUsernameMatchingUserEntityName =\r\n    createSignInResolverFactory({\r\n      create() {\r\n        return async (\r\n          info: SignInInfo<OAuthAuthenticatorResult<OidcAuthResult>>,\r\n          ctx: AuthResolverContext,\r\n        ) => {\r\n          const userId = info.result.fullProfile.userinfo.preferred_username;\r\n\r\n          if (!userId) {\r\n            throw new Error(`OIDC user profile does not contain a username`);\r\n          }\r\n          return ctx.signInWithCatalogUser({ entityRef: { name: userId } });\r\n        };\r\n      },\r\n    });\r\n}\r\n\r\n"],"names":["oidcSignInResolvers","commonSignInResolvers","createSignInResolverFactory"],"mappings":";;;;AA8BiBA,qCAAA;AAAA,CAAV,CAAUA,oBAAV,KAAA;AAKE,EAAMA,oBAAAA,CAAA,uCACXC,oCAAsB,CAAA,oCAAA,CAAA;AAMjB,EAAMD,oBAAAA,CAAA,sCACXC,oCAAsB,CAAA,mCAAA,CAAA;AAMjB,EAAMD,oBAAAA,CAAA,0CACXE,0CAA4B,CAAA;AAAA,IAC1B,MAAS,GAAA;AACP,MAAO,OAAA,OACL,MACA,GACG,KAAA;AACH,QAAA,MAAM,MAAS,GAAA,IAAA,CAAK,MAAO,CAAA,WAAA,CAAY,QAAS,CAAA,kBAAA,CAAA;AAEhD,QAAA,IAAI,CAAC,MAAQ,EAAA;AACX,UAAM,MAAA,IAAI,MAAM,CAA+C,6CAAA,CAAA,CAAA,CAAA;AAAA,SACjE;AACA,QAAO,OAAA,GAAA,CAAI,sBAAsB,EAAE,SAAA,EAAW,EAAE,IAAM,EAAA,MAAA,IAAU,CAAA,CAAA;AAAA,OAClE,CAAA;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AAAA,CAlCY,EAAAF,2BAAA,KAAAA,2BAAA,GAAA,EAAA,CAAA,CAAA;;"}
\ No newline at end of file
