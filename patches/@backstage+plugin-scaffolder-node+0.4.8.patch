diff --git a/node_modules/@backstage/plugin-scaffolder-node/dist/index.d.ts b/node_modules/@backstage/plugin-scaffolder-node/dist/index.d.ts
index a2648fb..4f587b1 100644
--- a/node_modules/@backstage/plugin-scaffolder-node/dist/index.d.ts
+++ b/node_modules/@backstage/plugin-scaffolder-node/dist/index.d.ts
@@ -89,6 +89,7 @@ type TaskBrokerDispatchOptions = {
  * @public
  */
 interface TaskContext {
+    taskId: string;
     cancelSignal: AbortSignal;
     spec: TaskSpec;
     secrets?: TaskSecrets;
@@ -234,7 +235,7 @@ type TemplateActionOptions<TActionInput extends JsonObject = {}, TActionOutput e
  * Will convert zod schemas to json schemas for use throughout the system.
  * @public
  */
-declare const createTemplateAction: <TInputParams extends JsonObject = JsonObject, TOutputParams extends JsonObject = JsonObject, TInputSchema extends z.ZodType<any, z.ZodTypeDef, any> | Schema = {}, TOutputSchema extends z.ZodType<any, z.ZodTypeDef, any> | Schema = {}, TActionInput extends JsonObject = TInputSchema extends z.ZodType<any, any, infer IReturn> ? IReturn : TInputParams, TActionOutput extends JsonObject = TOutputSchema extends z.ZodType<any, any, infer IReturn_1> ? IReturn_1 : TOutputParams>(action: TemplateActionOptions<TActionInput, TActionOutput, TInputSchema, TOutputSchema>) => TemplateAction<TActionInput, TActionOutput>;
+declare const createTemplateAction: <TInputParams extends JsonObject = JsonObject, TOutputParams extends JsonObject = JsonObject, TInputSchema extends Schema | z.ZodType<any, z.ZodTypeDef, any> = {}, TOutputSchema extends Schema | z.ZodType<any, z.ZodTypeDef, any> = {}, TActionInput extends JsonObject = TInputSchema extends z.ZodType<any, any, infer IReturn> ? IReturn : TInputParams, TActionOutput extends JsonObject = TOutputSchema extends z.ZodType<any, any, infer IReturn_1> ? IReturn_1 : TOutputParams>(action: TemplateActionOptions<TActionInput, TActionOutput, TInputSchema, TOutputSchema>) => TemplateAction<TActionInput, TActionOutput>;
 
 /**
  * Options for {@link executeShellCommand}.
