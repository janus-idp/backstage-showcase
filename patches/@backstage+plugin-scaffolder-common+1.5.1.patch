diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js
index cf493d1..77e5ede 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js
@@ -1,7 +1,5 @@
 'use strict';
 
-Object.defineProperty(exports, '__esModule', { value: true });
-
 var pluginPermissionCommon = require('@backstage/plugin-permission-common');
 
 const RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = "scaffolder-template";
@@ -25,23 +23,48 @@ const templateStepReadPermission = pluginPermissionCommon.createPermission({
   },
   resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE
 });
-const scaffolderPermissions = [
-  actionExecutePermission,
-  templateParameterReadPermission,
-  templateStepReadPermission
-];
+const taskReadPermission = pluginPermissionCommon.createPermission({
+  name: "scaffolder.task.read",
+  attributes: {
+    action: "read"
+  }
+});
+const taskCreatePermission = pluginPermissionCommon.createPermission({
+  name: "scaffolder.task.create",
+  attributes: {
+    action: "create"
+  }
+});
+const taskCancelPermission = pluginPermissionCommon.createPermission({
+  name: "scaffolder.task.cancel",
+  attributes: {}
+});
 const scaffolderTemplatePermissions = [
   templateParameterReadPermission,
   templateStepReadPermission
 ];
 const scaffolderActionPermissions = [actionExecutePermission];
+const scaffolderTaskPermissions = [
+  taskCancelPermission,
+  taskCreatePermission,
+  taskReadPermission
+];
+const scaffolderPermissions = [
+  ...scaffolderTemplatePermissions,
+  ...scaffolderActionPermissions,
+  ...scaffolderTaskPermissions
+];
 
 exports.RESOURCE_TYPE_SCAFFOLDER_ACTION = RESOURCE_TYPE_SCAFFOLDER_ACTION;
 exports.RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = RESOURCE_TYPE_SCAFFOLDER_TEMPLATE;
 exports.actionExecutePermission = actionExecutePermission;
 exports.scaffolderActionPermissions = scaffolderActionPermissions;
 exports.scaffolderPermissions = scaffolderPermissions;
+exports.scaffolderTaskPermissions = scaffolderTaskPermissions;
 exports.scaffolderTemplatePermissions = scaffolderTemplatePermissions;
+exports.taskCancelPermission = taskCancelPermission;
+exports.taskCreatePermission = taskCreatePermission;
+exports.taskReadPermission = taskReadPermission;
 exports.templateParameterReadPermission = templateParameterReadPermission;
 exports.templateStepReadPermission = templateStepReadPermission;
 //# sourceMappingURL=alpha.cjs.js.map
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js.map
index dd40a24..d32e739 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js.map
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"alpha.cjs.js","sources":["../src/permissions.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPermission } from '@backstage/plugin-permission-common';\n\n/**\n * Permission resource type which corresponds to a scaffolder templates.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = 'scaffolder-template';\n\n/**\n * Permission resource type which corresponds to a scaffolder action.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_ACTION = 'scaffolder-action';\n\n/**\n * This permission is used to authorize actions that involve executing\n * an action from a template.\n *\n * @alpha\n */\nexport const actionExecutePermission = createPermission({\n  name: 'scaffolder.action.execute',\n  attributes: {},\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more parameters from a template.\n *\n * If this permission is not authorized, it will appear that the\n * parameter does not exist in the template — both in the frontend\n * and in API responses.\n *\n * @alpha\n */\nexport const templateParameterReadPermission = createPermission({\n  name: 'scaffolder.template.parameter.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more steps from a template.\n *\n * If this permission is not authorized, it will appear that the\n * step does not exist in the template — both in the frontend\n * and in API responses. Steps will also not be executed.\n *\n * @alpha\n */\nexport const templateStepReadPermission = createPermission({\n  name: 'scaffolder.template.step.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * List of all the scaffolder permissions\n * @alpha\n */\nexport const scaffolderPermissions = [\n  actionExecutePermission,\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with template steps and parameters.\n * @alpha\n */\nexport const scaffolderTemplatePermissions = [\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder actions.\n * @alpha\n */\nexport const scaffolderActionPermissions = [actionExecutePermission];\n"],"names":["createPermission"],"mappings":";;;;;;AAuBO,MAAM,iCAAoC,GAAA,sBAAA;AAO1C,MAAM,+BAAkC,GAAA,oBAAA;AAQxC,MAAM,0BAA0BA,uCAAiB,CAAA;AAAA,EACtD,IAAM,EAAA,2BAAA;AAAA,EACN,YAAY,EAAC;AAAA,EACb,YAAc,EAAA,+BAAA;AAChB,CAAC,EAAA;AAYM,MAAM,kCAAkCA,uCAAiB,CAAA;AAAA,EAC9D,IAAM,EAAA,oCAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAYM,MAAM,6BAA6BA,uCAAiB,CAAA;AAAA,EACzD,IAAM,EAAA,+BAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAMM,MAAM,qBAAwB,GAAA;AAAA,EACnC,uBAAA;AAAA,EACA,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMO,MAAM,6BAAgC,GAAA;AAAA,EAC3C,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMa,MAAA,2BAAA,GAA8B,CAAC,uBAAuB;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"alpha.cjs.js","sources":["../src/permissions.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPermission } from '@backstage/plugin-permission-common';\n\n/**\n * Permission resource type which corresponds to a scaffolder templates.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = 'scaffolder-template';\n\n/**\n * Permission resource type which corresponds to a scaffolder action.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_ACTION = 'scaffolder-action';\n\n/**\n * This permission is used to authorize actions that involve executing\n * an action from a template.\n *\n * @alpha\n */\nexport const actionExecutePermission = createPermission({\n  name: 'scaffolder.action.execute',\n  attributes: {},\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more parameters from a template.\n *\n * If this permission is not authorized, it will appear that the\n * parameter does not exist in the template — both in the frontend\n * and in API responses.\n *\n * @alpha\n */\nexport const templateParameterReadPermission = createPermission({\n  name: 'scaffolder.template.parameter.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more steps from a template.\n *\n * If this permission is not authorized, it will appear that the\n * step does not exist in the template — both in the frontend\n * and in API responses. Steps will also not be executed.\n *\n * @alpha\n */\nexport const templateStepReadPermission = createPermission({\n  name: 'scaffolder.template.step.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading one or more tasks in the scaffolder,\n * and reading logs of tasks\n *\n * @alpha\n */\nexport const taskReadPermission = createPermission({\n  name: 'scaffolder.task.read',\n  attributes: {\n    action: 'read',\n  },\n});\n\n/**\n * This permission is used to authorize actions that involve the creation of tasks in the scaffolder.\n *\n * @alpha\n */\nexport const taskCreatePermission = createPermission({\n  name: 'scaffolder.task.create',\n  attributes: {\n    action: 'create',\n  },\n});\n\n/**\n * This permission is used to authorize actions that involve the cancellation of tasks in the scaffolder.\n *\n * @alpha\n */\nexport const taskCancelPermission = createPermission({\n  name: 'scaffolder.task.cancel',\n  attributes: {},\n});\n\n/**\n * List of the scaffolder permissions that are associated with template steps and parameters.\n * @alpha\n */\nexport const scaffolderTemplatePermissions = [\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder actions.\n * @alpha\n */\nexport const scaffolderActionPermissions = [actionExecutePermission];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder tasks.\n * @alpha\n */\nexport const scaffolderTaskPermissions = [\n  taskCancelPermission,\n  taskCreatePermission,\n  taskReadPermission,\n];\n\n/**\n * List of all the scaffolder permissions\n * @alpha\n */\nexport const scaffolderPermissions = [\n  ...scaffolderTemplatePermissions,\n  ...scaffolderActionPermissions,\n  ...scaffolderTaskPermissions,\n];\n"],"names":["createPermission"],"mappings":";;;;AAuBO,MAAM,iCAAoC,GAAA,sBAAA;AAO1C,MAAM,+BAAkC,GAAA,oBAAA;AAQxC,MAAM,0BAA0BA,uCAAiB,CAAA;AAAA,EACtD,IAAM,EAAA,2BAAA;AAAA,EACN,YAAY,EAAC;AAAA,EACb,YAAc,EAAA,+BAAA;AAChB,CAAC,EAAA;AAYM,MAAM,kCAAkCA,uCAAiB,CAAA;AAAA,EAC9D,IAAM,EAAA,oCAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAYM,MAAM,6BAA6BA,uCAAiB,CAAA;AAAA,EACzD,IAAM,EAAA,+BAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAQM,MAAM,qBAAqBA,uCAAiB,CAAA;AAAA,EACjD,IAAM,EAAA,sBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AACF,CAAC,EAAA;AAOM,MAAM,uBAAuBA,uCAAiB,CAAA;AAAA,EACnD,IAAM,EAAA,wBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,GACV;AACF,CAAC,EAAA;AAOM,MAAM,uBAAuBA,uCAAiB,CAAA;AAAA,EACnD,IAAM,EAAA,wBAAA;AAAA,EACN,YAAY,EAAC;AACf,CAAC,EAAA;AAMM,MAAM,6BAAgC,GAAA;AAAA,EAC3C,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMa,MAAA,2BAAA,GAA8B,CAAC,uBAAuB,EAAA;AAM5D,MAAM,yBAA4B,GAAA;AAAA,EACvC,oBAAA;AAAA,EACA,oBAAA;AAAA,EACA,kBAAA;AACF,EAAA;AAMO,MAAM,qBAAwB,GAAA;AAAA,EACnC,GAAG,6BAAA;AAAA,EACH,GAAG,2BAAA;AAAA,EACH,GAAG,yBAAA;AACL;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js
index 79e7cd8..1f9da66 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js
@@ -21,16 +21,37 @@ const templateStepReadPermission = createPermission({
   },
   resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE
 });
-const scaffolderPermissions = [
-  actionExecutePermission,
-  templateParameterReadPermission,
-  templateStepReadPermission
-];
+const taskReadPermission = createPermission({
+  name: "scaffolder.task.read",
+  attributes: {
+    action: "read"
+  }
+});
+const taskCreatePermission = createPermission({
+  name: "scaffolder.task.create",
+  attributes: {
+    action: "create"
+  }
+});
+const taskCancelPermission = createPermission({
+  name: "scaffolder.task.cancel",
+  attributes: {}
+});
 const scaffolderTemplatePermissions = [
   templateParameterReadPermission,
   templateStepReadPermission
 ];
 const scaffolderActionPermissions = [actionExecutePermission];
+const scaffolderTaskPermissions = [
+  taskCancelPermission,
+  taskCreatePermission,
+  taskReadPermission
+];
+const scaffolderPermissions = [
+  ...scaffolderTemplatePermissions,
+  ...scaffolderActionPermissions,
+  ...scaffolderTaskPermissions
+];
 
-export { RESOURCE_TYPE_SCAFFOLDER_ACTION, RESOURCE_TYPE_SCAFFOLDER_TEMPLATE, actionExecutePermission, scaffolderActionPermissions, scaffolderPermissions, scaffolderTemplatePermissions, templateParameterReadPermission, templateStepReadPermission };
+export { RESOURCE_TYPE_SCAFFOLDER_ACTION, RESOURCE_TYPE_SCAFFOLDER_TEMPLATE, actionExecutePermission, scaffolderActionPermissions, scaffolderPermissions, scaffolderTaskPermissions, scaffolderTemplatePermissions, taskCancelPermission, taskCreatePermission, taskReadPermission, templateParameterReadPermission, templateStepReadPermission };
 //# sourceMappingURL=alpha.esm.js.map
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js.map b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js.map
index 37b2b4f..95bdee0 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js.map
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/alpha.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"alpha.esm.js","sources":["../src/permissions.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPermission } from '@backstage/plugin-permission-common';\n\n/**\n * Permission resource type which corresponds to a scaffolder templates.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = 'scaffolder-template';\n\n/**\n * Permission resource type which corresponds to a scaffolder action.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_ACTION = 'scaffolder-action';\n\n/**\n * This permission is used to authorize actions that involve executing\n * an action from a template.\n *\n * @alpha\n */\nexport const actionExecutePermission = createPermission({\n  name: 'scaffolder.action.execute',\n  attributes: {},\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more parameters from a template.\n *\n * If this permission is not authorized, it will appear that the\n * parameter does not exist in the template — both in the frontend\n * and in API responses.\n *\n * @alpha\n */\nexport const templateParameterReadPermission = createPermission({\n  name: 'scaffolder.template.parameter.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more steps from a template.\n *\n * If this permission is not authorized, it will appear that the\n * step does not exist in the template — both in the frontend\n * and in API responses. Steps will also not be executed.\n *\n * @alpha\n */\nexport const templateStepReadPermission = createPermission({\n  name: 'scaffolder.template.step.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * List of all the scaffolder permissions\n * @alpha\n */\nexport const scaffolderPermissions = [\n  actionExecutePermission,\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with template steps and parameters.\n * @alpha\n */\nexport const scaffolderTemplatePermissions = [\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder actions.\n * @alpha\n */\nexport const scaffolderActionPermissions = [actionExecutePermission];\n"],"names":[],"mappings":";;AAuBO,MAAM,iCAAoC,GAAA,sBAAA;AAO1C,MAAM,+BAAkC,GAAA,oBAAA;AAQxC,MAAM,0BAA0B,gBAAiB,CAAA;AAAA,EACtD,IAAM,EAAA,2BAAA;AAAA,EACN,YAAY,EAAC;AAAA,EACb,YAAc,EAAA,+BAAA;AAChB,CAAC,EAAA;AAYM,MAAM,kCAAkC,gBAAiB,CAAA;AAAA,EAC9D,IAAM,EAAA,oCAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAYM,MAAM,6BAA6B,gBAAiB,CAAA;AAAA,EACzD,IAAM,EAAA,+BAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAMM,MAAM,qBAAwB,GAAA;AAAA,EACnC,uBAAA;AAAA,EACA,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMO,MAAM,6BAAgC,GAAA;AAAA,EAC3C,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMa,MAAA,2BAAA,GAA8B,CAAC,uBAAuB;;;;"}
\ No newline at end of file
+{"version":3,"file":"alpha.esm.js","sources":["../src/permissions.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPermission } from '@backstage/plugin-permission-common';\n\n/**\n * Permission resource type which corresponds to a scaffolder templates.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_TEMPLATE = 'scaffolder-template';\n\n/**\n * Permission resource type which corresponds to a scaffolder action.\n *\n * @alpha\n */\nexport const RESOURCE_TYPE_SCAFFOLDER_ACTION = 'scaffolder-action';\n\n/**\n * This permission is used to authorize actions that involve executing\n * an action from a template.\n *\n * @alpha\n */\nexport const actionExecutePermission = createPermission({\n  name: 'scaffolder.action.execute',\n  attributes: {},\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more parameters from a template.\n *\n * If this permission is not authorized, it will appear that the\n * parameter does not exist in the template — both in the frontend\n * and in API responses.\n *\n * @alpha\n */\nexport const templateParameterReadPermission = createPermission({\n  name: 'scaffolder.template.parameter.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading\n * one or more steps from a template.\n *\n * If this permission is not authorized, it will appear that the\n * step does not exist in the template — both in the frontend\n * and in API responses. Steps will also not be executed.\n *\n * @alpha\n */\nexport const templateStepReadPermission = createPermission({\n  name: 'scaffolder.template.step.read',\n  attributes: {\n    action: 'read',\n  },\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n});\n\n/**\n * This permission is used to authorize actions that involve reading one or more tasks in the scaffolder,\n * and reading logs of tasks\n *\n * @alpha\n */\nexport const taskReadPermission = createPermission({\n  name: 'scaffolder.task.read',\n  attributes: {\n    action: 'read',\n  },\n});\n\n/**\n * This permission is used to authorize actions that involve the creation of tasks in the scaffolder.\n *\n * @alpha\n */\nexport const taskCreatePermission = createPermission({\n  name: 'scaffolder.task.create',\n  attributes: {\n    action: 'create',\n  },\n});\n\n/**\n * This permission is used to authorize actions that involve the cancellation of tasks in the scaffolder.\n *\n * @alpha\n */\nexport const taskCancelPermission = createPermission({\n  name: 'scaffolder.task.cancel',\n  attributes: {},\n});\n\n/**\n * List of the scaffolder permissions that are associated with template steps and parameters.\n * @alpha\n */\nexport const scaffolderTemplatePermissions = [\n  templateParameterReadPermission,\n  templateStepReadPermission,\n];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder actions.\n * @alpha\n */\nexport const scaffolderActionPermissions = [actionExecutePermission];\n\n/**\n * List of the scaffolder permissions that are associated with scaffolder tasks.\n * @alpha\n */\nexport const scaffolderTaskPermissions = [\n  taskCancelPermission,\n  taskCreatePermission,\n  taskReadPermission,\n];\n\n/**\n * List of all the scaffolder permissions\n * @alpha\n */\nexport const scaffolderPermissions = [\n  ...scaffolderTemplatePermissions,\n  ...scaffolderActionPermissions,\n  ...scaffolderTaskPermissions,\n];\n"],"names":[],"mappings":";;AAuBO,MAAM,iCAAoC,GAAA,sBAAA;AAO1C,MAAM,+BAAkC,GAAA,oBAAA;AAQxC,MAAM,0BAA0B,gBAAiB,CAAA;AAAA,EACtD,IAAM,EAAA,2BAAA;AAAA,EACN,YAAY,EAAC;AAAA,EACb,YAAc,EAAA,+BAAA;AAChB,CAAC,EAAA;AAYM,MAAM,kCAAkC,gBAAiB,CAAA;AAAA,EAC9D,IAAM,EAAA,oCAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAYM,MAAM,6BAA6B,gBAAiB,CAAA;AAAA,EACzD,IAAM,EAAA,+BAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AAAA,EACA,YAAc,EAAA,iCAAA;AAChB,CAAC,EAAA;AAQM,MAAM,qBAAqB,gBAAiB,CAAA;AAAA,EACjD,IAAM,EAAA,sBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,MAAA;AAAA,GACV;AACF,CAAC,EAAA;AAOM,MAAM,uBAAuB,gBAAiB,CAAA;AAAA,EACnD,IAAM,EAAA,wBAAA;AAAA,EACN,UAAY,EAAA;AAAA,IACV,MAAQ,EAAA,QAAA;AAAA,GACV;AACF,CAAC,EAAA;AAOM,MAAM,uBAAuB,gBAAiB,CAAA;AAAA,EACnD,IAAM,EAAA,wBAAA;AAAA,EACN,YAAY,EAAC;AACf,CAAC,EAAA;AAMM,MAAM,6BAAgC,GAAA;AAAA,EAC3C,+BAAA;AAAA,EACA,0BAAA;AACF,EAAA;AAMa,MAAA,2BAAA,GAA8B,CAAC,uBAAuB,EAAA;AAM5D,MAAM,yBAA4B,GAAA;AAAA,EACvC,oBAAA;AAAA,EACA,oBAAA;AAAA,EACA,kBAAA;AACF,EAAA;AAMO,MAAM,qBAAwB,GAAA;AAAA,EACnC,GAAG,6BAAA;AAAA,EACH,GAAG,2BAAA;AAAA,EACH,GAAG,yBAAA;AACL;;;;"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js b/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js
index 4b16cd2..1f2b702 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js
@@ -1,7 +1,5 @@
 'use strict';
 
-Object.defineProperty(exports, '__esModule', { value: true });
-
 var catalogModel = require('@backstage/catalog-model');
 
 var $schema = "http://json-schema.org/draft-07/schema";
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js.map
index 6987e0c..b00a53a 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js.map
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/index.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs.js","sources":["../src/TemplateEntityV1beta3.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  entityKindSchemaValidator,\n  KindValidator,\n} from '@backstage/catalog-model';\nimport { JsonObject } from '@backstage/types';\nimport schema from './Template.v1beta3.schema.json';\n\n/**\n * Backstage catalog Template kind Entity. Templates are used by the Scaffolder\n * plugin to create new entities, such as Components.\n *\n * @public\n */\nexport interface TemplateEntityV1beta3 extends Entity {\n  /**\n   * The apiVersion string of the TaskSpec.\n   */\n  apiVersion: 'scaffolder.backstage.io/v1beta3';\n  /**\n   * The kind of the entity\n   */\n  kind: 'Template';\n  /**\n   * The specification of the Template Entity\n   */\n  spec: {\n    /**\n     * The type that the Template will create. For example service, website or library.\n     */\n    type: string;\n\n    /**\n     * Template specific configuration of the presentation layer.\n     */\n    presentation?: TemplatePresentationV1beta3;\n\n    /**\n     * Recovery strategy for the template\n     */\n    EXPERIMENTAL_recovery?: TemplateRecoveryV1beta3;\n\n    /**\n     * This is a JSONSchema or an array of JSONSchema's which is used to render a form in the frontend\n     * to collect user input and validate it against that schema. This can then be used in the `steps` part below to template\n     * variables passed from the user into each action in the template.\n     */\n    parameters?: TemplateParametersV1beta3 | TemplateParametersV1beta3[];\n    /**\n     * A list of steps to be executed in sequence which are defined by the template. These steps are a list of the underlying\n     * javascript action and some optional input parameters that may or may not have been collected from the end user.\n     */\n    steps: Array<TemplateEntityStepV1beta3>;\n    /**\n     * The output is an object where template authors can pull out information from template actions and return them in a known standard way.\n     */\n    output?: { [name: string]: string };\n    /**\n     * The owner entityRef of the TemplateEntity\n     */\n    owner?: string;\n  };\n}\n\n/**\n * Depends on how you designed your task you might tailor the behaviour for each of them.\n *\n * @public\n */\nexport interface TemplateRecoveryV1beta3 extends JsonObject {\n  /**\n   *\n   * none - not recover, let the task be marked as failed\n   * startOver - do recover, start the execution of the task from the first step.\n   *\n   * @public\n   */\n  EXPERIMENTAL_strategy?: 'none' | 'startOver';\n}\n\n/**\n * The presentation of the template.\n *\n * @public\n */\nexport interface TemplatePresentationV1beta3 extends JsonObject {\n  /**\n   * Overrides default buttons' text\n   */\n  buttonLabels?: {\n    /**\n     * The text for the button which leads to the previous template page\n     */\n    backButtonText?: string;\n    /**\n     * The text for the button which starts the execution of the template\n     */\n    createButtonText?: string;\n    /**\n     * The text for the button which opens template's review/summary\n     */\n    reviewButtonText?: string;\n  };\n}\n\n/**\n * Step that is part of a Template Entity.\n *\n * @public\n */\nexport interface TemplateEntityStepV1beta3 extends JsonObject {\n  id?: string;\n  name?: string;\n  action: string;\n  input?: JsonObject;\n  if?: string | boolean;\n  'backstage:permissions'?: TemplatePermissionsV1beta3;\n}\n\n/**\n * Parameter that is part of a Template Entity.\n *\n * @public\n */\nexport interface TemplateParametersV1beta3 extends JsonObject {\n  'backstage:permissions'?: TemplatePermissionsV1beta3;\n}\n\n/**\n *  Access control properties for parts of a template.\n *\n * @public\n */\nexport interface TemplatePermissionsV1beta3 extends JsonObject {\n  tags?: string[];\n}\n\nconst validator = entityKindSchemaValidator(schema);\n\n/**\n * Entity data validator for {@link TemplateEntityV1beta3}.\n *\n * @public\n */\nexport const templateEntityV1beta3Validator: KindValidator = {\n  // TODO(freben): Emulate the old KindValidator until we fix that type\n  async check(data: Entity) {\n    return validator(data) === data;\n  },\n};\n\n/**\n * Typeguard for filtering entities and ensuring v1beta3 entities\n * @public\n */\nexport const isTemplateEntityV1beta3 = (\n  entity: Entity,\n): entity is TemplateEntityV1beta3 =>\n  entity.apiVersion === 'scaffolder.backstage.io/v1beta3' &&\n  entity.kind === 'Template';\n"],"names":["entityKindSchemaValidator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,MAAM,SAAA,GAAYA,uCAA0B,MAAM,CAAA,CAAA;AAO3C,MAAM,8BAAgD,GAAA;AAAA;AAAA,EAE3D,MAAM,MAAM,IAAc,EAAA;AACxB,IAAO,OAAA,SAAA,CAAU,IAAI,CAAM,KAAA,IAAA,CAAA;AAAA,GAC7B;AACF,EAAA;AAMO,MAAM,0BAA0B,CACrC,MAAA,KAEA,OAAO,UAAe,KAAA,iCAAA,IACtB,OAAO,IAAS,KAAA;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.cjs.js","sources":["../src/TemplateEntityV1beta3.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Entity,\n  entityKindSchemaValidator,\n  KindValidator,\n} from '@backstage/catalog-model';\nimport { JsonObject } from '@backstage/types';\nimport schema from './Template.v1beta3.schema.json';\n\n/**\n * Backstage catalog Template kind Entity. Templates are used by the Scaffolder\n * plugin to create new entities, such as Components.\n *\n * @public\n */\nexport interface TemplateEntityV1beta3 extends Entity {\n  /**\n   * The apiVersion string of the TaskSpec.\n   */\n  apiVersion: 'scaffolder.backstage.io/v1beta3';\n  /**\n   * The kind of the entity\n   */\n  kind: 'Template';\n  /**\n   * The specification of the Template Entity\n   */\n  spec: {\n    /**\n     * The type that the Template will create. For example service, website or library.\n     */\n    type: string;\n\n    /**\n     * Template specific configuration of the presentation layer.\n     */\n    presentation?: TemplatePresentationV1beta3;\n\n    /**\n     * Recovery strategy for the template\n     */\n    EXPERIMENTAL_recovery?: TemplateRecoveryV1beta3;\n\n    /**\n     * This is a JSONSchema or an array of JSONSchema's which is used to render a form in the frontend\n     * to collect user input and validate it against that schema. This can then be used in the `steps` part below to template\n     * variables passed from the user into each action in the template.\n     */\n    parameters?: TemplateParametersV1beta3 | TemplateParametersV1beta3[];\n    /**\n     * A list of steps to be executed in sequence which are defined by the template. These steps are a list of the underlying\n     * javascript action and some optional input parameters that may or may not have been collected from the end user.\n     */\n    steps: Array<TemplateEntityStepV1beta3>;\n    /**\n     * The output is an object where template authors can pull out information from template actions and return them in a known standard way.\n     */\n    output?: { [name: string]: string };\n    /**\n     * The owner entityRef of the TemplateEntity\n     */\n    owner?: string;\n  };\n}\n\n/**\n * Depends on how you designed your task you might tailor the behaviour for each of them.\n *\n * @public\n */\nexport interface TemplateRecoveryV1beta3 extends JsonObject {\n  /**\n   *\n   * none - not recover, let the task be marked as failed\n   * startOver - do recover, start the execution of the task from the first step.\n   *\n   * @public\n   */\n  EXPERIMENTAL_strategy?: 'none' | 'startOver';\n}\n\n/**\n * The presentation of the template.\n *\n * @public\n */\nexport interface TemplatePresentationV1beta3 extends JsonObject {\n  /**\n   * Overrides default buttons' text\n   */\n  buttonLabels?: {\n    /**\n     * The text for the button which leads to the previous template page\n     */\n    backButtonText?: string;\n    /**\n     * The text for the button which starts the execution of the template\n     */\n    createButtonText?: string;\n    /**\n     * The text for the button which opens template's review/summary\n     */\n    reviewButtonText?: string;\n  };\n}\n\n/**\n * Step that is part of a Template Entity.\n *\n * @public\n */\nexport interface TemplateEntityStepV1beta3 extends JsonObject {\n  id?: string;\n  name?: string;\n  action: string;\n  input?: JsonObject;\n  if?: string | boolean;\n  'backstage:permissions'?: TemplatePermissionsV1beta3;\n}\n\n/**\n * Parameter that is part of a Template Entity.\n *\n * @public\n */\nexport interface TemplateParametersV1beta3 extends JsonObject {\n  'backstage:permissions'?: TemplatePermissionsV1beta3;\n}\n\n/**\n *  Access control properties for parts of a template.\n *\n * @public\n */\nexport interface TemplatePermissionsV1beta3 extends JsonObject {\n  tags?: string[];\n}\n\nconst validator = entityKindSchemaValidator(schema);\n\n/**\n * Entity data validator for {@link TemplateEntityV1beta3}.\n *\n * @public\n */\nexport const templateEntityV1beta3Validator: KindValidator = {\n  // TODO(freben): Emulate the old KindValidator until we fix that type\n  async check(data: Entity) {\n    return validator(data) === data;\n  },\n};\n\n/**\n * Typeguard for filtering entities and ensuring v1beta3 entities\n * @public\n */\nexport const isTemplateEntityV1beta3 = (\n  entity: Entity,\n): entity is TemplateEntityV1beta3 =>\n  entity.apiVersion === 'scaffolder.backstage.io/v1beta3' &&\n  entity.kind === 'Template';\n"],"names":["entityKindSchemaValidator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA,MAAM,SAAA,GAAYA,uCAA0B,MAAM,CAAA,CAAA;AAO3C,MAAM,8BAAgD,GAAA;AAAA;AAAA,EAE3D,MAAM,MAAM,IAAc,EAAA;AACxB,IAAO,OAAA,SAAA,CAAU,IAAI,CAAM,KAAA,IAAA,CAAA;AAAA,GAC7B;AACF,EAAA;AAMO,MAAM,0BAA0B,CACrC,MAAA,KAEA,OAAO,UAAe,KAAA,iCAAA,IACtB,OAAO,IAAS,KAAA;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-common/dist/index.d.ts b/node_modules/@backstage/plugin-scaffolder-common/dist/index.d.ts
index 4903b32..df93489 100644
--- a/node_modules/@backstage/plugin-scaffolder-common/dist/index.d.ts
+++ b/node_modules/@backstage/plugin-scaffolder-common/dist/index.d.ts
@@ -270,4 +270,4 @@ declare const templateEntityV1beta3Validator: KindValidator;
  */
 declare const isTemplateEntityV1beta3: (entity: Entity) => entity is TemplateEntityV1beta3;
 
-export { TaskRecoverStrategy, TaskRecovery, TaskSpec, TaskSpecV1beta3, TaskStep, TemplateEntityStepV1beta3, TemplateEntityV1beta3, TemplateInfo, TemplateParametersV1beta3, TemplatePermissionsV1beta3, TemplatePresentationV1beta3, TemplateRecoveryV1beta3, isTemplateEntityV1beta3, templateEntityV1beta3Validator };
+export { type TaskRecoverStrategy, type TaskRecovery, type TaskSpec, type TaskSpecV1beta3, type TaskStep, type TemplateEntityStepV1beta3, type TemplateEntityV1beta3, type TemplateInfo, type TemplateParametersV1beta3, type TemplatePermissionsV1beta3, type TemplatePresentationV1beta3, type TemplateRecoveryV1beta3, isTemplateEntityV1beta3, templateEntityV1beta3Validator };
