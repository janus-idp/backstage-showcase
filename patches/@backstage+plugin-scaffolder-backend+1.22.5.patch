diff --git a/node_modules/@backstage/plugin-scaffolder-backend/README.md b/node_modules/@backstage/plugin-scaffolder-backend/README.md
index 0aa57fd..d760b0f 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/README.md
+++ b/node_modules/@backstage/plugin-scaffolder-backend/README.md
@@ -1,9 +1,7 @@
 # Scaffolder Backend
 
-This is the backend for the default Backstage [software
-templates](https://backstage.io/docs/features/software-templates/).
-This provides the API for the frontend [scaffolder
-plugin](https://github.com/backstage/backstage/tree/master/plugins/scaffolder),
+This is the backend for the default Backstage [software templates](https://backstage.io/docs/features/software-templates/).
+This provides the API for the frontend [scaffolder plugin](https://github.com/backstage/backstage/tree/master/plugins/scaffolder),
 as well as the built-in template actions, tasks and stages.
 
 ## Installation
@@ -24,12 +22,19 @@ restoring the plugin, if you previously removed it.
 yarn --cwd packages/backend add @backstage/plugin-scaffolder-backend
 ```
 
-### Adding the plugin to your `packages/backend`
+Then add the plugin to your backend, typically in `packages/backend/src/index.ts`:
 
-You'll need to add the plugin to the router in your `backend` package. You can
-do this by creating a file called `packages/backend/src/plugins/scaffolder.ts`
-with contents matching [scaffolder.ts in the create-app
-template](https://github.com/backstage/backstage/blob/master/packages/create-app/templates/default-app/packages/backend/src/plugins/scaffolder.ts).
+```ts
+const backend = createBackend();
+// ...
+backend.add(import('@backstage/plugin-scaffolder-backend/alpha'));
+```
+
+#### Old backend system
+
+In the old backend system there's a bit more wiring required. You'll need to
+create a file called `packages/backend/src/plugins/scaffolder.ts`
+with contents matching [scaffolder.ts in the create-app template](https://github.com/backstage/backstage/blob/ad9314d3a7e0405719ba93badf96e97adde8ef83/packages/create-app/templates/default-app/packages/backend/src/plugins/scaffolder.ts).
 
 With the `scaffolder.ts` router setup in place, add the router to
 `packages/backend/src/index.ts`:
@@ -54,10 +59,7 @@ async function main() {
 ### Adding templates
 
 At this point the scaffolder backend is installed in your backend package, but
-you will not have any templates available to use. These need to be [added to the
-software
-catalog](https://backstage.io/docs/features/software-templates/adding-templates).
+you will not have any templates available to use. These need to be [added to the software catalog](https://backstage.io/docs/features/software-templates/adding-templates).
 
 To get up and running and try out some templates quickly, you can or copy the
-catalog locations from the [create-app
-template](https://github.com/backstage/backstage/blob/master/packages/create-app/templates/default-app/app-config.yaml.hbs).
+catalog locations from the [create-app template](https://github.com/backstage/backstage/blob/master/packages/create-app/templates/default-app/app-config.yaml.hbs).
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/config.d.ts b/node_modules/@backstage/plugin-scaffolder-backend/config.d.ts
index 477defe..754eedb 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/config.d.ts
+++ b/node_modules/@backstage/plugin-scaffolder-backend/config.d.ts
@@ -47,6 +47,11 @@ export interface Config {
      */
     EXPERIMENTAL_recoverTasks?: boolean;
 
+    /**
+     * Sets the serialization of the workspace to have an ability to rerun the failed task.
+     */
+    EXPERIMENTAL_workspaceSerialization?: boolean;
+
     /**
      * Every task which is in progress state and having a last heartbeat longer than a specified timeout is going to
      * be attempted to recover.
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js b/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js
index 472c174..227b56a 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js
@@ -4,7 +4,7 @@ Object.defineProperty(exports, '__esModule', { value: true });
 
 var alpha = require('@backstage/plugin-scaffolder-common/alpha');
 var pluginPermissionNode = require('@backstage/plugin-permission-node');
-var router = require('./cjs/router-CDFi_apW.cjs.js');
+var router = require('./cjs/router-MKDOtEGf.cjs.js');
 var backendPluginApi = require('@backstage/backend-plugin-api');
 var backendCommon = require('@backstage/backend-common');
 var integration = require('@backstage/integration');
@@ -39,12 +39,16 @@ require('isbinaryfile');
 require('isolated-vm');
 require('lodash/get');
 require('uuid');
+require('tar');
+require('concat-stream');
+require('util');
+require('stream');
 require('winston');
 require('nunjucks');
-require('stream');
 require('prom-client');
 require('@backstage/plugin-permission-common');
 require('winston-transport');
+require('triple-beam');
 require('url');
 require('os');
 
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js.map
index de96d95..b71c54e 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js.map
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/alpha.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"alpha.cjs.js","sources":["../src/service/conditionExports.ts","../src/ScaffolderPlugin.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport { createConditionExports } from '@backstage/plugin-permission-node';\nimport { scaffolderTemplateRules, scaffolderActionRules } from './rules';\n\nconst templateConditionExports = createConditionExports({\n  pluginId: 'scaffolder',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  rules: scaffolderTemplateRules,\n});\n\nconst actionsConditionExports = createConditionExports({\n  pluginId: 'scaffolder',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  rules: scaffolderActionRules,\n});\n\n/**\n * `createScaffolderTemplateConditionalDecision` can be used when authoring policies to\n * create conditional decisions. It requires a permission of type\n * `ResourcePermission<'scaffolder-template'>` to be passed as the first parameter.\n * It's recommended that you use the provided `isResourcePermission` and\n * `isPermission` helper methods to narrow the type of the permission passed to\n * the handle method as shown below.\n *\n * ```\n * // MyAuthorizationPolicy.ts\n * ...\n * import { createScaffolderPolicyDecision } from '@backstage/plugin-scaffolder-backend';\n * import { RESOURCE_TYPE_SCAFFOLDER_TEMPLATE } from '@backstage/plugin-scaffolder-common';\n *\n * class MyAuthorizationPolicy implements PermissionPolicy {\n *   async handle(request, user) {\n *    ...\n *\n *    if (isResourcePermission(request.permission, RESOURCE_TYPE_SCAFFOLDER_TEMPLATE)) {\n *      return createScaffolderConditionalDecision(\n *        request.permission,\n *        { anyOf: [...insert conditions here...] }\n *      );\n *    }\n *\n *    ...\n * }\n *\n * ```\n *\n * @alpha\n */\nexport const createScaffolderTemplateConditionalDecision =\n  templateConditionExports.createConditionalDecision;\n\n/**\n * These conditions are used when creating conditional decisions for scaffolder\n * templates that are returned by authorization policies.\n *\n * @alpha\n */\nexport const scaffolderTemplateConditions = templateConditionExports.conditions;\n\n/**\n * @alpha\n */\nexport const createScaffolderActionConditionalDecision =\n  actionsConditionExports.createConditionalDecision;\n\n/**\n *\n * These conditions are used when creating conditional decisions for scaffolder\n * actions that are returned by authorization policies.\n *\n * @alpha\n */\nexport const scaffolderActionConditions = actionsConditionExports.conditions;\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createBackendPlugin,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node/alpha';\nimport {\n  TaskBroker,\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  scaffolderActionsExtensionPoint,\n  scaffolderTaskBrokerExtensionPoint,\n  scaffolderTemplatingExtensionPoint,\n} from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createCatalogRegisterAction,\n  createCatalogWriteAction,\n  createDebugLogAction,\n  createFetchCatalogEntityAction,\n  createFetchPlainAction,\n  createFetchPlainFileAction,\n  createFetchTemplateAction,\n  createFilesystemDeleteAction,\n  createFilesystemRenameAction,\n  createWaitAction,\n} from './scaffolder';\nimport { createRouter } from './service/router';\n\n/**\n * Scaffolder plugin\n *\n * @alpha\n */\nexport const scaffolderPlugin = createBackendPlugin({\n  pluginId: 'scaffolder',\n  register(env) {\n    const addedActions = new Array<TemplateAction<any, any>>();\n    env.registerExtensionPoint(scaffolderActionsExtensionPoint, {\n      addActions(...newActions: TemplateAction<any>[]) {\n        addedActions.push(...newActions);\n      },\n    });\n\n    let taskBroker: TaskBroker | undefined;\n    env.registerExtensionPoint(scaffolderTaskBrokerExtensionPoint, {\n      setTaskBroker(newTaskBroker) {\n        if (taskBroker) {\n          throw new Error('Task broker may only be set once');\n        }\n        taskBroker = newTaskBroker;\n      },\n    });\n\n    const additionalTemplateFilters: Record<string, TemplateFilter> = {};\n    const additionalTemplateGlobals: Record<string, TemplateGlobal> = {};\n    env.registerExtensionPoint(scaffolderTemplatingExtensionPoint, {\n      addTemplateFilters(newFilters) {\n        Object.assign(additionalTemplateFilters, newFilters);\n      },\n      addTemplateGlobals(newGlobals) {\n        Object.assign(additionalTemplateGlobals, newGlobals);\n      },\n    });\n\n    env.registerInit({\n      deps: {\n        logger: coreServices.logger,\n        config: coreServices.rootConfig,\n        lifecycle: coreServices.rootLifecycle,\n        reader: coreServices.urlReader,\n        permissions: coreServices.permissions,\n        database: coreServices.database,\n        auth: coreServices.auth,\n        discovery: coreServices.discovery,\n        httpRouter: coreServices.httpRouter,\n        httpAuth: coreServices.httpAuth,\n        catalogClient: catalogServiceRef,\n      },\n      async init({\n        logger,\n        config,\n        lifecycle,\n        reader,\n        database,\n        auth,\n        discovery,\n        httpRouter,\n        httpAuth,\n        catalogClient,\n        permissions,\n      }) {\n        const log = loggerToWinstonLogger(logger);\n        const integrations = ScmIntegrations.fromConfig(config);\n\n        const actions = [\n          // actions provided from other modules\n          ...addedActions,\n\n          // built-in actions for the scaffolder\n          createFetchPlainAction({\n            reader,\n            integrations,\n          }),\n          createFetchPlainFileAction({\n            reader,\n            integrations,\n          }),\n          createFetchTemplateAction({\n            integrations,\n            reader,\n            additionalTemplateFilters,\n            additionalTemplateGlobals,\n          }),\n          createDebugLogAction(),\n          createWaitAction(),\n          // todo(blam): maybe these should be a -catalog module?\n          createCatalogRegisterAction({ catalogClient, integrations, auth }),\n          createFetchCatalogEntityAction({ catalogClient, auth }),\n          createCatalogWriteAction(),\n          createFilesystemDeleteAction(),\n          createFilesystemRenameAction(),\n        ];\n\n        const actionIds = actions.map(action => action.id).join(', ');\n\n        log.info(\n          `Starting scaffolder with the following actions enabled ${actionIds}`,\n        );\n\n        const router = await createRouter({\n          logger: log,\n          config,\n          database,\n          catalogClient,\n          reader,\n          lifecycle,\n          actions,\n          taskBroker,\n          additionalTemplateFilters,\n          additionalTemplateGlobals,\n          auth,\n          httpAuth,\n          discovery,\n          permissions,\n        });\n        httpRouter.use(router);\n      },\n    });\n  },\n});\n"],"names":["createConditionExports","RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","scaffolderTemplateRules","RESOURCE_TYPE_SCAFFOLDER_ACTION","scaffolderActionRules","createBackendPlugin","scaffolderActionsExtensionPoint","scaffolderTaskBrokerExtensionPoint","scaffolderTemplatingExtensionPoint","coreServices","catalogServiceRef","loggerToWinstonLogger","ScmIntegrations","createFetchPlainAction","createFetchPlainFileAction","createFetchTemplateAction","createDebugLogAction","createWaitAction","createCatalogRegisterAction","createFetchCatalogEntityAction","createCatalogWriteAction","createFilesystemDeleteAction","createFilesystemRenameAction","router","createRouter"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"alpha.cjs.js","sources":["../src/service/conditionExports.ts","../src/ScaffolderPlugin.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport { createConditionExports } from '@backstage/plugin-permission-node';\nimport { scaffolderTemplateRules, scaffolderActionRules } from './rules';\n\nconst templateConditionExports = createConditionExports({\n  pluginId: 'scaffolder',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  rules: scaffolderTemplateRules,\n});\n\nconst actionsConditionExports = createConditionExports({\n  pluginId: 'scaffolder',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  rules: scaffolderActionRules,\n});\n\n/**\n * `createScaffolderTemplateConditionalDecision` can be used when authoring policies to\n * create conditional decisions. It requires a permission of type\n * `ResourcePermission<'scaffolder-template'>` to be passed as the first parameter.\n * It's recommended that you use the provided `isResourcePermission` and\n * `isPermission` helper methods to narrow the type of the permission passed to\n * the handle method as shown below.\n *\n * ```\n * // MyAuthorizationPolicy.ts\n * ...\n * import { createScaffolderPolicyDecision } from '@backstage/plugin-scaffolder-backend';\n * import { RESOURCE_TYPE_SCAFFOLDER_TEMPLATE } from '@backstage/plugin-scaffolder-common';\n *\n * class MyAuthorizationPolicy implements PermissionPolicy {\n *   async handle(request, user) {\n *    ...\n *\n *    if (isResourcePermission(request.permission, RESOURCE_TYPE_SCAFFOLDER_TEMPLATE)) {\n *      return createScaffolderConditionalDecision(\n *        request.permission,\n *        { anyOf: [...insert conditions here...] }\n *      );\n *    }\n *\n *    ...\n * }\n *\n * ```\n *\n * @alpha\n */\nexport const createScaffolderTemplateConditionalDecision =\n  templateConditionExports.createConditionalDecision;\n\n/**\n * These conditions are used when creating conditional decisions for scaffolder\n * templates that are returned by authorization policies.\n *\n * @alpha\n */\nexport const scaffolderTemplateConditions = templateConditionExports.conditions;\n\n/**\n * @alpha\n */\nexport const createScaffolderActionConditionalDecision =\n  actionsConditionExports.createConditionalDecision;\n\n/**\n *\n * These conditions are used when creating conditional decisions for scaffolder\n * actions that are returned by authorization policies.\n *\n * @alpha\n */\nexport const scaffolderActionConditions = actionsConditionExports.conditions;\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createBackendPlugin,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { catalogServiceRef } from '@backstage/plugin-catalog-node/alpha';\nimport {\n  TaskBroker,\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  scaffolderActionsExtensionPoint,\n  scaffolderTaskBrokerExtensionPoint,\n  scaffolderTemplatingExtensionPoint,\n} from '@backstage/plugin-scaffolder-node/alpha';\nimport {\n  createCatalogRegisterAction,\n  createCatalogWriteAction,\n  createDebugLogAction,\n  createFetchCatalogEntityAction,\n  createFetchPlainAction,\n  createFetchPlainFileAction,\n  createFetchTemplateAction,\n  createFilesystemDeleteAction,\n  createFilesystemRenameAction,\n  createWaitAction,\n} from './scaffolder';\nimport { createRouter } from './service/router';\n\n/**\n * Scaffolder plugin\n *\n * @alpha\n */\nexport const scaffolderPlugin = createBackendPlugin({\n  pluginId: 'scaffolder',\n  register(env) {\n    const addedActions = new Array<TemplateAction<any, any>>();\n    env.registerExtensionPoint(scaffolderActionsExtensionPoint, {\n      addActions(...newActions: TemplateAction<any>[]) {\n        addedActions.push(...newActions);\n      },\n    });\n\n    let taskBroker: TaskBroker | undefined;\n    env.registerExtensionPoint(scaffolderTaskBrokerExtensionPoint, {\n      setTaskBroker(newTaskBroker) {\n        if (taskBroker) {\n          throw new Error('Task broker may only be set once');\n        }\n        taskBroker = newTaskBroker;\n      },\n    });\n\n    const additionalTemplateFilters: Record<string, TemplateFilter> = {};\n    const additionalTemplateGlobals: Record<string, TemplateGlobal> = {};\n    env.registerExtensionPoint(scaffolderTemplatingExtensionPoint, {\n      addTemplateFilters(newFilters) {\n        Object.assign(additionalTemplateFilters, newFilters);\n      },\n      addTemplateGlobals(newGlobals) {\n        Object.assign(additionalTemplateGlobals, newGlobals);\n      },\n    });\n\n    env.registerInit({\n      deps: {\n        logger: coreServices.logger,\n        config: coreServices.rootConfig,\n        lifecycle: coreServices.rootLifecycle,\n        reader: coreServices.urlReader,\n        permissions: coreServices.permissions,\n        database: coreServices.database,\n        auth: coreServices.auth,\n        discovery: coreServices.discovery,\n        httpRouter: coreServices.httpRouter,\n        httpAuth: coreServices.httpAuth,\n        catalogClient: catalogServiceRef,\n      },\n      async init({\n        logger,\n        config,\n        lifecycle,\n        reader,\n        database,\n        auth,\n        discovery,\n        httpRouter,\n        httpAuth,\n        catalogClient,\n        permissions,\n      }) {\n        const log = loggerToWinstonLogger(logger);\n        const integrations = ScmIntegrations.fromConfig(config);\n\n        const actions = [\n          // actions provided from other modules\n          ...addedActions,\n\n          // built-in actions for the scaffolder\n          createFetchPlainAction({\n            reader,\n            integrations,\n          }),\n          createFetchPlainFileAction({\n            reader,\n            integrations,\n          }),\n          createFetchTemplateAction({\n            integrations,\n            reader,\n            additionalTemplateFilters,\n            additionalTemplateGlobals,\n          }),\n          createDebugLogAction(),\n          createWaitAction(),\n          // todo(blam): maybe these should be a -catalog module?\n          createCatalogRegisterAction({ catalogClient, integrations, auth }),\n          createFetchCatalogEntityAction({ catalogClient, auth }),\n          createCatalogWriteAction(),\n          createFilesystemDeleteAction(),\n          createFilesystemRenameAction(),\n        ];\n\n        const actionIds = actions.map(action => action.id).join(', ');\n\n        log.info(\n          `Starting scaffolder with the following actions enabled ${actionIds}`,\n        );\n\n        const router = await createRouter({\n          logger: log,\n          config,\n          database,\n          catalogClient,\n          reader,\n          lifecycle,\n          actions,\n          taskBroker,\n          additionalTemplateFilters,\n          additionalTemplateGlobals,\n          auth,\n          httpAuth,\n          discovery,\n          permissions,\n        });\n        httpRouter.use(router);\n      },\n    });\n  },\n});\n"],"names":["createConditionExports","RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","scaffolderTemplateRules","RESOURCE_TYPE_SCAFFOLDER_ACTION","scaffolderActionRules","createBackendPlugin","scaffolderActionsExtensionPoint","scaffolderTaskBrokerExtensionPoint","scaffolderTemplatingExtensionPoint","coreServices","catalogServiceRef","loggerToWinstonLogger","ScmIntegrations","createFetchPlainAction","createFetchPlainFileAction","createFetchTemplateAction","createDebugLogAction","createWaitAction","createCatalogRegisterAction","createFetchCatalogEntityAction","createCatalogWriteAction","createFilesystemDeleteAction","createFilesystemRenameAction","router","createRouter"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js.map
deleted file mode 100644
index 50f71ee..0000000
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js.map
+++ /dev/null
@@ -1 +0,0 @@
-{"version":3,"file":"router-CDFi_apW.cjs.js","sources":["../../src/scaffolder/actions/builtin/catalog/register.examples.ts","../../src/scaffolder/actions/builtin/catalog/register.ts","../../src/scaffolder/actions/builtin/catalog/write.examples.ts","../../src/scaffolder/actions/builtin/catalog/write.ts","../../src/scaffolder/actions/builtin/catalog/fetch.examples.ts","../../src/scaffolder/actions/builtin/catalog/fetch.ts","../../src/scaffolder/actions/builtin/debug/log.examples.ts","../../src/scaffolder/actions/builtin/debug/log.ts","../../src/scaffolder/actions/builtin/debug/wait.examples.ts","../../src/scaffolder/actions/builtin/debug/wait.ts","../../src/scaffolder/actions/builtin/fetch/plain.examples.ts","../../src/scaffolder/actions/builtin/fetch/plain.ts","../../src/scaffolder/actions/builtin/fetch/plainFile.examples.ts","../../src/scaffolder/actions/builtin/fetch/plainFile.ts","../../src/lib/templating/helpers.ts","../../src/lib/templating/SecureTemplater.ts","../../src/lib/templating/filters.ts","../../src/scaffolder/actions/builtin/fetch/template.examples.ts","../../src/scaffolder/actions/builtin/fetch/template.ts","../../src/scaffolder/actions/builtin/filesystem/delete.examples.ts","../../src/scaffolder/actions/builtin/filesystem/delete.ts","../../src/scaffolder/actions/builtin/filesystem/rename.examples.ts","../../src/scaffolder/actions/builtin/filesystem/rename.ts","../../src/scaffolder/actions/builtin/createBuiltinActions.ts","../../src/scaffolder/actions/TemplateActionRegistry.ts","../../src/scaffolder/tasks/taskRecoveryHelper.ts","../../src/scaffolder/tasks/dbUtil.ts","../../src/scaffolder/tasks/DatabaseTaskStore.ts","../../src/scaffolder/tasks/helper.ts","../../src/scaffolder/tasks/StorageTaskBroker.ts","../../src/util/metrics.ts","../../src/service/rules.ts","../../src/scaffolder/tasks/logger.ts","../../src/scaffolder/tasks/NunjucksWorkflowRunner.ts","../../src/scaffolder/tasks/TaskWorker.ts","../../src/scaffolder/dryrun/DecoratedActionsRegistry.ts","../../src/scaffolder/dryrun/createDryRunner.ts","../../src/service/helpers.ts","../../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Register with the catalog',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:register',\n          id: 'register-with-catalog',\n          name: 'Register with the catalog',\n          input: {\n            catalogInfoUrl:\n              'http://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { stringifyEntityRef, Entity } from '@backstage/catalog-model';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { examples } from './register.examples';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\nconst id = 'catalog:register';\n\n/**\n * Registers entities from a catalog descriptor file in the workspace into the software catalog.\n * @public\n */\nexport function createCatalogRegisterAction(options: {\n  catalogClient: CatalogApi;\n  integrations: ScmIntegrations;\n  auth?: AuthService;\n}) {\n  const { catalogClient, integrations, auth } = options;\n\n  return createTemplateAction<\n    | { catalogInfoUrl: string; optional?: boolean }\n    | { repoContentsUrl: string; catalogInfoPath?: string; optional?: boolean }\n  >({\n    id,\n    description:\n      'Registers entities from a catalog descriptor file in the workspace into the software catalog.',\n    examples,\n    schema: {\n      input: {\n        oneOf: [\n          {\n            type: 'object',\n            required: ['catalogInfoUrl'],\n            properties: {\n              catalogInfoUrl: {\n                title: 'Catalog Info URL',\n                description:\n                  'An absolute URL pointing to the catalog info file location',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n          {\n            type: 'object',\n            required: ['repoContentsUrl'],\n            properties: {\n              repoContentsUrl: {\n                title: 'Repository Contents URL',\n                description:\n                  'An absolute URL pointing to the root of a repository directory tree',\n                type: 'string',\n              },\n              catalogInfoPath: {\n                title: 'Fetch URL',\n                description:\n                  'A relative path from the repo root pointing to the catalog info file, defaults to /catalog-info.yaml',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n        ],\n      },\n      output: {\n        type: 'object',\n        required: ['catalogInfoUrl'],\n        properties: {\n          entityRef: {\n            type: 'string',\n          },\n          catalogInfoUrl: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const { input } = ctx;\n\n      let catalogInfoUrl;\n      if ('catalogInfoUrl' in input) {\n        catalogInfoUrl = input.catalogInfoUrl;\n      } else {\n        const { repoContentsUrl, catalogInfoPath = '/catalog-info.yaml' } =\n          input;\n        const integration = integrations.byUrl(repoContentsUrl);\n        if (!integration) {\n          throw new InputError(\n            `No integration found for host ${repoContentsUrl}`,\n          );\n        }\n\n        catalogInfoUrl = integration.resolveUrl({\n          base: repoContentsUrl,\n          url: catalogInfoPath,\n        });\n      }\n\n      ctx.logger.info(`Registering ${catalogInfoUrl} in the catalog`);\n\n      const { token } = (await auth?.getPluginRequestToken({\n        onBehalfOf: await ctx.getInitiatorCredentials(),\n        targetPluginId: 'catalog',\n      })) ?? { token: ctx.secrets?.backstageToken };\n\n      try {\n        // 1st try to register the location, this will throw an error if the location already exists (see catch)\n        await catalogClient.addLocation(\n          {\n            type: 'url',\n            target: catalogInfoUrl,\n          },\n          token ? { token } : {},\n        );\n      } catch (e) {\n        if (!input.optional) {\n          // if optional is false or unset, it is not allowed to register the same location twice, we rethrow the error\n          throw e;\n        }\n      }\n\n      try {\n        // 2nd retry the registration as a dry run, this will not throw an error if the location already exists\n        const result = await catalogClient.addLocation(\n          {\n            dryRun: true,\n            type: 'url',\n            target: catalogInfoUrl,\n          },\n          token ? { token } : {},\n        );\n\n        if (result.entities.length) {\n          const { entities } = result;\n          let entity: Entity | undefined;\n          // prioritise 'Component' type as it is the most central kind of entity\n          entity = entities.find(\n            e =>\n              !e.metadata.name.startsWith('generated-') &&\n              e.kind === 'Component',\n          );\n          if (!entity) {\n            entity = entities.find(\n              e => !e.metadata.name.startsWith('generated-'),\n            );\n          }\n          if (!entity) {\n            entity = entities[0];\n          }\n\n          ctx.output('entityRef', stringifyEntityRef(entity));\n        }\n      } catch (e) {\n        if (!input.optional) {\n          throw e;\n        }\n      }\n\n      ctx.output('catalogInfoUrl', catalogInfoUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Write a catalog yaml file',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:write',\n          id: 'create-catalog-info-file',\n          name: 'Create catalog file',\n          input: {\n            entity: {\n              apiVersion: 'backstage.io/v1alpha1',\n              kind: 'Component',\n              metadata: {\n                name: 'test',\n                annotations: {},\n              },\n              spec: {\n                type: 'service',\n                lifecycle: 'production',\n                owner: 'default/owner',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { z } from 'zod';\nimport { examples } from './write.examples';\n\nconst id = 'catalog:write';\n\n/**\n * Writes a catalog descriptor file containing the provided entity to a path in the workspace.\n * @public\n */\n\nexport function createCatalogWriteAction() {\n  return createTemplateAction({\n    id,\n    description: 'Writes the catalog-info.yaml for your template',\n    schema: {\n      input: z.object({\n        filePath: z\n          .string()\n          .optional()\n          .describe('Defaults to catalog-info.yaml'),\n        // TODO: this should reference an zod entity validator if it existed.\n        entity: z\n          .record(z.any())\n          .describe(\n            'You can provide the same values used in the Entity schema.',\n          ),\n      }),\n    },\n    examples,\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(`Writing catalog-info.yaml`);\n      const { filePath, entity } = ctx.input;\n      const entityRef = ctx.templateInfo?.entityRef;\n      const path = filePath ?? 'catalog-info.yaml';\n\n      await fs.writeFile(\n        resolveSafeChildPath(ctx.workspacePath, path),\n        yaml.stringify({\n          ...entity,\n          metadata: {\n            ...entity.metadata,\n            ...(entityRef\n              ? {\n                  annotations: {\n                    ...entity.metadata.annotations,\n                    'backstage.io/source-template': entityRef,\n                  },\n                }\n              : undefined),\n          },\n        }),\n      );\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Fetch entity by reference',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:fetch',\n          id: 'fetch',\n          name: 'Fetch catalog entity',\n          input: {\n            entityRef: 'component:default/name',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Fetch multiple entities by reference',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:fetch',\n          id: 'fetchMultiple',\n          name: 'Fetch catalog entities',\n          input: {\n            entityRefs: ['component:default/name'],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { z } from 'zod';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { examples } from './fetch.examples';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\nconst id = 'catalog:fetch';\n\n/**\n * Returns entity or entities from the catalog by entity reference(s).\n *\n * @public\n */\nexport function createFetchCatalogEntityAction(options: {\n  catalogClient: CatalogApi;\n  auth?: AuthService;\n}) {\n  const { catalogClient, auth } = options;\n\n  return createTemplateAction({\n    id,\n    description:\n      'Returns entity or entities from the catalog by entity reference(s)',\n    examples,\n    supportsDryRun: true,\n    schema: {\n      input: z.object({\n        entityRef: z\n          .string({\n            description: 'Entity reference of the entity to get',\n          })\n          .optional(),\n        entityRefs: z\n          .array(z.string(), {\n            description: 'Entity references of the entities to get',\n          })\n          .optional(),\n        optional: z\n          .boolean({\n            description:\n              'Allow the entity or entities to optionally exist. Default: false',\n          })\n          .optional(),\n        defaultKind: z.string({ description: 'The default kind' }).optional(),\n        defaultNamespace: z\n          .string({ description: 'The default namespace' })\n          .optional(),\n      }),\n      output: z.object({\n        entity: z\n          .any({\n            description:\n              'Object containing same values used in the Entity schema. Only when used with `entityRef` parameter.',\n          })\n          .optional(),\n        entities: z\n          .array(\n            z.any({\n              description:\n                'Array containing objects with same values used in the Entity schema. Only when used with `entityRefs` parameter.',\n            }),\n          )\n          .optional(),\n      }),\n    },\n    async handler(ctx) {\n      const { entityRef, entityRefs, optional, defaultKind, defaultNamespace } =\n        ctx.input;\n      if (!entityRef && !entityRefs) {\n        if (optional) {\n          return;\n        }\n        throw new Error('Missing entity reference or references');\n      }\n\n      const { token } = (await auth?.getPluginRequestToken({\n        onBehalfOf: await ctx.getInitiatorCredentials(),\n        targetPluginId: 'catalog',\n      })) ?? { token: ctx.secrets?.backstageToken };\n\n      if (entityRef) {\n        const entity = await catalogClient.getEntityByRef(\n          stringifyEntityRef(\n            parseEntityRef(entityRef, { defaultKind, defaultNamespace }),\n          ),\n          {\n            token,\n          },\n        );\n\n        if (!entity && !optional) {\n          throw new Error(`Entity ${entityRef} not found`);\n        }\n        ctx.output('entity', entity ?? null);\n      }\n\n      if (entityRefs) {\n        const entities = await catalogClient.getEntitiesByRefs(\n          {\n            entityRefs: entityRefs.map(ref =>\n              stringifyEntityRef(\n                parseEntityRef(ref, { defaultKind, defaultNamespace }),\n              ),\n            ),\n          },\n          {\n            token,\n          },\n        );\n\n        const finalEntities = entities.items.map((e, i) => {\n          if (!e && !optional) {\n            throw new Error(`Entity ${entityRefs[i]} not found`);\n          }\n          return e ?? null;\n        });\n\n        ctx.output('entities', finalEntities);\n      }\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Write a debug message',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:log',\n          id: 'write-debug-line',\n          name: 'Write \"Hello Backstage!\" log line',\n          input: {\n            message: 'Hello Backstage!',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'List the workspace directory',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:log',\n          id: 'write-workspace-directory',\n          name: 'List the workspace directory',\n          input: {\n            listWorkspace: true,\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readdir, stat } from 'fs-extra';\nimport { relative, join } from 'path';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { examples } from './log.examples';\n\nconst id = 'debug:log';\n\n/**\n * Writes a message into the log or lists all files in the workspace\n *\n * @remarks\n *\n * This task is useful for local development and testing of both the scaffolder\n * and scaffolder templates.\n *\n * @public\n */\nexport function createDebugLogAction() {\n  return createTemplateAction<{ message?: string; listWorkspace?: boolean }>({\n    id,\n    description:\n      'Writes a message into the log or lists all files in the workspace.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          message: {\n            title: 'Message to output.',\n            type: 'string',\n          },\n          listWorkspace: {\n            title: 'List all files in the workspace, if true.',\n            type: 'boolean',\n          },\n          extra: {\n            title: 'Extra info',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(JSON.stringify(ctx.input, null, 2));\n\n      if (ctx.input?.message) {\n        ctx.logger.info(ctx.input.message);\n      }\n\n      if (ctx.input?.listWorkspace) {\n        const files = await recursiveReadDir(ctx.workspacePath);\n        ctx.logger.info(\n          `Workspace:\\n${files\n            .map(f => `  - ${relative(ctx.workspacePath, f)}`)\n            .join('\\n')}`,\n        );\n      }\n    },\n  });\n}\n\nexport async function recursiveReadDir(dir: string): Promise<string[]> {\n  const subdirs = await readdir(dir);\n  const files = await Promise.all(\n    subdirs.map(async subdir => {\n      const res = join(dir, subdir);\n      return (await stat(res)).isDirectory() ? recursiveReadDir(res) : [res];\n    }),\n  );\n  return files.reduce((a, f) => a.concat(f), []);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Waiting for 50 milliseconds',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-milliseconds',\n          name: 'Waiting for 50 milliseconds',\n          input: {\n            milliseconds: 50,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Waiting for 5 seconds',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-5sec',\n          name: 'Waiting for 5 seconds',\n          input: {\n            seconds: 5,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Waiting for 1 minutes',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-1min',\n          name: 'Waiting for 1 minutes',\n          input: {\n            minutes: 1,\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { HumanDuration } from '@backstage/types';\nimport { Duration } from 'luxon';\nimport { examples } from './wait.examples';\n\nconst id = 'debug:wait';\n\nconst MAX_WAIT_TIME_IN_ISO = 'T00:00:30';\n\n/**\n * Waits for a certain period of time.\n *\n * @remarks\n *\n * This task is useful to give some waiting time for manual intervention.\n * Has to be used in a combination with other actions.\n *\n * @public\n */\nexport function createWaitAction(options?: {\n  maxWaitTime?: Duration | HumanDuration;\n}) {\n  const toDuration = (\n    maxWaitTime: Duration | HumanDuration | undefined,\n  ): Duration => {\n    if (maxWaitTime) {\n      if (maxWaitTime instanceof Duration) {\n        return maxWaitTime;\n      }\n      return Duration.fromObject(maxWaitTime);\n    }\n    return Duration.fromISOTime(MAX_WAIT_TIME_IN_ISO);\n  };\n\n  return createTemplateAction<HumanDuration>({\n    id,\n    description: 'Waits for a certain period of time.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          minutes: {\n            title: 'Waiting period in minutes.',\n            type: 'number',\n          },\n          seconds: {\n            title: 'Waiting period in seconds.',\n            type: 'number',\n          },\n          milliseconds: {\n            title: 'Waiting period in milliseconds.',\n            type: 'number',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const delayTime = Duration.fromObject(ctx.input);\n      const maxWait = toDuration(options?.maxWaitTime);\n\n      if (delayTime.minus(maxWait).toMillis() > 0) {\n        throw new Error(\n          `Waiting duration is longer than the maximum threshold of ${maxWait.toHuman()}`,\n        );\n      }\n\n      await new Promise(resolve => {\n        const controller = new AbortController();\n        const timeoutHandle = setTimeout(abort, delayTime.toMillis());\n        ctx.signal?.addEventListener('abort', abort);\n\n        function abort() {\n          ctx.signal?.removeEventListener('abort', abort);\n          clearTimeout(timeoutHandle!);\n          controller.abort();\n          resolve('finished');\n        }\n      });\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Downloads content and places it in the workspace.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain',\n          id: 'fetch-plain',\n          name: 'Fetch plain',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Optionally, if you would prefer the data to be downloaded to a subdirectory in the workspace you may specify the ‘targetPath’ input option.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain',\n          id: 'fetch-plain',\n          name: 'Fetch plain',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets',\n            targetPath: 'fetched-data',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader, resolveSafeChildPath } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { examples } from './plain.examples';\n\nimport {\n  createTemplateAction,\n  fetchContents,\n} from '@backstage/plugin-scaffolder-node';\n\nexport const ACTION_ID = 'fetch:plain';\n\n/**\n * Downloads content and places it in the workspace, or optionally\n * in a subdirectory specified by the 'targetPath' input option.\n * @public\n */\nexport function createFetchPlainAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n}) {\n  const { reader, integrations } = options;\n\n  return createTemplateAction<{\n    url: string;\n    targetPath?: string;\n    token?: string;\n  }>({\n    id: ACTION_ID,\n    examples,\n    description:\n      'Downloads content and places it in the workspace, or optionally in a subdirectory specified by the `targetPath` input option.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to.',\n            type: 'string',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching plain content from remote URL');\n\n      // Finally move the template result into the task workspace\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputPath = resolveSafeChildPath(ctx.workspacePath, targetPath);\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath,\n        token: ctx.input.token,\n      });\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Downloads a file and places it in the workspace.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain:file',\n          id: 'fetch-plain-file',\n          name: 'Fetch plain file',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets/Backstage%20Community%20Sessions.png',\n            targetPath: 'target-path',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader, resolveSafeChildPath } from '@backstage/backend-common';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { examples } from './plainFile.examples';\nimport {\n  createTemplateAction,\n  fetchFile,\n} from '@backstage/plugin-scaffolder-node';\n\n/**\n * Downloads content and places it in the workspace, or optionally\n * in a subdirectory specified by the 'targetPath' input option.\n * @public\n */\nexport function createFetchPlainFileAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n}) {\n  const { reader, integrations } = options;\n\n  return createTemplateAction<{\n    url: string;\n    targetPath: string;\n    token?: string;\n  }>({\n    id: 'fetch:plain:file',\n    description: 'Downloads single file and places it in the workspace.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url', 'targetPath'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the single file to fetch.',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the file as.',\n            type: 'string',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching plain content from remote URL');\n\n      // Finally move the template result into the task workspace\n      const outputPath = resolveSafeChildPath(\n        ctx.workspacePath,\n        ctx.input.targetPath,\n      );\n\n      await fetchFile({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath,\n        token: ctx.input.token,\n      });\n    },\n  });\n}\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isNoNodeSnapshotOptionProvided(): boolean {\n  return (\n    process.env.NODE_OPTIONS?.includes('--no-node-snapshot') ||\n    process.argv.includes('--no-node-snapshot')\n  );\n}\n\n/**\n * Gets the major version of the currently running Node.js process.\n *\n * @remarks\n * This function extracts the major version from `process.versions.node` (a string representing the Node.js version),\n * which includes the major, minor, and patch versions. It splits this string by the `.` character to get an array\n * of these versions, and then parses the first element of this array (the major version) to a number.\n *\n * @returns {number} The major version of the currently running Node.js process.\n */\nexport function getMajorNodeVersion(): number {\n  const version = process.versions.node;\n  return parseInt(version.split('.')[0], 10);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Isolate } from 'isolated-vm';\nimport { resolvePackagePath } from '@backstage/backend-common';\nimport {\n  TemplateFilter as _TemplateFilter,\n  TemplateGlobal as _TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport fs from 'fs-extra';\nimport { JsonValue } from '@backstage/types';\nimport { getMajorNodeVersion, isNoNodeSnapshotOptionProvided } from './helpers';\n\n// language=JavaScript\nconst mkScript = (nunjucksSource: string) => `\nconst { render, renderCompat } = (() => {\n  const module = {};\n  const process = { env: {} };\n  const require = (pkg) => { if (pkg === 'events') { return function (){}; }};\n\n  ${nunjucksSource}\n\n  const env = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '\\${{',\n      variableEnd: '}}',\n    },\n  });\n\n  const compatEnv = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '{{',\n      variableEnd: '}}',\n    },\n  });\n  compatEnv.addFilter('jsonify', compatEnv.getFilter('dump'));\n\n  for (const name of JSON.parse(availableTemplateFilters)) {\n    env.addFilter(name, (...args) => JSON.parse(callFilter(name, args)));\n  }\n  for (const [name, value] of Object.entries(JSON.parse(availableTemplateGlobals))) {\n    env.addGlobal(name, value);\n  }\n  for (const name of JSON.parse(availableTemplateCallbacks)) {\n    env.addGlobal(name, (...args) => JSON.parse(callGlobal(name, args)));\n  }\n\n  let uninstallCompat = undefined;\n\n  function render(str, values) {\n    try {\n      if (uninstallCompat) {\n        uninstallCompat();\n        uninstallCompat = undefined;\n      }\n      return env.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  function renderCompat(str, values) {\n    try {\n      if (!uninstallCompat) {\n        uninstallCompat = module.exports.installJinjaCompat();\n      }\n      return compatEnv.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  return { render, renderCompat };\n})();\n`;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateFilter = _TemplateFilter;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateGlobal = _TemplateGlobal;\n\ninterface SecureTemplaterOptions {\n  /* Enables jinja compatibility and the \"jsonify\" filter */\n  cookiecutterCompat?: boolean;\n  /* Extra user-provided nunjucks filters */\n  templateFilters?: Record<string, TemplateFilter>;\n  /* Extra user-provided nunjucks globals */\n  templateGlobals?: Record<string, TemplateGlobal>;\n  nunjucksConfigs?: { trimBlocks?: boolean; lstripBlocks?: boolean };\n}\n\nexport type SecureTemplateRenderer = (\n  template: string,\n  values: unknown,\n) => string;\n\nexport class SecureTemplater {\n  static async loadRenderer(options: SecureTemplaterOptions = {}) {\n    const {\n      cookiecutterCompat,\n      templateFilters = {},\n      templateGlobals = {},\n      nunjucksConfigs = {},\n    } = options;\n\n    const nodeVersion = getMajorNodeVersion();\n    if (nodeVersion >= 20 && !isNoNodeSnapshotOptionProvided()) {\n      throw new Error(\n        `When using Node.js version 20 or newer, the scaffolder backend plugin requires that it be started with the --no-node-snapshot option. \n        Please make sure that you have NODE_OPTIONS=--no-node-snapshot in your environment.`,\n      );\n    }\n\n    const isolate = new Isolate({ memoryLimit: 128 });\n    const context = await isolate.createContext();\n    const contextGlobal = context.global;\n\n    const nunjucksSource = await fs.readFile(\n      resolvePackagePath(\n        '@backstage/plugin-scaffolder-backend',\n        'assets/nunjucks.js.txt',\n      ),\n      'utf-8',\n    );\n\n    const nunjucksScript = await isolate.compileScript(\n      mkScript(nunjucksSource),\n    );\n\n    await contextGlobal.set('nunjucksConfigs', JSON.stringify(nunjucksConfigs));\n\n    const availableFilters = Object.keys(templateFilters);\n\n    await contextGlobal.set(\n      'availableTemplateFilters',\n      JSON.stringify(availableFilters),\n    );\n\n    const globalCallbacks = [];\n    const globalValues: Record<string, unknown> = {};\n    for (const [name, value] of Object.entries(templateGlobals)) {\n      if (typeof value === 'function') {\n        globalCallbacks.push(name);\n      } else {\n        globalValues[name] = value;\n      }\n    }\n\n    await contextGlobal.set(\n      'availableTemplateGlobals',\n      JSON.stringify(globalValues),\n    );\n    await contextGlobal.set(\n      'availableTemplateCallbacks',\n      JSON.stringify(globalCallbacks),\n    );\n\n    await contextGlobal.set(\n      'callFilter',\n      (filterName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateFilters, filterName)) {\n          return '';\n        }\n        return JSON.stringify(templateFilters[filterName](...args));\n      },\n    );\n\n    await contextGlobal.set(\n      'callGlobal',\n      (globalName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateGlobals, globalName)) {\n          return '';\n        }\n        const global = templateGlobals[globalName];\n        if (typeof global !== 'function') {\n          return '';\n        }\n        return JSON.stringify(global(...args));\n      },\n    );\n\n    await nunjucksScript.run(context);\n\n    const render: SecureTemplateRenderer = (template, values) => {\n      if (!context) {\n        throw new Error('SecureTemplater has not been initialized');\n      }\n\n      contextGlobal.setSync('templateStr', String(template));\n      contextGlobal.setSync('templateValues', JSON.stringify(values));\n\n      if (cookiecutterCompat) {\n        return context.evalSync(`renderCompat(templateStr, templateValues)`);\n      }\n\n      return context.evalSync(`render(templateStr, templateValues)`);\n    };\n    return render;\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { ScmIntegrations } from '@backstage/integration';\nimport type { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  parseRepoUrl,\n  TemplateFilter,\n} from '@backstage/plugin-scaffolder-node';\nimport get from 'lodash/get';\n\nexport const createDefaultFilters = ({\n  integrations,\n}: {\n  integrations: ScmIntegrations;\n}): Record<string, TemplateFilter> => {\n  return {\n    parseRepoUrl: url => parseRepoUrl(url as string, integrations),\n    parseEntityRef: (ref: JsonValue, context?: JsonValue) =>\n      parseEntityRef(ref as string, context as JsonObject),\n    pick: (obj: JsonValue, key: JsonValue) => get(obj, key as string),\n    projectSlug: repoUrl => {\n      const { owner, repo } = parseRepoUrl(repoUrl as string, integrations);\n      return `${owner}/${repo}`;\n    },\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Downloads a skeleton directory that lives alongside the template file and fill it out with values.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:template',\n          id: 'fetch-template',\n          name: 'Fetch template',\n          input: {\n            url: './skeleton',\n            targetPath: './target',\n            values: {\n              name: 'test-project',\n              count: 1234,\n              itemList: ['first', 'second', 'third'],\n              showDummyFile: false,\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extname } from 'path';\nimport { resolveSafeChildPath, UrlReader } from '@backstage/backend-common';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport {\n  createTemplateAction,\n  fetchContents,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport globby from 'globby';\nimport fs from 'fs-extra';\nimport { isBinaryFile } from 'isbinaryfile';\nimport { SecureTemplater } from '../../../../lib/templating/SecureTemplater';\nimport { createDefaultFilters } from '../../../../lib/templating/filters';\nimport { examples } from './template.examples';\n\n/**\n * Downloads a skeleton, templates variables into file and directory names and content.\n * Then places the result in the workspace, or optionally in a subdirectory\n * specified by the 'targetPath' input option.\n *\n * @public\n */\nexport function createFetchTemplateAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n}) {\n  const {\n    reader,\n    integrations,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n  } = options;\n\n  const defaultTemplateFilters = createDefaultFilters({ integrations });\n\n  return createTemplateAction<{\n    url: string;\n    targetPath?: string;\n    values: any;\n    templateFileExtension?: string | boolean;\n\n    // Cookiecutter compat options\n    /**\n     * @deprecated This field is deprecated in favor of copyWithoutTemplating.\n     */\n    copyWithoutRender?: string[];\n    copyWithoutTemplating?: string[];\n    cookiecutterCompat?: boolean;\n    replace?: boolean;\n    trimBlocks?: boolean;\n    lstripBlocks?: boolean;\n    token?: string;\n  }>({\n    id: 'fetch:template',\n    description:\n      'Downloads a skeleton, templates variables into file and directory names and content, and places the result in the workspace, or optionally in a subdirectory specified by the `targetPath` input option.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to. Defaults to the working directory root.',\n            type: 'string',\n          },\n          values: {\n            title: 'Template Values',\n            description: 'Values to pass on to the templating engine',\n            type: 'object',\n          },\n          copyWithoutRender: {\n            title: '[Deprecated] Copy Without Render',\n            description:\n              'An array of glob patterns. Any files or directories which match are copied without being processed as templates.',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          copyWithoutTemplating: {\n            title: 'Copy Without Templating',\n            description:\n              'An array of glob patterns. Contents of matched files or directories are copied without being processed, but paths are subject to rendering.',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          cookiecutterCompat: {\n            title: 'Cookiecutter compatibility mode',\n            description:\n              'Enable features to maximise compatibility with templates built for fetch:cookiecutter',\n            type: 'boolean',\n          },\n          templateFileExtension: {\n            title: 'Template File Extension',\n            description:\n              'If set, only files with the given extension will be templated. If set to `true`, the default extension `.njk` is used.',\n            type: ['string', 'boolean'],\n          },\n          replace: {\n            title: 'Replace files',\n            description:\n              'If set, replace files in targetPath instead of skipping existing ones.',\n            type: 'boolean',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching template content from remote URL');\n\n      const workDir = await ctx.createTemporaryDirectory();\n      const templateDir = resolveSafeChildPath(workDir, 'template');\n\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputDir = resolveSafeChildPath(ctx.workspacePath, targetPath);\n      if (ctx.input.copyWithoutRender && ctx.input.copyWithoutTemplating) {\n        throw new InputError(\n          'Fetch action input copyWithoutRender and copyWithoutTemplating can not be used at the same time',\n        );\n      }\n\n      let copyOnlyPatterns: string[] | undefined;\n      let renderFilename: boolean;\n      if (ctx.input.copyWithoutRender) {\n        ctx.logger.warn(\n          '[Deprecated] copyWithoutRender is deprecated Please use copyWithoutTemplating instead.',\n        );\n        copyOnlyPatterns = ctx.input.copyWithoutRender;\n        renderFilename = false;\n      } else {\n        copyOnlyPatterns = ctx.input.copyWithoutTemplating;\n        renderFilename = true;\n      }\n\n      if (copyOnlyPatterns && !Array.isArray(copyOnlyPatterns)) {\n        throw new InputError(\n          'Fetch action input copyWithoutRender/copyWithoutTemplating must be an Array',\n        );\n      }\n\n      if (\n        ctx.input.templateFileExtension &&\n        (copyOnlyPatterns || ctx.input.cookiecutterCompat)\n      ) {\n        throw new InputError(\n          'Fetch action input extension incompatible with copyWithoutRender/copyWithoutTemplating and cookiecutterCompat',\n        );\n      }\n\n      let extension: string | false = false;\n      if (ctx.input.templateFileExtension) {\n        extension =\n          ctx.input.templateFileExtension === true\n            ? '.njk'\n            : ctx.input.templateFileExtension;\n        if (!extension.startsWith('.')) {\n          extension = `.${extension}`;\n        }\n      }\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath: templateDir,\n        token: ctx.input.token,\n      });\n\n      ctx.logger.info('Listing files and directories in template');\n      const allEntriesInTemplate = await globby(`**/*`, {\n        cwd: templateDir,\n        dot: true,\n        onlyFiles: false,\n        markDirectories: true,\n        followSymbolicLinks: false,\n      });\n\n      const nonTemplatedEntries = new Set(\n        await globby(copyOnlyPatterns || [], {\n          cwd: templateDir,\n          dot: true,\n          onlyFiles: false,\n          markDirectories: true,\n          followSymbolicLinks: false,\n        }),\n      );\n\n      // Cookiecutter prefixes all parameters in templates with\n      // `cookiecutter.`. To replicate this, we wrap our parameters\n      // in an object with a `cookiecutter` property when compat\n      // mode is enabled.\n      const { cookiecutterCompat, values } = ctx.input;\n      const context = {\n        [cookiecutterCompat ? 'cookiecutter' : 'values']: values,\n      };\n\n      ctx.logger.info(\n        `Processing ${allEntriesInTemplate.length} template files/directories with input values`,\n        ctx.input.values,\n      );\n\n      const renderTemplate = await SecureTemplater.loadRenderer({\n        cookiecutterCompat: ctx.input.cookiecutterCompat,\n        templateFilters: {\n          ...defaultTemplateFilters,\n          ...additionalTemplateFilters,\n        },\n        templateGlobals: additionalTemplateGlobals,\n        nunjucksConfigs: {\n          trimBlocks: ctx.input.trimBlocks,\n          lstripBlocks: ctx.input.lstripBlocks,\n        },\n      });\n\n      for (const location of allEntriesInTemplate) {\n        let renderContents: boolean;\n\n        let localOutputPath = location;\n        if (extension) {\n          renderContents = extname(localOutputPath) === extension;\n          if (renderContents) {\n            localOutputPath = localOutputPath.slice(0, -extension.length);\n          }\n          // extension is mutual exclusive with copyWithoutRender/copyWithoutTemplating,\n          // therefore the output path is always rendered.\n          localOutputPath = renderTemplate(localOutputPath, context);\n        } else {\n          renderContents = !nonTemplatedEntries.has(location);\n          // The logic here is a bit tangled because it depends on two variables.\n          // If renderFilename is true, which means copyWithoutTemplating is used,\n          // then the path is always rendered.\n          // If renderFilename is false, which means copyWithoutRender is used,\n          // then matched file/directory won't be processed, same as before.\n          if (renderFilename) {\n            localOutputPath = renderTemplate(localOutputPath, context);\n          } else {\n            localOutputPath = renderContents\n              ? renderTemplate(localOutputPath, context)\n              : localOutputPath;\n          }\n        }\n\n        if (containsSkippedContent(localOutputPath)) {\n          continue;\n        }\n\n        const outputPath = resolveSafeChildPath(outputDir, localOutputPath);\n        if (fs.existsSync(outputPath) && !ctx.input.replace) {\n          continue;\n        }\n\n        if (!renderContents && !extension) {\n          ctx.logger.info(\n            `Copying file/directory ${location} without processing.`,\n          );\n        }\n\n        if (location.endsWith('/')) {\n          ctx.logger.info(\n            `Writing directory ${location} to template output path.`,\n          );\n          await fs.ensureDir(outputPath);\n        } else {\n          const inputFilePath = resolveSafeChildPath(templateDir, location);\n          const stats = await fs.promises.lstat(inputFilePath);\n\n          if (stats.isSymbolicLink() || (await isBinaryFile(inputFilePath))) {\n            ctx.logger.info(\n              `Copying file binary or symbolic link at ${location}, to template output path.`,\n            );\n            await fs.copy(inputFilePath, outputPath);\n          } else {\n            const statsObj = await fs.stat(inputFilePath);\n            ctx.logger.info(\n              `Writing file ${location} to template output path with mode ${statsObj.mode}.`,\n            );\n            const inputFileContents = await fs.readFile(inputFilePath, 'utf-8');\n            await fs.outputFile(\n              outputPath,\n              renderContents\n                ? renderTemplate(inputFileContents, context)\n                : inputFileContents,\n              { mode: statsObj.mode },\n            );\n          }\n        }\n      }\n\n      ctx.logger.info(`Template result written to ${outputDir}`);\n    },\n  });\n}\n\nfunction containsSkippedContent(localOutputPath: string): boolean {\n  // if the path is empty means that there is a file skipped in the root\n  // if the path starts with a separator it means that the root directory has been skipped\n  // if the path includes // means that there is a subdirectory skipped\n  // All paths returned are considered with / separator because of globby returning the linux separator for all os'.\n  return (\n    localOutputPath === '' ||\n    localOutputPath.startsWith('/') ||\n    localOutputPath.includes('//')\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Delete specified files',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fs:delete',\n          id: 'deleteFiles',\n          name: 'Delete files',\n          input: {\n            files: ['file1.txt', 'file2.txt'],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { InputError } from '@backstage/errors';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport fs from 'fs-extra';\nimport { examples } from './delete.examples';\n\n/**\n * Creates new action that enables deletion of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemDeleteAction = () => {\n  return createTemplateAction<{ files: string[] }>({\n    id: 'fs:delete',\n    description: 'Deletes files and directories from the workspace',\n    examples,\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description: 'A list of files and directories that will be deleted',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        const filepath = resolveSafeChildPath(ctx.workspacePath, file);\n\n        try {\n          await fs.remove(filepath);\n          ctx.logger.info(`File ${filepath} deleted successfully`);\n        } catch (err) {\n          ctx.logger.error(`Failed to delete file ${filepath}:`, err);\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Rename specified files ',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fs:rename',\n          id: 'renameFiles',\n          name: 'Rename files',\n          input: {\n            files: [\n              { from: 'file1.txt', to: 'file1Renamed.txt' },\n              { from: 'file2.txt', to: 'file2Renamed.txt' },\n              { from: 'file3.txt', to: 'file3Renamed.txt', overwrite: true },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { InputError } from '@backstage/errors';\nimport fs from 'fs-extra';\nimport { examples } from './rename.examples';\n\n/**\n * Creates a new action that allows renames of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemRenameAction = () => {\n  return createTemplateAction<{\n    files: Array<{\n      from: string;\n      to: string;\n      overwrite?: boolean;\n    }>;\n  }>({\n    id: 'fs:rename',\n    description: 'Renames files and directories within the workspace',\n    examples,\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description:\n              'A list of file and directory names that will be renamed',\n            type: 'array',\n            items: {\n              type: 'object',\n              required: ['from', 'to'],\n              properties: {\n                from: {\n                  type: 'string',\n                  title: 'The source location of the file to be renamed',\n                },\n                to: {\n                  type: 'string',\n                  title: 'The destination of the new file',\n                },\n                overwrite: {\n                  type: 'boolean',\n                  title:\n                    'Overwrite existing file or directory, default is false',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        if (!file.from || !file.to) {\n          throw new InputError('each file must have a from and to property');\n        }\n\n        const sourceFilepath = resolveSafeChildPath(\n          ctx.workspacePath,\n          file.from,\n        );\n        const destFilepath = resolveSafeChildPath(ctx.workspacePath, file.to);\n\n        try {\n          await fs.move(sourceFilepath, destFilepath, {\n            overwrite: file.overwrite ?? false,\n          });\n          ctx.logger.info(\n            `File ${sourceFilepath} renamed to ${destFilepath} successfully`,\n          );\n        } catch (err) {\n          ctx.logger.error(\n            `Failed to rename file ${sourceFilepath} to ${destFilepath}:`,\n            err,\n          );\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { Config } from '@backstage/config';\nimport {\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport {\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  createCatalogRegisterAction,\n  createCatalogWriteAction,\n  createFetchCatalogEntityAction,\n} from './catalog';\n\nimport { createDebugLogAction, createWaitAction } from './debug';\nimport {\n  createFetchPlainAction,\n  createFetchPlainFileAction,\n  createFetchTemplateAction,\n} from './fetch';\nimport {\n  createFilesystemDeleteAction,\n  createFilesystemRenameAction,\n} from './filesystem';\nimport {\n  createGithubActionsDispatchAction,\n  createGithubAutolinksAction,\n  createGithubDeployKeyAction,\n  createGithubEnvironmentAction,\n  createGithubIssuesLabelAction,\n  createGithubRepoCreateAction,\n  createGithubRepoPushAction,\n  createGithubWebhookAction,\n  createPublishGithubAction,\n  createPublishGithubPullRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-github';\n\nimport { createPublishAzureAction } from '@backstage/plugin-scaffolder-backend-module-azure';\n\nimport { createPublishBitbucketAction } from '@backstage/plugin-scaffolder-backend-module-bitbucket';\n\nimport {\n  createPublishBitbucketCloudAction,\n  createBitbucketPipelinesRunAction,\n} from '@backstage/plugin-scaffolder-backend-module-bitbucket-cloud';\n\nimport {\n  createPublishBitbucketServerAction,\n  createPublishBitbucketServerPullRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-bitbucket-server';\n\nimport {\n  createPublishGerritAction,\n  createPublishGerritReviewAction,\n} from '@backstage/plugin-scaffolder-backend-module-gerrit';\n\nimport {\n  createPublishGitlabAction,\n  createGitlabRepoPushAction,\n  createPublishGitlabMergeRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-gitlab';\n\nimport { createPublishGiteaAction } from '@backstage/plugin-scaffolder-backend-module-gitea';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\n/**\n * The options passed to {@link createBuiltinActions}\n * @public\n */\nexport interface CreateBuiltInActionsOptions {\n  /**\n   * The {@link @backstage/backend-common#UrlReader} interface that will be used in the default actions.\n   */\n  reader: UrlReader;\n  /**\n   * The {@link @backstage/integrations#ScmIntegrations} that will be used in the default actions.\n   */\n  integrations: ScmIntegrations;\n  /**\n   * The {@link @backstage/catalog-client#CatalogApi} that will be used in the default actions.\n   */\n  catalogClient: CatalogApi;\n  /**\n   * The {@link @backstage/backend-plugin-api#AuthService} that will be used in the default actions.\n   */\n  auth?: AuthService;\n  /**\n   * The {@link @backstage/config#Config} that will be used in the default actions.\n   */\n  config: Config;\n  /**\n   * Additional custom filters that will be passed to the nunjucks template engine for use in\n   * Template Manifests and also template skeleton files when using `fetch:template`.\n   */\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n}\n\n/**\n * A function to generate create a list of default actions that the scaffolder provides.\n * Is called internally in the default setup, but can be used when adding your own actions or overriding the default ones\n *\n * TODO(blam): version 2 of the scaffolder shouldn't ship with the additional modules. We should ship the basics, and let people install\n * modules for the providers they want to use.\n * @public\n * @returns A list of actions that can be used in the scaffolder\n *\n */\nexport const createBuiltinActions = (\n  options: CreateBuiltInActionsOptions,\n): TemplateAction[] => {\n  const {\n    reader,\n    integrations,\n    catalogClient,\n    auth,\n    config,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n  } = options;\n\n  const githubCredentialsProvider: GithubCredentialsProvider =\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  const actions = [\n    createFetchPlainAction({\n      reader,\n      integrations,\n    }),\n    createFetchPlainFileAction({\n      reader,\n      integrations,\n    }),\n    createFetchTemplateAction({\n      integrations,\n      reader,\n      additionalTemplateFilters,\n      additionalTemplateGlobals,\n    }),\n    createPublishGerritAction({\n      integrations,\n      config,\n    }),\n    createPublishGerritReviewAction({\n      integrations,\n      config,\n    }),\n    createPublishGiteaAction({\n      integrations,\n      config,\n    }),\n    createPublishGithubAction({\n      integrations,\n      config,\n      githubCredentialsProvider,\n    }),\n    createPublishGithubPullRequestAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createPublishGitlabAction({\n      integrations,\n      config,\n    }),\n    createPublishGitlabMergeRequestAction({\n      integrations,\n    }),\n    createGitlabRepoPushAction({\n      integrations,\n    }),\n    createPublishBitbucketAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketCloudAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketServerAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketServerPullRequestAction({\n      integrations,\n      config,\n    }),\n    createPublishAzureAction({\n      integrations,\n      config,\n    }),\n    createDebugLogAction(),\n    createWaitAction(),\n    createCatalogRegisterAction({ catalogClient, integrations, auth }),\n    createFetchCatalogEntityAction({ catalogClient, auth }),\n    createCatalogWriteAction(),\n    createFilesystemDeleteAction(),\n    createFilesystemRenameAction(),\n    createGithubActionsDispatchAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubWebhookAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubIssuesLabelAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubRepoCreateAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubRepoPushAction({\n      integrations,\n      config,\n      githubCredentialsProvider,\n    }),\n    createGithubEnvironmentAction({\n      integrations,\n    }),\n    createGithubDeployKeyAction({\n      integrations,\n    }),\n    createGithubAutolinksAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createBitbucketPipelinesRunAction({\n      integrations,\n    }),\n  ];\n\n  return actions as TemplateAction[];\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\n/**\n * Registry of all registered template actions.\n * @public\n */\nexport class TemplateActionRegistry {\n  private readonly actions = new Map<string, TemplateAction>();\n\n  register(action: TemplateAction) {\n    if (this.actions.has(action.id)) {\n      throw new ConflictError(\n        `Template action with ID '${action.id}' has already been registered`,\n      );\n    }\n\n    this.actions.set(action.id, action);\n  }\n\n  get(actionId: string): TemplateAction {\n    const action = this.actions.get(actionId);\n    if (!action) {\n      throw new NotFoundError(\n        `Template action with ID '${actionId}' is not registered.`,\n      );\n    }\n    return action;\n  }\n\n  list(): TemplateAction[] {\n    return [...this.actions.values()];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SerializedTaskEvent } from '@backstage/plugin-scaffolder-node';\nimport { TaskRecoverStrategy } from '@backstage/plugin-scaffolder-common';\n\nexport const trimEventsTillLastRecovery = (\n  events: SerializedTaskEvent[],\n): { events: SerializedTaskEvent[] } => {\n  const recoveredEventInd = events\n    .slice()\n    .reverse()\n    .findIndex(event => event.type === 'recovered');\n\n  if (recoveredEventInd >= 0) {\n    const ind = events.length - recoveredEventInd - 1;\n    const { recoverStrategy } = events[ind].body as {\n      recoverStrategy: TaskRecoverStrategy;\n    };\n    if (recoverStrategy === 'startOver') {\n      return {\n        events: recoveredEventInd === 0 ? [] : events.slice(ind),\n      };\n    }\n  }\n\n  return { events };\n};\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Knex } from 'knex';\n\nexport const intervalFromNowTill = (timeoutS: number, knex: Knex) => {\n  let heartbeatInterval = knex.raw(`? - interval '${timeoutS} seconds'`, [\n    knex.fn.now(),\n  ]);\n  if (knex.client.config.client.includes('mysql')) {\n    heartbeatInterval = knex.raw(\n      `date_sub(now(), interval ${timeoutS} second)`,\n    );\n  } else if (knex.client.config.client.includes('sqlite3')) {\n    heartbeatInterval = knex.raw(`datetime('now', ?)`, [\n      `-${timeoutS} seconds`,\n    ]);\n  }\n  return heartbeatInterval;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport {\n  PluginDatabaseManager,\n  resolvePackagePath,\n} from '@backstage/backend-common';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { v4 as uuid } from 'uuid';\nimport {\n  TaskStore,\n  TaskStoreEmitOptions,\n  TaskStoreListEventsOptions,\n  TaskStoreCreateTaskOptions,\n  TaskStoreCreateTaskResult,\n  TaskStoreShutDownTaskOptions,\n  TaskStoreRecoverTaskOptions,\n} from './types';\nimport {\n  SerializedTaskEvent,\n  SerializedTask,\n  TaskStatus,\n  TaskEventType,\n  TaskSecrets,\n} from '@backstage/plugin-scaffolder-node';\nimport { DateTime, Duration } from 'luxon';\nimport { TaskRecovery, TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { trimEventsTillLastRecovery } from './taskRecoveryHelper';\nimport { intervalFromNowTill } from './dbUtil';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-scaffolder-backend',\n  'migrations',\n);\n\nexport type RawDbTaskRow = {\n  id: string;\n  spec: string;\n  status: TaskStatus;\n  state?: string;\n  last_heartbeat_at?: string;\n  created_at: string;\n  created_by: string | null;\n  secrets?: string | null;\n};\n\nexport type RawDbTaskEventRow = {\n  id: number;\n  task_id: string;\n  body: string;\n  event_type: TaskEventType;\n  created_at: string;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport type DatabaseTaskStoreOptions = {\n  database: PluginDatabaseManager | Knex;\n};\n\n/**\n * Type guard to help DatabaseTaskStore understand when database is PluginDatabaseManager vs. when database is a Knex instance.\n *\n * * @public\n */\nfunction isPluginDatabaseManager(\n  opt: PluginDatabaseManager | Knex,\n): opt is PluginDatabaseManager {\n  return (opt as PluginDatabaseManager).getClient !== undefined;\n}\n\nconst parseSqlDateToIsoString = <T>(input: T): T | string => {\n  if (typeof input === 'string') {\n    const parsed = DateTime.fromSQL(input, { zone: 'UTC' });\n    if (!parsed.isValid) {\n      throw new Error(\n        `Failed to parse database timestamp '${input}', ${parsed.invalidReason}: ${parsed.invalidExplanation}`,\n      );\n    }\n    return parsed.toISO()!;\n  }\n\n  return input;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport class DatabaseTaskStore implements TaskStore {\n  private readonly db: Knex;\n\n  static async create(\n    options: DatabaseTaskStoreOptions,\n  ): Promise<DatabaseTaskStore> {\n    const { database } = options;\n    const client = await this.getClient(database);\n\n    await this.runMigrations(database, client);\n\n    return new DatabaseTaskStore(client);\n  }\n\n  private isRecoverableTask(spec: TaskSpec): boolean {\n    return ['startOver'].includes(\n      spec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? 'none',\n    );\n  }\n\n  private parseSpec({ spec, id }: { spec: string; id: string }): TaskSpec {\n    try {\n      return JSON.parse(spec);\n    } catch (error) {\n      throw new Error(`Failed to parse spec of task '${id}', ${error}`);\n    }\n  }\n\n  private parseTaskSecrets(taskRow: RawDbTaskRow): TaskSecrets | undefined {\n    try {\n      return taskRow.secrets ? JSON.parse(taskRow.secrets) : undefined;\n    } catch (error) {\n      throw new Error(\n        `Failed to parse secrets of task '${taskRow.id}', ${error}`,\n      );\n    }\n  }\n\n  private static async getClient(\n    database: PluginDatabaseManager | Knex,\n  ): Promise<Knex> {\n    if (isPluginDatabaseManager(database)) {\n      return database.getClient();\n    }\n\n    return database;\n  }\n\n  private static async runMigrations(\n    database: PluginDatabaseManager | Knex,\n    client: Knex,\n  ): Promise<void> {\n    if (!isPluginDatabaseManager(database)) {\n      await client.migrate.latest({\n        directory: migrationsDir,\n      });\n\n      return;\n    }\n\n    if (!database.migrations?.skip) {\n      await client.migrate.latest({\n        directory: migrationsDir,\n      });\n    }\n  }\n\n  private constructor(client: Knex) {\n    this.db = client;\n  }\n\n  async list(options: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    const queryBuilder = this.db<RawDbTaskRow>('tasks');\n\n    if (options.createdBy) {\n      queryBuilder.where({\n        created_by: options.createdBy,\n      });\n    }\n\n    const results = await queryBuilder.orderBy('created_at', 'desc').select();\n\n    const tasks = results.map(result => ({\n      id: result.id,\n      spec: JSON.parse(result.spec),\n      status: result.status,\n      createdBy: result.created_by ?? undefined,\n      lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n      createdAt: parseSqlDateToIsoString(result.created_at),\n    }));\n\n    return { tasks };\n  }\n\n  async getTask(taskId: string): Promise<SerializedTask> {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId })\n      .select();\n    if (!result) {\n      throw new NotFoundError(`No task with id '${taskId}' found`);\n    }\n    try {\n      const spec = JSON.parse(result.spec);\n      const secrets = result.secrets ? JSON.parse(result.secrets) : undefined;\n      const state = result.state ? JSON.parse(result.state).state : undefined;\n      return {\n        id: result.id,\n        spec,\n        status: result.status,\n        lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n        createdAt: parseSqlDateToIsoString(result.created_at),\n        createdBy: result.created_by ?? undefined,\n        secrets,\n        state,\n      };\n    } catch (error) {\n      throw new Error(`Failed to parse spec of task '${taskId}', ${error}`);\n    }\n  }\n\n  async createTask(\n    options: TaskStoreCreateTaskOptions,\n  ): Promise<TaskStoreCreateTaskResult> {\n    const taskId = uuid();\n    await this.db<RawDbTaskRow>('tasks').insert({\n      id: taskId,\n      spec: JSON.stringify(options.spec),\n      secrets: options.secrets ? JSON.stringify(options.secrets) : undefined,\n      created_by: options.createdBy ?? null,\n      status: 'open',\n    });\n    return { taskId };\n  }\n\n  async claimTask(): Promise<SerializedTask | undefined> {\n    return this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          status: 'open',\n        })\n        .limit(1)\n        .select();\n\n      if (!task) {\n        return undefined;\n      }\n\n      const spec = this.parseSpec(task);\n\n      const updateCount = await tx<RawDbTaskRow>('tasks')\n        .where({ id: task.id, status: 'open' })\n        .update({\n          status: 'processing',\n          last_heartbeat_at: this.db.fn.now(),\n          // remove the secrets for non-recoverable tasks when moving to processing state.\n          secrets: this.isRecoverableTask(spec) ? task.secrets : null,\n        });\n\n      if (updateCount < 1) {\n        return undefined;\n      }\n\n      const getState = () => {\n        try {\n          return task.state ? JSON.parse(task.state).state : undefined;\n        } catch (error) {\n          throw new Error(\n            `Failed to parse state of the task '${task.id}', ${error}`,\n          );\n        }\n      };\n\n      const secrets = this.parseTaskSecrets(task);\n      return {\n        id: task.id,\n        spec,\n        status: 'processing',\n        lastHeartbeatAt: task.last_heartbeat_at,\n        createdAt: task.created_at,\n        createdBy: task.created_by ?? undefined,\n        secrets,\n        state: getState(),\n      };\n    });\n  }\n\n  async heartbeatTask(taskId: string): Promise<void> {\n    const updateCount = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId, status: 'processing' })\n      .update({\n        last_heartbeat_at: this.db.fn.now(),\n      });\n    if (updateCount === 0) {\n      throw new ConflictError(`No running task with taskId ${taskId} found`);\n    }\n  }\n\n  async listStaleTasks(options: { timeoutS: number }): Promise<{\n    tasks: { taskId: string; recovery?: TaskRecovery }[];\n  }> {\n    const { timeoutS } = options;\n    const heartbeatInterval = intervalFromNowTill(timeoutS, this.db);\n    const rawRows = await this.db<RawDbTaskRow>('tasks')\n      .where('status', 'processing')\n      .andWhere('last_heartbeat_at', '<=', heartbeatInterval);\n    const tasks = rawRows.map(row => ({\n      recovery: (JSON.parse(row.spec) as TaskSpec).EXPERIMENTAL_recovery,\n      taskId: row.id,\n    }));\n    return { tasks };\n  }\n\n  async completeTask(options: {\n    taskId: string;\n    status: TaskStatus;\n    eventBody: JsonObject;\n  }): Promise<void> {\n    const { taskId, status, eventBody } = options;\n\n    let oldStatus: TaskStatus;\n    if (['failed', 'completed', 'cancelled'].includes(status)) {\n      oldStatus = 'processing';\n    } else {\n      throw new Error(\n        `Invalid status update of run '${taskId}' to status '${status}'`,\n      );\n    }\n\n    await this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          id: taskId,\n        })\n        .limit(1)\n        .select();\n\n      const updateTask = async (criteria: {\n        id: string;\n        status?: TaskStatus;\n      }) => {\n        const updateCount = await tx<RawDbTaskRow>('tasks')\n          .where(criteria)\n          .update({\n            status,\n            secrets: null,\n          });\n\n        if (updateCount !== 1) {\n          throw new ConflictError(\n            `Failed to update status to '${status}' for taskId ${taskId}`,\n          );\n        }\n\n        await tx<RawDbTaskEventRow>('task_events').insert({\n          task_id: taskId,\n          event_type: 'completion',\n          body: JSON.stringify(eventBody),\n        });\n      };\n\n      if (status === 'cancelled') {\n        await updateTask({\n          id: taskId,\n        });\n        return;\n      }\n\n      if (task.status === 'cancelled') {\n        return;\n      }\n\n      if (!task) {\n        throw new Error(`No task with taskId ${taskId} found`);\n      }\n      if (task.status !== oldStatus) {\n        throw new ConflictError(\n          `Refusing to update status of run '${taskId}' to status '${status}' ` +\n            `as it is currently '${task.status}', expected '${oldStatus}'`,\n        );\n      }\n\n      await updateTask({\n        id: taskId,\n        status: oldStatus,\n      });\n    });\n  }\n\n  async emitLogEvent(\n    options: TaskStoreEmitOptions<{ message: string } & JsonObject>,\n  ): Promise<void> {\n    const { taskId, body } = options;\n    const serializedBody = JSON.stringify(body);\n    await this.db<RawDbTaskEventRow>('task_events').insert({\n      task_id: taskId,\n      event_type: 'log',\n      body: serializedBody,\n    });\n  }\n\n  async getTaskState({ taskId }: { taskId: string }): Promise<\n    | {\n        state: JsonObject;\n      }\n    | undefined\n  > {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId })\n      .select('state');\n    return result.state ? JSON.parse(result.state) : undefined;\n  }\n\n  async saveTaskState(options: {\n    taskId: string;\n    state?: JsonObject;\n  }): Promise<void> {\n    if (options.state) {\n      const serializedState = JSON.stringify({ state: options.state });\n      await this.db<RawDbTaskRow>('tasks')\n        .where({ id: options.taskId })\n        .update({\n          state: serializedState,\n        });\n    }\n  }\n\n  async listEvents(\n    options: TaskStoreListEventsOptions,\n  ): Promise<{ events: SerializedTaskEvent[] }> {\n    const { taskId, after } = options;\n    const rawEvents = await this.db<RawDbTaskEventRow>('task_events')\n      .where({\n        task_id: taskId,\n      })\n      .andWhere(builder => {\n        if (typeof after === 'number') {\n          builder.where('id', '>', after).orWhere('event_type', 'completion');\n        }\n      })\n      .orderBy('id')\n      .select();\n\n    const events = rawEvents.map(event => {\n      try {\n        const body = JSON.parse(event.body) as JsonObject;\n        return {\n          id: Number(event.id),\n          taskId,\n          body,\n          type: event.event_type,\n          createdAt: parseSqlDateToIsoString(event.created_at),\n        };\n      } catch (error) {\n        throw new Error(\n          `Failed to parse event body from event taskId=${taskId} id=${event.id}, ${error}`,\n        );\n      }\n    });\n\n    return trimEventsTillLastRecovery(events);\n  }\n\n  async shutdownTask(options: TaskStoreShutDownTaskOptions): Promise<void> {\n    const { taskId } = options;\n    const message = `This task was marked as stale as it exceeded its timeout`;\n\n    const statusStepEvents = (await this.listEvents({ taskId })).events.filter(\n      ({ body }) => body?.stepId,\n    );\n\n    const completedSteps = statusStepEvents\n      .filter(\n        ({ body: { status } }) => status === 'failed' || status === 'completed',\n      )\n      .map(step => step.body.stepId);\n\n    const hungProcessingSteps = statusStepEvents\n      .filter(({ body: { status } }) => status === 'processing')\n      .map(event => event.body.stepId)\n      .filter(step => !completedSteps.includes(step));\n\n    for (const step of hungProcessingSteps) {\n      await this.emitLogEvent({\n        taskId,\n        body: {\n          message,\n          stepId: step,\n          status: 'failed',\n        },\n      });\n    }\n\n    await this.completeTask({\n      taskId,\n      status: 'failed',\n      eventBody: {\n        message,\n      },\n    });\n  }\n\n  async cancelTask(\n    options: TaskStoreEmitOptions<{ message: string } & JsonObject>,\n  ): Promise<void> {\n    const { taskId, body } = options;\n    const serializedBody = JSON.stringify(body);\n    await this.db<RawDbTaskEventRow>('task_events').insert({\n      task_id: taskId,\n      event_type: 'cancelled',\n      body: serializedBody,\n    });\n  }\n\n  async recoverTasks(\n    options: TaskStoreRecoverTaskOptions,\n  ): Promise<{ ids: string[] }> {\n    const taskIdsToRecover: string[] = [];\n    const timeoutS = Duration.fromObject(options.timeout).as('seconds');\n\n    await this.db.transaction(async tx => {\n      const heartbeatInterval = intervalFromNowTill(timeoutS, this.db);\n\n      const result = await tx<RawDbTaskRow>('tasks')\n        .where('status', 'processing')\n        .andWhere('last_heartbeat_at', '<=', heartbeatInterval)\n        .update(\n          {\n            status: 'open',\n            last_heartbeat_at: this.db.fn.now(),\n          },\n          ['id', 'spec'],\n        );\n\n      taskIdsToRecover.push(...result.map(i => i.id));\n\n      for (const { id, spec } of result) {\n        const taskSpec = JSON.parse(spec as string) as TaskSpec;\n        await tx<RawDbTaskEventRow>('task_events').insert({\n          task_id: id,\n          event_type: 'recovered',\n          body: JSON.stringify({\n            recoverStrategy:\n              taskSpec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? 'none',\n          }),\n        });\n      }\n    });\n\n    return { ids: taskIdsToRecover };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { HumanDuration } from '@backstage/types';\n\nimport { isArray } from 'lodash';\nimport { Schema } from 'jsonschema';\n\n/**\n * Returns true if the input is not `false`, `undefined`, `null`, `\"\"`, `0`, or\n * `[]`. This behavior is based on the behavior of handlebars, see\n * https://handlebarsjs.com/guide/builtin-helpers.html#if\n */\nexport function isTruthy(value: any): boolean {\n  return isArray(value) ? value.length > 0 : !!value;\n}\n\nexport function generateExampleOutput(schema: Schema): unknown {\n  const { examples } = schema as { examples?: unknown };\n  if (examples && Array.isArray(examples)) {\n    return examples[0];\n  }\n  if (schema.type === 'object') {\n    return Object.fromEntries(\n      Object.entries(schema.properties ?? {}).map(([key, value]) => [\n        key,\n        generateExampleOutput(value),\n      ]),\n    );\n  } else if (schema.type === 'array') {\n    const [firstSchema] = [schema.items]?.flat();\n    if (firstSchema) {\n      return [generateExampleOutput(firstSchema)];\n    }\n    return [];\n  } else if (schema.type === 'string') {\n    return '<example>';\n  } else if (schema.type === 'number') {\n    return 0;\n  } else if (schema.type === 'boolean') {\n    return false;\n  }\n  return '<unknown>';\n}\n\nexport const readDuration = (\n  config: Config | undefined,\n  key: string,\n  defaultValue: HumanDuration,\n) => {\n  if (config?.has(key)) {\n    return readDurationFromConfig(config, { key });\n  }\n  return defaultValue;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject, JsonValue, Observable } from '@backstage/types';\nimport { Logger } from 'winston';\nimport ObservableImpl from 'zen-observable';\nimport {\n  TaskSecrets,\n  SerializedTask,\n  SerializedTaskEvent,\n  TaskBroker,\n  TaskBrokerDispatchOptions,\n  TaskCompletionState,\n  TaskContext,\n} from '@backstage/plugin-scaffolder-node';\nimport { InternalTaskSecrets, TaskStore } from './types';\nimport { readDuration } from './helper';\nimport {\n  AuthService,\n  BackstageCredentials,\n} from '@backstage/backend-plugin-api';\n\ntype TaskState = {\n  checkpoints: {\n    [key: string]:\n      | {\n          status: 'failed';\n          reason: string;\n        }\n      | {\n          status: 'success';\n          value: JsonValue;\n        };\n  };\n};\n/**\n * TaskManager\n *\n * @public\n */\nexport class TaskManager implements TaskContext {\n  private isDone = false;\n\n  private heartbeatTimeoutId?: ReturnType<typeof setInterval>;\n\n  static create(\n    task: CurrentClaimedTask,\n    storage: TaskStore,\n    abortSignal: AbortSignal,\n    logger: Logger,\n    auth?: AuthService,\n  ) {\n    const agent = new TaskManager(task, storage, abortSignal, logger, auth);\n    agent.startTimeout();\n    return agent;\n  }\n\n  // Runs heartbeat internally\n  private constructor(\n    private readonly task: CurrentClaimedTask,\n    private readonly storage: TaskStore,\n    private readonly signal: AbortSignal,\n    private readonly logger: Logger,\n    private readonly auth?: AuthService,\n  ) {}\n\n  get spec() {\n    return this.task.spec;\n  }\n\n  get cancelSignal() {\n    return this.signal;\n  }\n\n  get secrets() {\n    return this.task.secrets;\n  }\n\n  get createdBy() {\n    return this.task.createdBy;\n  }\n\n  async getWorkspaceName() {\n    return this.task.taskId;\n  }\n\n  get done() {\n    return this.isDone;\n  }\n\n  async emitLog(message: string, logMetadata?: JsonObject): Promise<void> {\n    await this.storage.emitLogEvent({\n      taskId: this.task.taskId,\n      body: { message, ...logMetadata },\n    });\n  }\n\n  async getTaskState?(): Promise<\n    | {\n        state?: JsonObject;\n      }\n    | undefined\n  > {\n    return this.storage.getTaskState?.({ taskId: this.task.taskId });\n  }\n\n  async updateCheckpoint?(\n    options:\n      | {\n          key: string;\n          status: 'success';\n          value: JsonValue;\n        }\n      | {\n          key: string;\n          status: 'failed';\n          reason: string;\n        },\n  ): Promise<void> {\n    const { key, ...value } = options;\n    if (this.task.state) {\n      (this.task.state as TaskState).checkpoints[key] = value;\n    } else {\n      this.task.state = { checkpoints: { [key]: value } };\n    }\n    await this.storage.saveTaskState?.({\n      taskId: this.task.taskId,\n      state: this.task.state,\n    });\n  }\n\n  async complete(\n    result: TaskCompletionState,\n    metadata?: JsonObject,\n  ): Promise<void> {\n    await this.storage.completeTask({\n      taskId: this.task.taskId,\n      status: result === 'failed' ? 'failed' : 'completed',\n      eventBody: {\n        message: `Run completed with status: ${result}`,\n        ...metadata,\n      },\n    });\n    this.isDone = true;\n    if (this.heartbeatTimeoutId) {\n      clearTimeout(this.heartbeatTimeoutId);\n    }\n  }\n\n  private startTimeout() {\n    this.heartbeatTimeoutId = setTimeout(async () => {\n      try {\n        await this.storage.heartbeatTask(this.task.taskId);\n        this.startTimeout();\n      } catch (error) {\n        this.isDone = true;\n\n        this.logger.error(\n          `Heartbeat for task ${this.task.taskId} failed`,\n          error,\n        );\n      }\n    }, 1000);\n  }\n\n  async getInitiatorCredentials(): Promise<BackstageCredentials> {\n    const secrets = this.task.secrets as InternalTaskSecrets;\n\n    if (secrets && secrets.__initiatorCredentials) {\n      return JSON.parse(secrets.__initiatorCredentials);\n    }\n    if (!this.auth) {\n      throw new Error(\n        'Failed to create none credentials in scaffolder task. The TaskManager has not been initialized with an auth service implementation',\n      );\n    }\n    return this.auth.getNoneCredentials();\n  }\n}\n\n/**\n * Stores the state of the current claimed task passed to the TaskContext\n *\n * @public\n */\nexport interface CurrentClaimedTask {\n  /**\n   * The TaskSpec of the current claimed task.\n   */\n  spec: TaskSpec;\n  /**\n   * The uuid of the current claimed task.\n   */\n  taskId: string;\n  /**\n   * The secrets that are stored with the task.\n   */\n  secrets?: TaskSecrets;\n  /**\n   * The state of checkpoints of the task.\n   */\n  state?: JsonObject;\n  /**\n   * The creator of the task.\n   */\n  createdBy?: string;\n}\n\nfunction defer() {\n  let resolve = () => {};\n  const promise = new Promise<void>(_resolve => {\n    resolve = _resolve;\n  });\n  return { promise, resolve };\n}\n\nexport class StorageTaskBroker implements TaskBroker {\n  constructor(\n    private readonly storage: TaskStore,\n    private readonly logger: Logger,\n    private readonly config?: Config,\n    private readonly auth?: AuthService,\n  ) {}\n\n  async list(options?: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    if (!this.storage.list) {\n      throw new Error(\n        'TaskStore does not implement the list method. Please implement the list method to be able to list tasks',\n      );\n    }\n    return await this.storage.list({ createdBy: options?.createdBy });\n  }\n\n  private deferredDispatch = defer();\n\n  private async registerCancellable(\n    taskId: string,\n    abortController: AbortController,\n  ) {\n    let shouldUnsubscribe = false;\n    const subscription = this.event$({ taskId, after: undefined }).subscribe({\n      error: _ => {\n        subscription.unsubscribe();\n      },\n      next: ({ events }) => {\n        for (const event of events) {\n          if (event.type === 'cancelled') {\n            abortController.abort();\n            shouldUnsubscribe = true;\n          }\n\n          if (event.type === 'completion') {\n            shouldUnsubscribe = true;\n          }\n        }\n        if (shouldUnsubscribe) {\n          subscription.unsubscribe();\n        }\n      },\n    });\n  }\n\n  public async recoverTasks(): Promise<void> {\n    const enabled =\n      (this.config &&\n        this.config.getOptionalBoolean(\n          'scaffolder.EXPERIMENTAL_recoverTasks',\n        )) ??\n      false;\n\n    if (enabled) {\n      const defaultTimeout = { seconds: 30 };\n      const timeout = readDuration(\n        this.config,\n        'scaffolder.EXPERIMENTAL_recoverTasksTimeout',\n        defaultTimeout,\n      );\n      const { ids: recoveredTaskIds } = (await this.storage.recoverTasks?.({\n        timeout,\n      })) ?? { ids: [] };\n      if (recoveredTaskIds.length > 0) {\n        this.signalDispatch();\n      }\n    }\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.claim}\n   */\n  async claim(): Promise<TaskContext> {\n    for (;;) {\n      const pendingTask = await this.storage.claimTask();\n      if (pendingTask) {\n        const abortController = new AbortController();\n        await this.registerCancellable(pendingTask.id, abortController);\n        return TaskManager.create(\n          {\n            taskId: pendingTask.id,\n            spec: pendingTask.spec,\n            secrets: pendingTask.secrets,\n            createdBy: pendingTask.createdBy,\n            state: pendingTask.state,\n          },\n          this.storage,\n          abortController.signal,\n          this.logger,\n          this.auth,\n        );\n      }\n\n      await this.waitForDispatch();\n    }\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.dispatch}\n   */\n  async dispatch(\n    options: TaskBrokerDispatchOptions,\n  ): Promise<{ taskId: string }> {\n    const taskRow = await this.storage.createTask(options);\n    this.signalDispatch();\n    return {\n      taskId: taskRow.taskId,\n    };\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.get}\n   */\n  async get(taskId: string): Promise<SerializedTask> {\n    return this.storage.getTask(taskId);\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.event$}\n   */\n  event$(options: {\n    taskId: string;\n    after?: number;\n  }): Observable<{ events: SerializedTaskEvent[] }> {\n    return new ObservableImpl(observer => {\n      const { taskId } = options;\n\n      let after = options.after;\n      let cancelled = false;\n\n      (async () => {\n        while (!cancelled) {\n          const result = await this.storage.listEvents({ taskId, after });\n          const { events } = result;\n          if (events.length) {\n            after = events[events.length - 1].id;\n            observer.next(result);\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      })();\n\n      return () => {\n        cancelled = true;\n      };\n    });\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.vacuumTasks}\n   */\n  async vacuumTasks(options: { timeoutS: number }): Promise<void> {\n    const { tasks } = await this.storage.listStaleTasks(options);\n    await Promise.all(\n      tasks.map(async task => {\n        try {\n          await this.storage.completeTask({\n            taskId: task.taskId,\n            status: 'failed',\n            eventBody: {\n              message:\n                'The task was cancelled because the task worker lost connection to the task broker',\n            },\n          });\n        } catch (error) {\n          this.logger.warn(`Failed to cancel task '${task.taskId}', ${error}`);\n        }\n      }),\n    );\n  }\n\n  private waitForDispatch() {\n    return this.deferredDispatch.promise;\n  }\n\n  private signalDispatch() {\n    this.deferredDispatch.resolve();\n    this.deferredDispatch = defer();\n  }\n\n  async cancel(taskId: string) {\n    const { events } = await this.storage.listEvents({ taskId });\n    const currentStepId =\n      events.length > 0\n        ? events\n            .filter(({ body }) => body?.stepId)\n            .reduce((prev, curr) => (prev.id > curr.id ? prev : curr)).body\n            .stepId\n        : 0;\n\n    await this.storage.cancelTask?.({\n      taskId,\n      body: {\n        message: `Step ${currentStepId} has been cancelled.`,\n        stepId: currentStepId,\n        status: 'cancelled',\n      },\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Counter,\n  CounterConfiguration,\n  Gauge,\n  GaugeConfiguration,\n  Histogram,\n  HistogramConfiguration,\n  register,\n  Summary,\n  SummaryConfiguration,\n} from 'prom-client';\n\nexport function createCounterMetric<T extends string>(\n  config: CounterConfiguration<T>,\n): Counter<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Counter<T>(config);\n    register.registerMetric(metric);\n  }\n  return metric as Counter<T>;\n}\n\nexport function createGaugeMetric<T extends string>(\n  config: GaugeConfiguration<T>,\n): Gauge<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Gauge<T>(config);\n    register.registerMetric(metric);\n  }\n  return metric as Gauge<T>;\n}\n\nexport function createSummaryMetric<T extends string>(\n  config: SummaryConfiguration<T>,\n): Summary<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Summary<T>(config);\n    register.registerMetric(metric);\n  }\n\n  return metric as Summary<T>;\n}\n\nexport function createHistogramMetric<T extends string>(\n  config: HistogramConfiguration<T>,\n): Histogram<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Histogram<T>(config);\n    register.registerMetric(metric);\n  }\n\n  return metric as Histogram<T>;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeCreatePermissionRule } from '@backstage/plugin-permission-node';\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n} from '@backstage/plugin-scaffolder-common/alpha';\n\nimport {\n  TemplateEntityStepV1beta3,\n  TemplateParametersV1beta3,\n} from '@backstage/plugin-scaffolder-common';\n\nimport { z } from 'zod';\nimport { JsonObject, JsonPrimitive } from '@backstage/types';\nimport { get } from 'lodash';\n\nexport const createTemplatePermissionRule = makeCreatePermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE\n>();\n\nexport const hasTag = createTemplatePermissionRule({\n  name: 'HAS_TAG',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  description: `Match parameters or steps with the given tag`,\n  paramsSchema: z.object({\n    tag: z.string().describe('Name of the tag to match on'),\n  }),\n  apply: (resource, { tag }) => {\n    return resource['backstage:permissions']?.tags?.includes(tag) ?? false;\n  },\n  toQuery: () => ({}),\n});\n\nexport const createActionPermissionRule = makeCreatePermissionRule<\n  {\n    action: string;\n    input: JsonObject | undefined;\n  },\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION\n>();\n\nexport const hasActionId = createActionPermissionRule({\n  name: 'HAS_ACTION_ID',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  description: `Match actions with the given actionId`,\n  paramsSchema: z.object({\n    actionId: z.string().describe('Name of the actionId to match on'),\n  }),\n  apply: (resource, { actionId }) => {\n    return resource.action === actionId;\n  },\n  toQuery: () => ({}),\n});\n\nexport const hasProperty = buildHasProperty({\n  name: 'HAS_PROPERTY',\n  valueSchema: z.union([z.string(), z.number(), z.boolean(), z.null()]),\n  validateProperty: false,\n});\n\nexport const hasBooleanProperty = buildHasProperty({\n  name: 'HAS_BOOLEAN_PROPERTY',\n  valueSchema: z.boolean(),\n});\nexport const hasNumberProperty = buildHasProperty({\n  name: 'HAS_NUMBER_PROPERTY',\n  valueSchema: z.number(),\n});\nexport const hasStringProperty = buildHasProperty({\n  name: 'HAS_STRING_PROPERTY',\n  valueSchema: z.string(),\n});\n\nfunction buildHasProperty<Schema extends z.ZodType<JsonPrimitive>>({\n  name,\n  valueSchema,\n  validateProperty = true,\n}: {\n  name: string;\n  valueSchema: Schema;\n  validateProperty?: boolean;\n}) {\n  return createActionPermissionRule({\n    name,\n    description: `Allow actions with the specified property`,\n    resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n    paramsSchema: z.object({\n      key: z\n        .string()\n        .describe(`Property within the action parameters to match on`),\n      value: valueSchema\n        .optional()\n        .describe(`Value of the given property to match on`),\n    }) as unknown as z.ZodType<{ key: string; value?: z.infer<Schema> }>,\n    apply: (resource, { key, value }) => {\n      const foundValue = get(resource.input, key);\n\n      if (validateProperty && !valueSchema.safeParse(foundValue).success) {\n        return false;\n      }\n      if (value !== undefined) {\n        if (valueSchema.safeParse(value).success) {\n          return value === foundValue;\n        }\n        return false;\n      }\n\n      return foundValue !== undefined;\n    },\n    toQuery: () => ({}),\n  });\n}\n\nexport const scaffolderTemplateRules = { hasTag };\nexport const scaffolderActionRules = {\n  hasActionId,\n  hasBooleanProperty,\n  hasNumberProperty,\n  hasStringProperty,\n};\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  LoggerService,\n  RootLoggerService,\n} from '@backstage/backend-plugin-api';\nimport { JsonObject } from '@backstage/types';\nimport { Format, TransformableInfo } from 'logform';\nimport Transport, { TransportStreamOptions } from 'winston-transport';\nimport { Logger, format, createLogger, transports } from 'winston';\n\n/**\n * Escapes a given string to be used inside a RegExp.\n *\n * Taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nconst escapeRegExp = (text: string) => {\n  return text.replace(/[.*+?^${}(\\)|[\\]\\\\]/g, '\\\\$&');\n};\n\ninterface WinstonLoggerOptions {\n  meta?: JsonObject;\n  level: string;\n  format: Format;\n  transports: Transport[];\n}\n\n// This is a workaround for being able to preserve the log format of the root logger.\n// Will revisit all of this implementation once we can break the router to use only `LoggerService`.\nexport class BackstageLoggerTransport extends Transport {\n  constructor(\n    private readonly backstageLogger: LoggerService,\n    opts?: TransportStreamOptions,\n  ) {\n    super(opts);\n  }\n\n  log(info: unknown, callback: VoidFunction) {\n    if (typeof info !== 'object' || info === null) {\n      callback();\n      return;\n    }\n    const { level, message, ...meta } = info as JsonObject;\n    switch (level) {\n      case 'error':\n        this.backstageLogger.error(String(message), meta);\n        break;\n      case 'warn':\n        this.backstageLogger.warn(String(message), meta);\n        break;\n      case 'info':\n        this.backstageLogger.info(String(message), meta);\n        break;\n      case 'debug':\n        this.backstageLogger.debug(String(message), meta);\n        break;\n      default:\n        this.backstageLogger.info(String(message), meta);\n    }\n    callback();\n  }\n}\n\nexport class WinstonLogger implements RootLoggerService {\n  #winston: Logger;\n  #addRedactions?: (redactions: Iterable<string>) => void;\n\n  /**\n   * Creates a {@link WinstonLogger} instance.\n   */\n  static create(options: WinstonLoggerOptions): WinstonLogger {\n    const redacter = WinstonLogger.redacter();\n\n    let logger = createLogger({\n      level: options.level,\n      format: format.combine(redacter.format, options.format),\n      transports: options.transports ?? new transports.Console(),\n    });\n    if (options.meta) {\n      logger = logger.child(options.meta);\n    }\n\n    return new WinstonLogger(logger, redacter.add);\n  }\n\n  /**\n   * Creates a winston log formatter for redacting secrets.\n   */\n  static redacter(): {\n    format: Format;\n    add: (redactions: Iterable<string>) => void;\n  } {\n    const redactionSet = new Set<string>();\n\n    let redactionPattern: RegExp | undefined = undefined;\n\n    const replace = (obj: TransformableInfo) => {\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          if (typeof obj[key] === 'object') {\n            obj[key] = replace(obj[key] as TransformableInfo);\n          } else if (typeof obj[key] === 'string') {\n            obj[key] = obj[key]?.replace(redactionPattern, '[REDACTED]');\n          }\n        }\n      }\n      return obj;\n    };\n    return {\n      format: format(replace)(),\n      add(newRedactions) {\n        let added = 0;\n        for (const redactionToTrim of newRedactions) {\n          // Trimming the string ensures that we don't accdentally get extra\n          // newlines or other whitespace interfering with the redaction; this\n          // can happen for example when using string literals in yaml\n          const redaction = redactionToTrim.trim();\n          // Exclude secrets that are empty or just one character in length. These\n          // typically mean that you are running local dev or tests, or using the\n          // --lax flag which sets things to just 'x'.\n          if (redaction.length <= 1) {\n            continue;\n          }\n          if (!redactionSet.has(redaction)) {\n            redactionSet.add(redaction);\n            added += 1;\n          }\n        }\n        if (added > 0) {\n          const redactions = Array.from(redactionSet)\n            .map(r => escapeRegExp(r))\n            .join('|');\n          redactionPattern = new RegExp(`(${redactions})`, 'g');\n        }\n      },\n    };\n  }\n\n  /**\n   * Creates a pretty printed winston log formatter.\n   */\n  static colorFormat(): Format {\n    const colorizer = format.colorize();\n\n    return format.combine(\n      format.timestamp(),\n      format.colorize({\n        colors: {\n          timestamp: 'dim',\n          prefix: 'blue',\n          field: 'cyan',\n          debug: 'grey',\n        },\n      }),\n      format.printf((info: TransformableInfo) => {\n        const { timestamp, level, message, plugin, service, ...fields } = info;\n        const prefix = plugin || service;\n        const timestampColor = colorizer.colorize('timestamp', timestamp);\n        const prefixColor = colorizer.colorize('prefix', prefix);\n\n        const extraFields = Object.entries(fields)\n          .map(\n            ([key, value]) =>\n              `${colorizer.colorize('field', `${key}`)}=${value}`,\n          )\n          .join(' ');\n\n        return `${timestampColor} ${prefixColor} ${level} ${message} ${extraFields}`;\n      }),\n    );\n  }\n\n  private constructor(\n    winston: Logger,\n    addRedactions?: (redactions: Iterable<string>) => void,\n  ) {\n    this.#winston = winston;\n    this.#addRedactions = addRedactions;\n  }\n\n  error(message: string, meta?: JsonObject): void {\n    this.#winston.error(message, meta);\n  }\n\n  warn(message: string, meta?: JsonObject): void {\n    this.#winston.warn(message, meta);\n  }\n\n  info(message: string, meta?: JsonObject): void {\n    this.#winston.info(message, meta);\n  }\n\n  debug(message: string, meta?: JsonObject): void {\n    this.#winston.debug(message, meta);\n  }\n\n  child(meta: JsonObject): LoggerService {\n    return new WinstonLogger(this.#winston.child(meta));\n  }\n\n  addRedactions(redactions: Iterable<string>) {\n    this.#addRedactions?.(redactions);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskTrackType, WorkflowResponse, WorkflowRunner } from './types';\nimport * as winston from 'winston';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport nunjucks from 'nunjucks';\nimport { JsonArray, JsonObject, JsonValue } from '@backstage/types';\nimport { InputError, NotAllowedError, stringifyError } from '@backstage/errors';\nimport { PassThrough } from 'stream';\nimport { generateExampleOutput, isTruthy } from './helper';\nimport { validate as validateJsonSchema } from 'jsonschema';\nimport { TemplateActionRegistry } from '../actions';\nimport {\n  SecureTemplater,\n  SecureTemplateRenderer,\n} from '../../lib/templating/SecureTemplater';\nimport {\n  TaskSpec,\n  TaskSpecV1beta3,\n  TaskStep,\n} from '@backstage/plugin-scaffolder-common';\n\nimport {\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n  TaskContext,\n} from '@backstage/plugin-scaffolder-node';\nimport { createConditionAuthorizer } from '@backstage/plugin-permission-node';\nimport { UserEntity } from '@backstage/catalog-model';\nimport { createCounterMetric, createHistogramMetric } from '../../util/metrics';\nimport { createDefaultFilters } from '../../lib/templating/filters';\nimport {\n  AuthorizeResult,\n  PolicyDecision,\n} from '@backstage/plugin-permission-common';\nimport { scaffolderActionRules } from '../../service/rules';\nimport { actionExecutePermission } from '@backstage/plugin-scaffolder-common/alpha';\nimport { TaskRecovery } from '@backstage/plugin-scaffolder-common';\nimport { PermissionsService } from '@backstage/backend-plugin-api';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport { BackstageLoggerTransport, WinstonLogger } from './logger';\n\ntype NunjucksWorkflowRunnerOptions = {\n  workingDirectory: string;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  logger: winston.Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionsService;\n};\n\ntype TemplateContext = {\n  parameters: JsonObject;\n  EXPERIMENTAL_recovery?: TaskRecovery;\n  steps: {\n    [stepName: string]: { output: { [outputName: string]: JsonValue } };\n  };\n  secrets?: Record<string, string>;\n  user?: {\n    entity?: UserEntity;\n    ref?: string;\n  };\n  each?: JsonValue;\n};\n\ntype CheckpointState =\n  | {\n      status: 'failed';\n      reason: string;\n    }\n  | {\n      status: 'success';\n      value: JsonValue;\n    };\n\nconst isValidTaskSpec = (taskSpec: TaskSpec): taskSpec is TaskSpecV1beta3 => {\n  return taskSpec.apiVersion === 'scaffolder.backstage.io/v1beta3';\n};\n\nconst createStepLogger = ({\n  task,\n  step,\n  rootLogger,\n}: {\n  task: TaskContext;\n  step: TaskStep;\n  rootLogger: winston.Logger;\n}) => {\n  const stepLogStream = new PassThrough();\n  stepLogStream.on('data', async data => {\n    const message = data.toString().trim();\n    if (message?.length > 1) {\n      await task.emitLog(message, { stepId: step.id });\n    }\n  });\n\n  const taskLogger = WinstonLogger.create({\n    level: process.env.LOG_LEVEL || 'info',\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.simple(),\n    ),\n    transports: [\n      new winston.transports.Stream({ stream: stepLogStream }),\n      new BackstageLoggerTransport(rootLogger),\n    ],\n  });\n\n  taskLogger.addRedactions(Object.values(task.secrets ?? {}));\n\n  // This stream logger should be deprecated. We're going to replace it with\n  // just using the logger directly, as all those logs get written to step logs\n  // using the stepLogStream above.\n  // Initially this stream used to be the only way to write to the client logs, but that\n  // has changed over time, there's not really a need for this anymore.\n  // You can just create a simple wrapper like the below in your action to write to the main logger.\n  // This way we also get recactions for free.\n  const streamLogger = new PassThrough();\n  streamLogger.on('data', async data => {\n    const message = data.toString().trim();\n    if (message?.length > 1) {\n      taskLogger.info(message);\n    }\n  });\n\n  return { taskLogger, streamLogger };\n};\n\nconst isActionAuthorized = createConditionAuthorizer(\n  Object.values(scaffolderActionRules),\n);\n\nexport class NunjucksWorkflowRunner implements WorkflowRunner {\n  private readonly defaultTemplateFilters: Record<string, TemplateFilter>;\n\n  constructor(private readonly options: NunjucksWorkflowRunnerOptions) {\n    this.defaultTemplateFilters = createDefaultFilters({\n      integrations: this.options.integrations,\n    });\n  }\n\n  private readonly tracker = scaffoldingTracker();\n\n  private isSingleTemplateString(input: string) {\n    const { parser, nodes } = nunjucks as unknown as {\n      parser: {\n        parse(\n          template: string,\n          ctx: object,\n          options: nunjucks.ConfigureOptions,\n        ): { children: { children?: unknown[] }[] };\n      };\n      nodes: { TemplateData: Function };\n    };\n\n    const parsed = parser.parse(\n      input,\n      {},\n      {\n        autoescape: false,\n        tags: {\n          variableStart: '${{',\n          variableEnd: '}}',\n        },\n      },\n    );\n\n    return (\n      parsed.children.length === 1 &&\n      !(parsed.children[0]?.children?.[0] instanceof nodes.TemplateData)\n    );\n  }\n\n  private render<T>(\n    input: T,\n    context: TemplateContext,\n    renderTemplate: SecureTemplateRenderer,\n  ): T {\n    return JSON.parse(JSON.stringify(input), (_key, value) => {\n      try {\n        if (typeof value === 'string') {\n          try {\n            if (this.isSingleTemplateString(value)) {\n              // Lets convert ${{ parameters.bob }} to ${{ (parameters.bob) | dump }} so we can keep the input type\n              const wrappedDumped = value.replace(\n                /\\${{(.+)}}/g,\n                '${{ ( $1 ) | dump }}',\n              );\n\n              // Run the templating\n              const templated = renderTemplate(wrappedDumped, context);\n\n              // If there's an empty string returned, then it's undefined\n              if (templated === '') {\n                return undefined;\n              }\n\n              // Reparse the dumped string\n              return JSON.parse(templated);\n            }\n          } catch (ex) {\n            this.options.logger.error(\n              `Failed to parse template string: ${value} with error ${ex.message}`,\n            );\n          }\n\n          // Fallback to default behaviour\n          const templated = renderTemplate(value, context);\n\n          if (templated === '') {\n            return undefined;\n          }\n\n          return templated;\n        }\n      } catch {\n        return value;\n      }\n      return value;\n    });\n  }\n\n  async executeStep(\n    task: TaskContext,\n    step: TaskStep,\n    context: TemplateContext,\n    renderTemplate: (template: string, values: unknown) => string,\n    taskTrack: TaskTrackType,\n    workspacePath: string,\n    decision: PolicyDecision,\n  ) {\n    const stepTrack = await this.tracker.stepStart(task, step);\n\n    if (task.cancelSignal.aborted) {\n      throw new Error(`Step ${step.name} has been cancelled.`);\n    }\n\n    try {\n      if (step.if) {\n        const ifResult = this.render(step.if, context, renderTemplate);\n        if (!isTruthy(ifResult)) {\n          await stepTrack.skipFalsy();\n          return;\n        }\n      }\n\n      const action: TemplateAction<JsonObject> =\n        this.options.actionRegistry.get(step.action);\n      const { taskLogger, streamLogger } = createStepLogger({\n        task,\n        step,\n        rootLogger: this.options.logger,\n      });\n\n      if (task.isDryRun) {\n        const redactedSecrets = Object.fromEntries(\n          Object.entries(task.secrets ?? {}).map(secret => [\n            secret[0],\n            '[REDACTED]',\n          ]),\n        );\n        const debugInput =\n          (step.input &&\n            this.render(\n              step.input,\n              {\n                ...context,\n                secrets: redactedSecrets,\n              },\n              renderTemplate,\n            )) ??\n          {};\n        taskLogger.info(\n          `Running ${\n            action.id\n          } in dry-run mode with inputs (secrets redacted): ${JSON.stringify(\n            debugInput,\n            undefined,\n            2,\n          )}`,\n        );\n        if (!action.supportsDryRun) {\n          await taskTrack.skipDryRun(step, action);\n          const outputSchema = action.schema?.output;\n          if (outputSchema) {\n            context.steps[step.id] = {\n              output: generateExampleOutput(outputSchema) as {\n                [name in string]: JsonValue;\n              },\n            };\n          } else {\n            context.steps[step.id] = { output: {} };\n          }\n          return;\n        }\n      }\n      const iterations = (\n        step.each\n          ? Object.entries(this.render(step.each, context, renderTemplate)).map(\n              ([key, value]) => ({\n                each: { key, value },\n              }),\n            )\n          : [{}]\n      ).map(i => ({\n        ...i,\n        // Secrets are only passed when templating the input to actions for security reasons\n        input: step.input\n          ? this.render(\n              step.input,\n              { ...context, secrets: task.secrets ?? {}, ...i },\n              renderTemplate,\n            )\n          : {},\n      }));\n      for (const iteration of iterations) {\n        const actionId = `${action.id}${\n          iteration.each ? `[${iteration.each.key}]` : ''\n        }`;\n\n        if (action.schema?.input) {\n          const validateResult = validateJsonSchema(\n            iteration.input,\n            action.schema.input,\n          );\n          if (!validateResult.valid) {\n            const errors = validateResult.errors.join(', ');\n            throw new InputError(\n              `Invalid input passed to action ${actionId}, ${errors}`,\n            );\n          }\n        }\n        if (\n          !isActionAuthorized(decision, {\n            action: action.id,\n            input: iteration.input,\n          })\n        ) {\n          throw new NotAllowedError(\n            `Unauthorized action: ${actionId}. The action is not allowed. Input: ${JSON.stringify(\n              iteration.input,\n              null,\n              2,\n            )}`,\n          );\n        }\n      }\n      const tmpDirs = new Array<string>();\n      const stepOutput: { [outputName: string]: JsonValue } = {};\n      const prevTaskState = await task.getTaskState?.();\n\n      for (const iteration of iterations) {\n        if (iteration.each) {\n          taskLogger.info(\n            `Running step each: ${JSON.stringify(\n              iteration.each,\n              (k, v) => (k ? v.toString() : v),\n              0,\n            )}`,\n          );\n        }\n        await action.handler({\n          input: iteration.input,\n          secrets: task.secrets ?? {},\n          // TODO(blam): move to LoggerService and away from Winston\n          logger: loggerToWinstonLogger(taskLogger),\n          logStream: streamLogger,\n          workspacePath,\n          async checkpoint<U extends JsonValue>(\n            keySuffix: string,\n            fn: () => Promise<U>,\n          ) {\n            const key = `v1.task.checkpoint.${keySuffix}`;\n            try {\n              let prevValue: U | undefined;\n              if (prevTaskState) {\n                const prevState = (\n                  prevTaskState.state?.checkpoints as {\n                    [key: string]: CheckpointState;\n                  }\n                )?.[key];\n                if (prevState && prevState.status === 'success') {\n                  prevValue = prevState.value as U;\n                }\n              }\n\n              const value = prevValue ? prevValue : await fn();\n\n              if (!prevValue) {\n                task.updateCheckpoint?.({\n                  key,\n                  status: 'success',\n                  value,\n                });\n              }\n              return value;\n            } catch (err) {\n              task.updateCheckpoint?.({\n                key,\n                status: 'failed',\n                reason: stringifyError(err),\n              });\n              throw err;\n            }\n          },\n          createTemporaryDirectory: async () => {\n            const tmpDir = await fs.mkdtemp(\n              `${workspacePath}_step-${step.id}-`,\n            );\n            tmpDirs.push(tmpDir);\n            return tmpDir;\n          },\n          output(name: string, value: JsonValue) {\n            if (step.each) {\n              stepOutput[name] = stepOutput[name] || [];\n              (stepOutput[name] as JsonArray).push(value);\n            } else {\n              stepOutput[name] = value;\n            }\n          },\n          templateInfo: task.spec.templateInfo,\n          user: task.spec.user,\n          isDryRun: task.isDryRun,\n          signal: task.cancelSignal,\n          getInitiatorCredentials: () => task.getInitiatorCredentials(),\n        });\n      }\n\n      // Remove all temporary directories that were created when executing the action\n      for (const tmpDir of tmpDirs) {\n        await fs.remove(tmpDir);\n      }\n\n      context.steps[step.id] = { output: stepOutput };\n\n      if (task.cancelSignal.aborted) {\n        throw new Error(`Step ${step.name} has been cancelled.`);\n      }\n\n      await stepTrack.markSuccessful();\n    } catch (err) {\n      await taskTrack.markFailed(step, err);\n      await stepTrack.markFailed();\n      throw err;\n    }\n  }\n\n  async execute(task: TaskContext): Promise<WorkflowResponse> {\n    if (!isValidTaskSpec(task.spec)) {\n      throw new InputError(\n        'Wrong template version executed with the workflow engine',\n      );\n    }\n    const workspacePath = path.join(\n      this.options.workingDirectory,\n      await task.getWorkspaceName(),\n    );\n\n    const { additionalTemplateFilters, additionalTemplateGlobals } =\n      this.options;\n\n    const renderTemplate = await SecureTemplater.loadRenderer({\n      templateFilters: {\n        ...this.defaultTemplateFilters,\n        ...additionalTemplateFilters,\n      },\n      templateGlobals: additionalTemplateGlobals,\n    });\n\n    try {\n      const taskTrack = await this.tracker.taskStart(task);\n      await fs.ensureDir(workspacePath);\n\n      const context: TemplateContext = {\n        parameters: task.spec.parameters,\n        steps: {},\n        user: task.spec.user,\n      };\n\n      const [decision]: PolicyDecision[] =\n        this.options.permissions && task.spec.steps.length\n          ? await this.options.permissions.authorizeConditional(\n              [{ permission: actionExecutePermission }],\n              { credentials: await task.getInitiatorCredentials() },\n            )\n          : [{ result: AuthorizeResult.ALLOW }];\n\n      for (const step of task.spec.steps) {\n        await this.executeStep(\n          task,\n          step,\n          context,\n          renderTemplate,\n          taskTrack,\n          workspacePath,\n          decision,\n        );\n      }\n\n      const output = this.render(task.spec.output, context, renderTemplate);\n      await taskTrack.markSuccessful();\n\n      return { output };\n    } finally {\n      if (workspacePath) {\n        await fs.remove(workspacePath);\n      }\n    }\n  }\n}\n\nfunction scaffoldingTracker() {\n  const taskCount = createCounterMetric({\n    name: 'scaffolder_task_count',\n    help: 'Count of task runs',\n    labelNames: ['template', 'user', 'result'],\n  });\n  const taskDuration = createHistogramMetric({\n    name: 'scaffolder_task_duration',\n    help: 'Duration of a task run',\n    labelNames: ['template', 'result'],\n  });\n  const stepCount = createCounterMetric({\n    name: 'scaffolder_step_count',\n    help: 'Count of step runs',\n    labelNames: ['template', 'step', 'result'],\n  });\n  const stepDuration = createHistogramMetric({\n    name: 'scaffolder_step_duration',\n    help: 'Duration of a step runs',\n    labelNames: ['template', 'step', 'result'],\n  });\n\n  async function taskStart(task: TaskContext) {\n    await task.emitLog(`Starting up task with ${task.spec.steps.length} steps`);\n    const template = task.spec.templateInfo?.entityRef || '';\n    const user = task.spec.user?.ref || '';\n\n    const taskTimer = taskDuration.startTimer({\n      template,\n    });\n\n    async function skipDryRun(\n      step: TaskStep,\n      action: TemplateAction<JsonObject>,\n    ) {\n      task.emitLog(`Skipping because ${action.id} does not support dry-run`, {\n        stepId: step.id,\n        status: 'skipped',\n      });\n    }\n\n    async function markSuccessful() {\n      taskCount.inc({\n        template,\n        user,\n        result: 'ok',\n      });\n      taskTimer({ result: 'ok' });\n    }\n\n    async function markFailed(step: TaskStep, err: Error) {\n      await task.emitLog(String(err.stack), {\n        stepId: step.id,\n        status: 'failed',\n      });\n      taskCount.inc({\n        template,\n        user,\n        result: 'failed',\n      });\n      taskTimer({ result: 'failed' });\n    }\n\n    async function markCancelled(step: TaskStep) {\n      await task.emitLog(`Step ${step.id} has been cancelled.`, {\n        stepId: step.id,\n        status: 'cancelled',\n      });\n      taskCount.inc({\n        template,\n        user,\n        result: 'cancelled',\n      });\n      taskTimer({ result: 'cancelled' });\n    }\n\n    return {\n      skipDryRun,\n      markCancelled,\n      markSuccessful,\n      markFailed,\n    };\n  }\n\n  async function stepStart(task: TaskContext, step: TaskStep) {\n    await task.emitLog(`Beginning step ${step.name}`, {\n      stepId: step.id,\n      status: 'processing',\n    });\n    const template = task.spec.templateInfo?.entityRef || '';\n\n    const stepTimer = stepDuration.startTimer({\n      template,\n      step: step.name,\n    });\n\n    async function markSuccessful() {\n      await task.emitLog(`Finished step ${step.name}`, {\n        stepId: step.id,\n        status: 'completed',\n      });\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'ok',\n      });\n      stepTimer({ result: 'ok' });\n    }\n\n    async function markCancelled() {\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'cancelled',\n      });\n      stepTimer({ result: 'cancelled' });\n    }\n\n    async function markFailed() {\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'failed',\n      });\n      stepTimer({ result: 'failed' });\n    }\n\n    async function skipFalsy() {\n      await task.emitLog(\n        `Skipping step ${step.id} because its if condition was false`,\n        { stepId: step.id, status: 'skipped' },\n      );\n      stepTimer({ result: 'skipped' });\n    }\n\n    return {\n      markCancelled,\n      markFailed,\n      markSuccessful,\n      skipFalsy,\n    };\n  }\n\n  return {\n    taskStart,\n    stepStart,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WorkflowRunner } from './types';\nimport {\n  TaskContext,\n  TaskBroker,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport PQueue from 'p-queue';\nimport { NunjucksWorkflowRunner } from './NunjucksWorkflowRunner';\nimport { Logger } from 'winston';\nimport { TemplateActionRegistry } from '../actions';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { assertError, stringifyError } from '@backstage/errors';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\n\n/**\n * TaskWorkerOptions\n *\n * @public\n */\nexport type TaskWorkerOptions = {\n  taskBroker: TaskBroker;\n  runners: {\n    workflowRunner: WorkflowRunner;\n  };\n  concurrentTasksLimit: number;\n  permissions?: PermissionEvaluator;\n  logger?: Logger;\n};\n\n/**\n * CreateWorkerOptions\n *\n * @public\n */\nexport type CreateWorkerOptions = {\n  taskBroker: TaskBroker;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  workingDirectory: string;\n  logger: Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  /**\n   * The number of tasks that can be executed at the same time by the worker\n   * @defaultValue 10\n   * @example\n   * ```\n   * {\n   *   concurrentTasksLimit: 1,\n   *   // OR\n   *   concurrentTasksLimit: Infinity\n   * }\n   * ```\n   */\n  concurrentTasksLimit?: number;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionEvaluator;\n};\n\n/**\n * TaskWorker\n *\n * @public\n */\nexport class TaskWorker {\n  private taskQueue: PQueue;\n  private logger: Logger | undefined;\n  private stopWorkers: boolean;\n\n  private constructor(private readonly options: TaskWorkerOptions) {\n    this.stopWorkers = false;\n    this.logger = options.logger;\n    this.taskQueue = new PQueue({\n      concurrency: options.concurrentTasksLimit,\n    });\n  }\n\n  static async create(options: CreateWorkerOptions): Promise<TaskWorker> {\n    const {\n      taskBroker,\n      logger,\n      actionRegistry,\n      integrations,\n      workingDirectory,\n      additionalTemplateFilters,\n      concurrentTasksLimit = 10, // from 1 to Infinity\n      additionalTemplateGlobals,\n      permissions,\n    } = options;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      actionRegistry,\n      integrations,\n      logger,\n      workingDirectory,\n      additionalTemplateFilters,\n      additionalTemplateGlobals,\n      permissions,\n    });\n\n    return new TaskWorker({\n      taskBroker: taskBroker,\n      runners: { workflowRunner },\n      concurrentTasksLimit,\n      permissions,\n    });\n  }\n\n  async recoverTasks() {\n    try {\n      await this.options.taskBroker.recoverTasks?.();\n    } catch (err) {\n      this.logger?.error(stringifyError(err));\n    }\n  }\n\n  start() {\n    (async () => {\n      while (!this.stopWorkers) {\n        await new Promise(resolve => setTimeout(resolve, 10000));\n        await this.recoverTasks();\n      }\n    })();\n    (async () => {\n      while (!this.stopWorkers) {\n        await this.onReadyToClaimTask();\n        if (!this.stopWorkers) {\n          const task = await this.options.taskBroker.claim();\n          void this.taskQueue.add(() => this.runOneTask(task));\n        }\n      }\n    })();\n  }\n\n  stop() {\n    this.stopWorkers = true;\n  }\n\n  protected onReadyToClaimTask(): Promise<void> {\n    if (this.taskQueue.pending < this.options.concurrentTasksLimit) {\n      return Promise.resolve();\n    }\n    return new Promise(resolve => {\n      // \"next\" event emits when a task completes\n      // https://github.com/sindresorhus/p-queue#next\n      this.taskQueue.once('next', () => {\n        resolve();\n      });\n    });\n  }\n\n  async runOneTask(task: TaskContext) {\n    try {\n      if (task.spec.apiVersion !== 'scaffolder.backstage.io/v1beta3') {\n        throw new Error(\n          `Unsupported Template apiVersion ${task.spec.apiVersion}`,\n        );\n      }\n\n      const { output } = await this.options.runners.workflowRunner.execute(\n        task,\n      );\n\n      await task.complete('completed', { output });\n    } catch (error) {\n      assertError(error);\n      await task.complete('failed', {\n        error: { name: error.name, message: error.message },\n      });\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { TemplateActionRegistry } from '../actions';\n\n/** @internal */\nexport class DecoratedActionsRegistry extends TemplateActionRegistry {\n  constructor(\n    private readonly innerRegistry: TemplateActionRegistry,\n    extraActions: Array<TemplateAction>,\n  ) {\n    super();\n    for (const action of extraActions) {\n      this.register(action);\n    }\n  }\n\n  get(actionId: string): TemplateAction {\n    try {\n      return super.get(actionId);\n    } catch {\n      return this.innerRegistry.get(actionId);\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject } from '@backstage/types';\nimport { v4 as uuid } from 'uuid';\nimport { pathToFileURL } from 'url';\nimport { Logger } from 'winston';\nimport {\n  createTemplateAction,\n  TaskSecrets,\n  TemplateFilter,\n  TemplateGlobal,\n  deserializeDirectoryContents,\n  SerializedFile,\n  serializeDirectoryContents,\n} from '@backstage/plugin-scaffolder-node';\nimport { TemplateActionRegistry } from '../actions';\nimport { NunjucksWorkflowRunner } from '../tasks/NunjucksWorkflowRunner';\nimport { DecoratedActionsRegistry } from './DecoratedActionsRegistry';\nimport fs from 'fs-extra';\nimport { resolveSafeChildPath } from '@backstage/backend-common';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\nimport { BackstageCredentials } from '@backstage/backend-plugin-api';\n\ninterface DryRunInput {\n  spec: TaskSpec;\n  secrets?: TaskSecrets;\n  directoryContents: SerializedFile[];\n  credentials: BackstageCredentials;\n}\n\ninterface DryRunResult {\n  log: Array<{ body: JsonObject }>;\n  directoryContents: SerializedFile[];\n  output: JsonObject;\n}\n\n/** @internal */\nexport type TemplateTesterCreateOptions = {\n  logger: Logger;\n  integrations: ScmIntegrations;\n  actionRegistry: TemplateActionRegistry;\n  workingDirectory: string;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionEvaluator;\n};\n\n/**\n * Executes a dry-run of the provided template.\n *\n * The provided content will be extracted into a temporary directory\n * which is then use as the base for any relative file fetch paths.\n *\n * @internal\n */\nexport function createDryRunner(options: TemplateTesterCreateOptions) {\n  return async function dryRun(input: DryRunInput): Promise<DryRunResult> {\n    let contentPromise;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      ...options,\n      actionRegistry: new DecoratedActionsRegistry(options.actionRegistry, [\n        createTemplateAction({\n          id: 'dry-run:extract',\n          supportsDryRun: true,\n          async handler(ctx) {\n            contentPromise = serializeDirectoryContents(ctx.workspacePath);\n            await contentPromise.catch(() => {});\n          },\n        }),\n      ]),\n    });\n\n    const dryRunId = uuid();\n    const log = new Array<{ body: JsonObject }>();\n    const contentsPath = resolveSafeChildPath(\n      options.workingDirectory,\n      `dry-run-content-${dryRunId}`,\n    );\n\n    try {\n      await deserializeDirectoryContents(contentsPath, input.directoryContents);\n\n      const abortSignal = new AbortController().signal;\n\n      const result = await workflowRunner.execute({\n        spec: {\n          ...input.spec,\n          steps: [\n            ...input.spec.steps,\n            {\n              id: dryRunId,\n              name: 'dry-run:extract',\n              action: 'dry-run:extract',\n            },\n          ],\n          templateInfo: {\n            entityRef: 'template:default/dry-run',\n            baseUrl: pathToFileURL(\n              resolveSafeChildPath(contentsPath, 'template.yaml'),\n            ).toString(),\n          },\n        },\n        secrets: input.secrets,\n        getInitiatorCredentials: () => Promise.resolve(input.credentials),\n        // No need to update this at the end of the run, so just hard-code it\n        done: false,\n        isDryRun: true,\n        getWorkspaceName: async () => `dry-run-${dryRunId}`,\n        cancelSignal: abortSignal,\n        async emitLog(message: string, logMetadata?: JsonObject) {\n          if (logMetadata?.stepId === dryRunId) {\n            return;\n          }\n          log.push({\n            body: {\n              ...logMetadata,\n              message,\n            },\n          });\n        },\n        complete: async () => {\n          throw new Error('Not implemented');\n        },\n      });\n\n      if (!contentPromise) {\n        throw new Error('Content extraction step was skipped');\n      }\n      const directoryContents = await contentPromise;\n\n      return {\n        log,\n        directoryContents,\n        output: result.output,\n      };\n    } finally {\n      await fs.remove(contentsPath);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  parseLocationRef,\n  ANNOTATION_SOURCE_LOCATION,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { assertError, InputError, NotFoundError } from '@backstage/errors';\nimport { TemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport { Logger } from 'winston';\n\nexport async function getWorkingDirectory(\n  config: Config,\n  logger: Logger,\n): Promise<string> {\n  if (!config.has('backend.workingDirectory')) {\n    return os.tmpdir();\n  }\n\n  const workingDirectory = config.getString('backend.workingDirectory');\n  try {\n    // Check if working directory exists and is writable\n    await fs.access(workingDirectory, fs.constants.F_OK | fs.constants.W_OK);\n    logger.info(`using working directory: ${workingDirectory}`);\n  } catch (err) {\n    assertError(err);\n    logger.error(\n      `working directory ${workingDirectory} ${\n        err.code === 'ENOENT' ? 'does not exist' : 'is not writable'\n      }`,\n    );\n    throw err;\n  }\n  return workingDirectory;\n}\n\n/**\n * Gets the base URL of the entity location that points to the source location\n * of the entity description within a repo. If there is not source location\n * or if it has an invalid type, undefined will be returned instead.\n *\n * For file locations this will return a `file://` URL.\n */\nexport function getEntityBaseUrl(entity: Entity): string | undefined {\n  let location = entity.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION];\n  if (!location) {\n    location = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n  }\n  if (!location) {\n    return undefined;\n  }\n\n  const { type, target } = parseLocationRef(location);\n  if (type === 'url') {\n    return target;\n  } else if (type === 'file') {\n    return `file://${target}`;\n  }\n\n  // Only url and file location are handled, as we otherwise don't know if\n  // what the url is pointing to makes sense to use as a baseUrl\n  return undefined;\n}\n\n/**\n * Will use the provided CatalogApi to go find the given template entity with an additional token.\n * Returns the matching template, or throws a NotFoundError if no such template existed.\n */\nexport async function findTemplate(options: {\n  entityRef: CompoundEntityRef;\n  token?: string;\n  catalogApi: CatalogApi;\n}): Promise<TemplateEntityV1beta3> {\n  const { entityRef, token, catalogApi } = options;\n\n  if (entityRef.kind.toLocaleLowerCase('en-US') !== 'template') {\n    throw new InputError(`Invalid kind, only 'Template' kind is supported`);\n  }\n\n  const template = await catalogApi.getEntityByRef(entityRef, { token });\n  if (!template) {\n    throw new NotFoundError(\n      `Template ${stringifyEntityRef(entityRef)} not found`,\n    );\n  }\n\n  return template as TemplateEntityV1beta3;\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  HostDiscovery,\n  PluginDatabaseManager,\n  UrlReader,\n  createLegacyAuthAdapters,\n} from '@backstage/backend-common';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  CompoundEntityRef,\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { InputError, NotFoundError, stringifyError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { HumanDuration, JsonObject, JsonValue } from '@backstage/types';\nimport {\n  TaskSpec,\n  TemplateEntityV1beta3,\n  templateEntityV1beta3Validator,\n  TemplateParametersV1beta3,\n  TemplateEntityStepV1beta3,\n} from '@backstage/plugin-scaffolder-common';\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  scaffolderActionPermissions,\n  scaffolderTemplatePermissions,\n  templateParameterReadPermission,\n  templateStepReadPermission,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { validate } from 'jsonschema';\nimport { Logger } from 'winston';\nimport { z } from 'zod';\nimport {\n  TaskBroker,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  createBuiltinActions,\n  DatabaseTaskStore,\n  TaskWorker,\n  TemplateActionRegistry,\n} from '../scaffolder';\nimport { createDryRunner } from '../scaffolder/dryrun';\nimport { StorageTaskBroker } from '../scaffolder/tasks/StorageTaskBroker';\nimport { findTemplate, getEntityBaseUrl, getWorkingDirectory } from './helpers';\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { PermissionRuleParams } from '@backstage/plugin-permission-common';\nimport {\n  createConditionAuthorizer,\n  createPermissionIntegrationRouter,\n  PermissionRule,\n} from '@backstage/plugin-permission-node';\nimport { scaffolderActionRules, scaffolderTemplateRules } from './rules';\nimport { Duration } from 'luxon';\nimport {\n  AuthService,\n  BackstageCredentials,\n  DiscoveryService,\n  HttpAuthService,\n  LifecycleService,\n  PermissionsService,\n} from '@backstage/backend-plugin-api';\nimport {\n  IdentityApi,\n  IdentityApiGetIdentityRequest,\n} from '@backstage/plugin-auth-node';\nimport { InternalTaskSecrets } from '../scaffolder/tasks/types';\n\n/**\n *\n * @public\n */\nexport type TemplatePermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  TParams\n>;\nfunction isTemplatePermissionRuleInput(\n  permissionRule: TemplatePermissionRuleInput | ActionPermissionRuleInput,\n): permissionRule is TemplatePermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_TEMPLATE;\n}\n\n/**\n *\n * @public\n */\nexport type ActionPermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  TParams\n>;\nfunction isActionPermissionRuleInput(\n  permissionRule: TemplatePermissionRuleInput | ActionPermissionRuleInput,\n): permissionRule is ActionPermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_ACTION;\n}\n\n/**\n * RouterOptions\n *\n * @public\n */\nexport interface RouterOptions {\n  logger: Logger;\n  config: Config;\n  reader: UrlReader;\n  lifecycle?: LifecycleService;\n  database: PluginDatabaseManager;\n  catalogClient: CatalogApi;\n  scheduler?: PluginTaskScheduler;\n  actions?: TemplateAction<any, any>[];\n  /**\n   * @deprecated taskWorkers is deprecated in favor of concurrentTasksLimit option with a single TaskWorker\n   * @defaultValue 1\n   */\n  taskWorkers?: number;\n  /**\n   * Sets the number of concurrent tasks that can be run at any given time on the TaskWorker\n   * @defaultValue 10\n   */\n  concurrentTasksLimit?: number;\n  taskBroker?: TaskBroker;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionsService;\n  permissionRules?: Array<\n    TemplatePermissionRuleInput | ActionPermissionRuleInput\n  >;\n  auth?: AuthService;\n  httpAuth?: HttpAuthService;\n  identity?: IdentityApi;\n  discovery?: DiscoveryService;\n}\n\nfunction isSupportedTemplate(entity: TemplateEntityV1beta3) {\n  return entity.apiVersion === 'scaffolder.backstage.io/v1beta3';\n}\n\n/*\n * @deprecated This function remains as the DefaultIdentityClient behaves slightly differently to the pre-existing\n * scaffolder behaviour. Specifically if the token fails to parse, the DefaultIdentityClient will raise an error.\n * The scaffolder did not raise an error in this case. As such we chose to allow it to behave as it did previously\n * until someone explicitly passes an IdentityApi. When we have reasonable confidence that most backstage deployments\n * are using the IdentityApi, we can remove this function.\n */\nfunction buildDefaultIdentityClient(options: RouterOptions): IdentityApi {\n  return {\n    getIdentity: async ({ request }: IdentityApiGetIdentityRequest) => {\n      const header = request.headers.authorization;\n      const { logger } = options;\n\n      if (!header) {\n        return undefined;\n      }\n\n      try {\n        const token = header.match(/^Bearer\\s(\\S+\\.\\S+\\.\\S+)$/i)?.[1];\n        if (!token) {\n          throw new TypeError('Expected Bearer with JWT');\n        }\n\n        const [_header, rawPayload, _signature] = token.split('.');\n        const payload: JsonValue = JSON.parse(\n          Buffer.from(rawPayload, 'base64').toString(),\n        );\n\n        if (\n          typeof payload !== 'object' ||\n          payload === null ||\n          Array.isArray(payload)\n        ) {\n          throw new TypeError('Malformed JWT payload');\n        }\n\n        const sub = payload.sub;\n        if (typeof sub !== 'string') {\n          throw new TypeError('Expected string sub claim');\n        }\n\n        if (sub === 'backstage-server') {\n          return undefined;\n        }\n\n        // Check that it's a valid ref, otherwise this will throw.\n        parseEntityRef(sub);\n\n        return {\n          identity: {\n            userEntityRef: sub,\n            ownershipEntityRefs: [],\n            type: 'user',\n          },\n          token,\n        };\n      } catch (e) {\n        logger.error(`Invalid authorization header: ${stringifyError(e)}`);\n        return undefined;\n      }\n    },\n  };\n}\n\nconst readDuration = (\n  config: Config,\n  key: string,\n  defaultValue: HumanDuration,\n) => {\n  if (config.has(key)) {\n    return readDurationFromConfig(config, { key });\n  }\n  return defaultValue;\n};\n\n/**\n * A method to create a router for the scaffolder backend plugin.\n * @public\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const router = Router();\n  // Be generous in upload size to support a wide range of templates in dry-run mode.\n  router.use(express.json({ limit: '10MB' }));\n\n  const {\n    logger: parentLogger,\n    config,\n    reader,\n    database,\n    catalogClient,\n    actions,\n    taskWorkers,\n    scheduler,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n    permissions,\n    permissionRules,\n    discovery = HostDiscovery.fromConfig(config),\n    identity = buildDefaultIdentityClient(options),\n  } = options;\n\n  const { auth, httpAuth } = createLegacyAuthAdapters({\n    ...options,\n    identity,\n    discovery,\n  });\n\n  const concurrentTasksLimit =\n    options.concurrentTasksLimit ??\n    options.config.getOptionalNumber('scaffolder.concurrentTasksLimit');\n\n  const logger = parentLogger.child({ plugin: 'scaffolder' });\n\n  const workingDirectory = await getWorkingDirectory(config, logger);\n  const integrations = ScmIntegrations.fromConfig(config);\n\n  let taskBroker: TaskBroker;\n  if (!options.taskBroker) {\n    const databaseTaskStore = await DatabaseTaskStore.create({ database });\n    taskBroker = new StorageTaskBroker(databaseTaskStore, logger, config, auth);\n\n    if (scheduler && databaseTaskStore.listStaleTasks) {\n      await scheduler.scheduleTask({\n        id: 'close_stale_tasks',\n        frequency: readDuration(\n          config,\n          'scaffolder.taskTimeoutJanitorFrequency',\n          {\n            minutes: 5,\n          },\n        ),\n        timeout: { minutes: 15 },\n        fn: async () => {\n          const { tasks } = await databaseTaskStore.listStaleTasks({\n            timeoutS: Duration.fromObject(\n              readDuration(config, 'scaffolder.taskTimeout', {\n                hours: 24,\n              }),\n            ).as('seconds'),\n          });\n\n          for (const task of tasks) {\n            await databaseTaskStore.shutdownTask(task);\n            logger.info(`Successfully closed stale task ${task.taskId}`);\n          }\n        },\n      });\n    }\n  } else {\n    taskBroker = options.taskBroker;\n  }\n\n  const actionRegistry = new TemplateActionRegistry();\n\n  const workers: TaskWorker[] = [];\n  if (concurrentTasksLimit !== 0) {\n    for (let i = 0; i < (taskWorkers || 1); i++) {\n      const worker = await TaskWorker.create({\n        taskBroker,\n        actionRegistry,\n        integrations,\n        logger,\n        workingDirectory,\n        additionalTemplateFilters,\n        additionalTemplateGlobals,\n        concurrentTasksLimit,\n        permissions,\n      });\n      workers.push(worker);\n    }\n  }\n\n  const actionsToRegister = Array.isArray(actions)\n    ? actions\n    : createBuiltinActions({\n        integrations,\n        catalogClient,\n        reader,\n        config,\n        additionalTemplateFilters,\n        additionalTemplateGlobals,\n        auth,\n      });\n\n  actionsToRegister.forEach(action => actionRegistry.register(action));\n\n  const launchWorkers = () => workers.forEach(worker => worker.start());\n\n  const shutdownWorkers = () => {\n    workers.forEach(worker => worker.stop());\n  };\n\n  if (options.lifecycle) {\n    options.lifecycle.addStartupHook(launchWorkers);\n    options.lifecycle.addShutdownHook(shutdownWorkers);\n  } else {\n    launchWorkers();\n  }\n\n  const dryRunner = createDryRunner({\n    actionRegistry,\n    integrations,\n    logger,\n    workingDirectory,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n    permissions,\n  });\n\n  const templateRules: TemplatePermissionRuleInput[] = Object.values(\n    scaffolderTemplateRules,\n  );\n  const actionRules: ActionPermissionRuleInput[] = Object.values(\n    scaffolderActionRules,\n  );\n\n  if (permissionRules) {\n    templateRules.push(\n      ...permissionRules.filter(isTemplatePermissionRuleInput),\n    );\n    actionRules.push(...permissionRules.filter(isActionPermissionRuleInput));\n  }\n\n  const isAuthorized = createConditionAuthorizer(Object.values(templateRules));\n\n  const permissionIntegrationRouter = createPermissionIntegrationRouter({\n    resources: [\n      {\n        resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n        permissions: scaffolderTemplatePermissions,\n        rules: templateRules,\n      },\n      {\n        resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n        permissions: scaffolderActionPermissions,\n        rules: actionRules,\n      },\n    ],\n  });\n\n  router.use(permissionIntegrationRouter);\n\n  router\n    .get(\n      '/v2/templates/:namespace/:kind/:name/parameter-schema',\n      async (req, res) => {\n        const credentials = await httpAuth.credentials(req);\n\n        const { token } = await auth.getPluginRequestToken({\n          onBehalfOf: credentials,\n          targetPluginId: 'catalog',\n        });\n\n        const template = await authorizeTemplate(\n          req.params,\n          token,\n          credentials,\n        );\n\n        const parameters = [template.spec.parameters ?? []].flat();\n\n        const presentation = template.spec.presentation;\n\n        res.json({\n          title: template.metadata.title ?? template.metadata.name,\n          ...(presentation ? { presentation } : {}),\n          description: template.metadata.description,\n          'ui:options': template.metadata['ui:options'],\n          steps: parameters.map(schema => ({\n            title: schema.title ?? 'Please enter the following information',\n            description: schema.description,\n            schema,\n          })),\n        });\n      },\n    )\n    .get('/v2/actions', async (_req, res) => {\n      const actionsList = actionRegistry.list().map(action => {\n        return {\n          id: action.id,\n          description: action.description,\n          examples: action.examples,\n          schema: action.schema,\n        };\n      });\n      res.json(actionsList);\n    })\n    .post('/v2/tasks', async (req, res) => {\n      const templateRef: string = req.body.templateRef;\n      const { kind, namespace, name } = parseEntityRef(templateRef, {\n        defaultKind: 'template',\n      });\n\n      const credentials = await httpAuth.credentials(req);\n      const { token } = await auth.getPluginRequestToken({\n        onBehalfOf: credentials,\n        targetPluginId: 'catalog',\n      });\n\n      const userEntityRef = auth.isPrincipal(credentials, 'user')\n        ? credentials.principal.userEntityRef\n        : undefined;\n\n      const userEntity = userEntityRef\n        ? await catalogClient.getEntityByRef(userEntityRef, { token })\n        : undefined;\n\n      let auditLog = `Scaffolding task for ${templateRef}`;\n      if (userEntityRef) {\n        auditLog += ` created by ${userEntityRef}`;\n      }\n      logger.info(auditLog);\n\n      const values = req.body.values;\n\n      const template = await authorizeTemplate(\n        { kind, namespace, name },\n        token,\n        credentials,\n      );\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(values, parameters);\n\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const baseUrl = getEntityBaseUrl(template);\n\n      const taskSpec: TaskSpec = {\n        apiVersion: template.apiVersion,\n        steps: template.spec.steps.map((step, index) => ({\n          ...step,\n          id: step.id ?? `step-${index + 1}`,\n          name: step.name ?? step.action,\n        })),\n        EXPERIMENTAL_recovery: template.spec.EXPERIMENTAL_recovery,\n        output: template.spec.output ?? {},\n        parameters: values,\n        user: {\n          entity: userEntity as UserEntity,\n          ref: userEntityRef,\n        },\n        templateInfo: {\n          entityRef: stringifyEntityRef({ kind, name, namespace }),\n          baseUrl,\n          entity: {\n            metadata: template.metadata,\n          },\n        },\n      };\n\n      const secrets: InternalTaskSecrets = {\n        ...req.body.secrets,\n        backstageToken: token,\n        __initiatorCredentials: JSON.stringify(credentials),\n      };\n\n      const result = await taskBroker.dispatch({\n        spec: taskSpec,\n        createdBy: userEntityRef,\n        secrets,\n      });\n\n      res.status(201).json({ id: result.taskId });\n    })\n    .get('/v2/tasks', async (req, res) => {\n      const [userEntityRef] = [req.query.createdBy].flat();\n\n      if (\n        typeof userEntityRef !== 'string' &&\n        typeof userEntityRef !== 'undefined'\n      ) {\n        throw new InputError('createdBy query parameter must be a string');\n      }\n\n      if (!taskBroker.list) {\n        throw new Error(\n          'TaskBroker does not support listing tasks, please implement the list method on the TaskBroker.',\n        );\n      }\n\n      const tasks = await taskBroker.list({\n        createdBy: userEntityRef,\n      });\n\n      res.status(200).json(tasks);\n    })\n    .get('/v2/tasks/:taskId', async (req, res) => {\n      const { taskId } = req.params;\n      const task = await taskBroker.get(taskId);\n      if (!task) {\n        throw new NotFoundError(`Task with id ${taskId} does not exist`);\n      }\n      // Do not disclose secrets\n      delete task.secrets;\n      res.status(200).json(task);\n    })\n    .post('/v2/tasks/:taskId/cancel', async (req, res) => {\n      const { taskId } = req.params;\n      await taskBroker.cancel?.(taskId);\n      res.status(200).json({ status: 'cancelled' });\n    })\n    .get('/v2/tasks/:taskId/eventstream', async (req, res) => {\n      const { taskId } = req.params;\n      const after =\n        req.query.after !== undefined ? Number(req.query.after) : undefined;\n\n      logger.debug(`Event stream observing taskId '${taskId}' opened`);\n\n      // Mandatory headers and http status to keep connection open\n      res.writeHead(200, {\n        Connection: 'keep-alive',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'text/event-stream',\n      });\n\n      // After client opens connection send all events as string\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n          res.end();\n        },\n        next: ({ events }) => {\n          let shouldUnsubscribe = false;\n          for (const event of events) {\n            res.write(\n              `event: ${event.type}\\ndata: ${JSON.stringify(event)}\\n\\n`,\n            );\n            if (event.type === 'completion') {\n              shouldUnsubscribe = true;\n            }\n          }\n          // res.flush() is only available with the compression middleware\n          res.flush?.();\n          if (shouldUnsubscribe) {\n            subscription.unsubscribe();\n            res.end();\n          }\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        logger.debug(`Event stream observing taskId '${taskId}' closed`);\n      });\n    })\n    .get('/v2/tasks/:taskId/events', async (req, res) => {\n      const { taskId } = req.params;\n      const after = Number(req.query.after) || undefined;\n\n      // cancel the request after 30 seconds. this aligns with the recommendations of RFC 6202.\n      const timeout = setTimeout(() => {\n        res.json([]);\n      }, 30_000);\n\n      // Get all known events after an id (always includes the completion event) and return the first callback\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n        },\n        next: ({ events }) => {\n          clearTimeout(timeout);\n          subscription.unsubscribe();\n          res.json(events);\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        clearTimeout(timeout);\n      });\n    })\n    .post('/v2/dry-run', async (req, res) => {\n      const bodySchema = z.object({\n        template: z.unknown(),\n        values: z.record(z.unknown()),\n        secrets: z.record(z.string()).optional(),\n        directoryContents: z.array(\n          z.object({ path: z.string(), base64Content: z.string() }),\n        ),\n      });\n      const body = await bodySchema.parseAsync(req.body).catch(e => {\n        throw new InputError(`Malformed request: ${e}`);\n      });\n\n      const template = body.template as TemplateEntityV1beta3;\n      if (!(await templateEntityV1beta3Validator.check(template))) {\n        throw new InputError('Input template is not a template');\n      }\n\n      const credentials = await httpAuth.credentials(req);\n\n      const { token } = await auth.getPluginRequestToken({\n        onBehalfOf: credentials,\n        targetPluginId: 'catalog',\n      });\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(body.values, parameters);\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const steps = template.spec.steps.map((step, index) => ({\n        ...step,\n        id: step.id ?? `step-${index + 1}`,\n        name: step.name ?? step.action,\n      }));\n\n      const result = await dryRunner({\n        spec: {\n          apiVersion: template.apiVersion,\n          steps,\n          output: template.spec.output ?? {},\n          parameters: body.values as JsonObject,\n        },\n        directoryContents: (body.directoryContents ?? []).map(file => ({\n          path: file.path,\n          content: Buffer.from(file.base64Content, 'base64'),\n        })),\n        secrets: {\n          ...body.secrets,\n          ...(token && { backstageToken: token }),\n        },\n        credentials,\n      });\n\n      res.status(200).json({\n        ...result,\n        steps,\n        directoryContents: result.directoryContents.map(file => ({\n          path: file.path,\n          executable: file.executable,\n          base64Content: file.content.toString('base64'),\n        })),\n      });\n    });\n\n  const app = express();\n  app.set('logger', logger);\n  app.use('/', router);\n\n  async function authorizeTemplate(\n    entityRef: CompoundEntityRef,\n    token: string | undefined,\n    credentials: BackstageCredentials,\n  ) {\n    const template = await findTemplate({\n      catalogApi: catalogClient,\n      entityRef,\n      token,\n    });\n\n    if (!isSupportedTemplate(template)) {\n      throw new InputError(\n        `Unsupported apiVersion field in schema entity, ${\n          (template as Entity).apiVersion\n        }`,\n      );\n    }\n\n    if (!permissions) {\n      return template;\n    }\n\n    const [parameterDecision, stepDecision] =\n      await permissions.authorizeConditional(\n        [\n          { permission: templateParameterReadPermission },\n          { permission: templateStepReadPermission },\n        ],\n        { credentials },\n      );\n\n    // Authorize parameters\n    if (Array.isArray(template.spec.parameters)) {\n      template.spec.parameters = template.spec.parameters.filter(step =>\n        isAuthorized(parameterDecision, step),\n      );\n    } else if (\n      template.spec.parameters &&\n      !isAuthorized(parameterDecision, template.spec.parameters)\n    ) {\n      template.spec.parameters = undefined;\n    }\n\n    // Authorize steps\n    template.spec.steps = template.spec.steps.filter(step =>\n      isAuthorized(stepDecision, step),\n    );\n\n    return template;\n  }\n\n  return app;\n}\n"],"names":["examples","yaml","id","createTemplateAction","InputError","stringifyEntityRef","z","fs","resolveSafeChildPath","parseEntityRef","relative","readdir","join","stat","Duration","_a","fetchContents","fetchFile","Isolate","resolvePackagePath","parseRepoUrl","get","globby","extname","isBinaryFile","DefaultGithubCredentialsProvider","createPublishGerritAction","createPublishGerritReviewAction","createPublishGiteaAction","createPublishGithubAction","createPublishGithubPullRequestAction","createPublishGitlabAction","createPublishGitlabMergeRequestAction","createGitlabRepoPushAction","createPublishBitbucketAction","createPublishBitbucketCloudAction","createPublishBitbucketServerAction","createPublishBitbucketServerPullRequestAction","createPublishAzureAction","createGithubActionsDispatchAction","createGithubWebhookAction","createGithubIssuesLabelAction","createGithubRepoCreateAction","createGithubRepoPushAction","createGithubEnvironmentAction","createGithubDeployKeyAction","createGithubAutolinksAction","createBitbucketPipelinesRunAction","__publicField","ConflictError","NotFoundError","DateTime","uuid","isArray","readDuration","config","readDurationFromConfig","ObservableImpl","register","Counter","Histogram","makeCreatePermissionRule","RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","RESOURCE_TYPE_SCAFFOLDER_ACTION","Transport","createLogger","format","transports","PassThrough","winston","createConditionAuthorizer","nunjucks","templated","validateJsonSchema","errors","NotAllowedError","loggerToWinstonLogger","_b","_c","_d","stringifyError","path","actionExecutePermission","AuthorizeResult","PQueue","assertError","serializeDirectoryContents","deserializeDirectoryContents","pathToFileURL","os","ANNOTATION_SOURCE_LOCATION","ANNOTATION_LOCATION","parseLocationRef","Router","express","HostDiscovery","createLegacyAuthAdapters","ScmIntegrations","createPermissionIntegrationRouter","scaffolderTemplatePermissions","scaffolderActionPermissions","result","validate","templateEntityV1beta3Validator","templateParameterReadPermission","templateStepReadPermission"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js b/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js
similarity index 87%
rename from node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js
rename to node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js
index 3994bf5..166c7a6 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-CDFi_apW.cjs.js
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js
@@ -14,6 +14,7 @@ var zod = require('zod');
 var pluginScaffolderNode = require('@backstage/plugin-scaffolder-node');
 var yaml = require('yaml');
 var fs = require('fs-extra');
+var backendPluginApi = require('@backstage/backend-plugin-api');
 var path = require('path');
 var luxon = require('luxon');
 var globby = require('globby');
@@ -29,16 +30,20 @@ var gerrit = require('@backstage/plugin-scaffolder-backend-module-gerrit');
 var gitlab = require('@backstage/plugin-scaffolder-backend-module-gitlab');
 var pluginScaffolderBackendModuleGitea = require('@backstage/plugin-scaffolder-backend-module-gitea');
 var uuid = require('uuid');
+var tar = require('tar');
+var concatStream = require('concat-stream');
+var util = require('util');
+var stream = require('stream');
 var ObservableImpl = require('zen-observable');
 var lodash = require('lodash');
 var PQueue = require('p-queue');
 var winston = require('winston');
 var nunjucks = require('nunjucks');
-var stream = require('stream');
 var pluginPermissionNode = require('@backstage/plugin-permission-node');
 var promClient = require('prom-client');
 var pluginPermissionCommon = require('@backstage/plugin-permission-common');
 var Transport = require('winston-transport');
+var tripleBeam = require('triple-beam');
 var url = require('url');
 var os = require('os');
 
@@ -69,6 +74,8 @@ var fs__default = /*#__PURE__*/_interopDefaultCompat(fs);
 var path__default = /*#__PURE__*/_interopDefaultCompat(path);
 var globby__default = /*#__PURE__*/_interopDefaultCompat(globby);
 var get__default = /*#__PURE__*/_interopDefaultCompat(get);
+var tar__default = /*#__PURE__*/_interopDefaultCompat(tar);
+var concatStream__default = /*#__PURE__*/_interopDefaultCompat(concatStream);
 var ObservableImpl__default = /*#__PURE__*/_interopDefaultCompat(ObservableImpl);
 var PQueue__default = /*#__PURE__*/_interopDefaultCompat(PQueue);
 var winston__namespace = /*#__PURE__*/_interopNamespaceCompat(winston);
@@ -157,7 +164,6 @@ function createCatalogRegisterAction(options) {
       }
     },
     async handler(ctx) {
-      var _a, _b;
       const { input } = ctx;
       let catalogInfoUrl;
       if ("catalogInfoUrl" in input) {
@@ -176,10 +182,10 @@ function createCatalogRegisterAction(options) {
         });
       }
       ctx.logger.info(`Registering ${catalogInfoUrl} in the catalog`);
-      const { token } = (_b = await (auth == null ? void 0 : auth.getPluginRequestToken({
+      const { token } = await auth?.getPluginRequestToken({
         onBehalfOf: await ctx.getInitiatorCredentials(),
         targetPluginId: "catalog"
-      }))) != null ? _b : { token: (_a = ctx.secrets) == null ? void 0 : _a.backstageToken };
+      }) ?? { token: ctx.secrets?.backstageToken };
       try {
         await catalogClient.addLocation(
           {
@@ -275,13 +281,12 @@ function createCatalogWriteAction() {
     examples: examples$8,
     supportsDryRun: true,
     async handler(ctx) {
-      var _a;
       ctx.logger.info(`Writing catalog-info.yaml`);
       const { filePath, entity } = ctx.input;
-      const entityRef = (_a = ctx.templateInfo) == null ? void 0 : _a.entityRef;
-      const path = filePath != null ? filePath : "catalog-info.yaml";
+      const entityRef = ctx.templateInfo?.entityRef;
+      const path = filePath ?? "catalog-info.yaml";
       await fs__default.default.writeFile(
-        backendCommon.resolveSafeChildPath(ctx.workspacePath, path),
+        backendPluginApi.resolveSafeChildPath(ctx.workspacePath, path),
         yaml__namespace.stringify({
           ...entity,
           metadata: {
@@ -366,7 +371,6 @@ function createFetchCatalogEntityAction(options) {
       })
     },
     async handler(ctx) {
-      var _a, _b;
       const { entityRef, entityRefs, optional, defaultKind, defaultNamespace } = ctx.input;
       if (!entityRef && !entityRefs) {
         if (optional) {
@@ -374,10 +378,10 @@ function createFetchCatalogEntityAction(options) {
         }
         throw new Error("Missing entity reference or references");
       }
-      const { token } = (_b = await (auth == null ? void 0 : auth.getPluginRequestToken({
+      const { token } = await auth?.getPluginRequestToken({
         onBehalfOf: await ctx.getInitiatorCredentials(),
         targetPluginId: "catalog"
-      }))) != null ? _b : { token: (_a = ctx.secrets) == null ? void 0 : _a.backstageToken };
+      }) ?? { token: ctx.secrets?.backstageToken };
       if (entityRef) {
         const entity = await catalogClient.getEntityByRef(
           catalogModel.stringifyEntityRef(
@@ -390,7 +394,7 @@ function createFetchCatalogEntityAction(options) {
         if (!entity && !optional) {
           throw new Error(`Entity ${entityRef} not found`);
         }
-        ctx.output("entity", entity != null ? entity : null);
+        ctx.output("entity", entity ?? null);
       }
       if (entityRefs) {
         const entities = await catalogClient.getEntitiesByRefs(
@@ -409,7 +413,7 @@ function createFetchCatalogEntityAction(options) {
           if (!e && !optional) {
             throw new Error(`Entity ${entityRefs[i]} not found`);
           }
-          return e != null ? e : null;
+          return e ?? null;
         });
         ctx.output("entities", finalEntities);
       }
@@ -476,12 +480,11 @@ function createDebugLogAction() {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a, _b;
       ctx.logger.info(JSON.stringify(ctx.input, null, 2));
-      if ((_a = ctx.input) == null ? void 0 : _a.message) {
+      if (ctx.input?.message) {
         ctx.logger.info(ctx.input.message);
       }
-      if ((_b = ctx.input) == null ? void 0 : _b.listWorkspace) {
+      if (ctx.input?.listWorkspace) {
         const files = await recursiveReadDir(ctx.workspacePath);
         ctx.logger.info(
           `Workspace:
@@ -587,20 +590,18 @@ function createWaitAction(options) {
     },
     async handler(ctx) {
       const delayTime = luxon.Duration.fromObject(ctx.input);
-      const maxWait = toDuration(options == null ? void 0 : options.maxWaitTime);
+      const maxWait = toDuration(options?.maxWaitTime);
       if (delayTime.minus(maxWait).toMillis() > 0) {
         throw new Error(
           `Waiting duration is longer than the maximum threshold of ${maxWait.toHuman()}`
         );
       }
       await new Promise((resolve) => {
-        var _a;
         const controller = new AbortController();
         const timeoutHandle = setTimeout(abort, delayTime.toMillis());
-        (_a = ctx.signal) == null ? void 0 : _a.addEventListener("abort", abort);
+        ctx.signal?.addEventListener("abort", abort);
         function abort() {
-          var _a2;
-          (_a2 = ctx.signal) == null ? void 0 : _a2.removeEventListener("abort", abort);
+          ctx.signal?.removeEventListener("abort", abort);
           clearTimeout(timeoutHandle);
           controller.abort();
           resolve("finished");
@@ -676,14 +677,13 @@ function createFetchPlainAction(options) {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a, _b;
       ctx.logger.info("Fetching plain content from remote URL");
-      const targetPath = (_a = ctx.input.targetPath) != null ? _a : "./";
-      const outputPath = backendCommon.resolveSafeChildPath(ctx.workspacePath, targetPath);
+      const targetPath = ctx.input.targetPath ?? "./";
+      const outputPath = backendPluginApi.resolveSafeChildPath(ctx.workspacePath, targetPath);
       await pluginScaffolderNode.fetchContents({
         reader,
         integrations,
-        baseUrl: (_b = ctx.templateInfo) == null ? void 0 : _b.baseUrl,
+        baseUrl: ctx.templateInfo?.baseUrl,
         fetchUrl: ctx.input.url,
         outputPath,
         token: ctx.input.token
@@ -742,16 +742,15 @@ function createFetchPlainFileAction(options) {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a;
       ctx.logger.info("Fetching plain content from remote URL");
-      const outputPath = backendCommon.resolveSafeChildPath(
+      const outputPath = backendPluginApi.resolveSafeChildPath(
         ctx.workspacePath,
         ctx.input.targetPath
       );
       await pluginScaffolderNode.fetchFile({
         reader,
         integrations,
-        baseUrl: (_a = ctx.templateInfo) == null ? void 0 : _a.baseUrl,
+        baseUrl: ctx.templateInfo?.baseUrl,
         fetchUrl: ctx.input.url,
         outputPath,
         token: ctx.input.token
@@ -761,8 +760,7 @@ function createFetchPlainFileAction(options) {
 }
 
 function isNoNodeSnapshotOptionProvided() {
-  var _a;
-  return ((_a = process.env.NODE_OPTIONS) == null ? void 0 : _a.includes("--no-node-snapshot")) || process.argv.includes("--no-node-snapshot");
+  return process.env.NODE_OPTIONS?.includes("--no-node-snapshot") || process.argv.includes("--no-node-snapshot");
 }
 function getMajorNodeVersion() {
   const version = process.versions.node;
@@ -855,7 +853,7 @@ class SecureTemplater {
     const context = await isolate.createContext();
     const contextGlobal = context.global;
     const nunjucksSource = await fs__default.default.readFile(
-      backendCommon.resolvePackagePath(
+      backendPluginApi.resolvePackagePath(
         "@backstage/plugin-scaffolder-backend",
         "assets/nunjucks.js.txt"
       ),
@@ -1037,12 +1035,11 @@ function createFetchTemplateAction(options) {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a, _b;
       ctx.logger.info("Fetching template content from remote URL");
       const workDir = await ctx.createTemporaryDirectory();
-      const templateDir = backendCommon.resolveSafeChildPath(workDir, "template");
-      const targetPath = (_a = ctx.input.targetPath) != null ? _a : "./";
-      const outputDir = backendCommon.resolveSafeChildPath(ctx.workspacePath, targetPath);
+      const templateDir = backendPluginApi.resolveSafeChildPath(workDir, "template");
+      const targetPath = ctx.input.targetPath ?? "./";
+      const outputDir = backendPluginApi.resolveSafeChildPath(ctx.workspacePath, targetPath);
       if (ctx.input.copyWithoutRender && ctx.input.copyWithoutTemplating) {
         throw new errors.InputError(
           "Fetch action input copyWithoutRender and copyWithoutTemplating can not be used at the same time"
@@ -1080,7 +1077,7 @@ function createFetchTemplateAction(options) {
       await pluginScaffolderNode.fetchContents({
         reader,
         integrations,
-        baseUrl: (_b = ctx.templateInfo) == null ? void 0 : _b.baseUrl,
+        baseUrl: ctx.templateInfo?.baseUrl,
         fetchUrl: ctx.input.url,
         outputPath: templateDir,
         token: ctx.input.token
@@ -1142,7 +1139,7 @@ function createFetchTemplateAction(options) {
         if (containsSkippedContent(localOutputPath)) {
           continue;
         }
-        const outputPath = backendCommon.resolveSafeChildPath(outputDir, localOutputPath);
+        const outputPath = backendPluginApi.resolveSafeChildPath(outputDir, localOutputPath);
         if (fs__default.default.existsSync(outputPath) && !ctx.input.replace) {
           continue;
         }
@@ -1157,7 +1154,7 @@ function createFetchTemplateAction(options) {
           );
           await fs__default.default.ensureDir(outputPath);
         } else {
-          const inputFilePath = backendCommon.resolveSafeChildPath(templateDir, location);
+          const inputFilePath = backendPluginApi.resolveSafeChildPath(templateDir, location);
           const stats = await fs__default.default.promises.lstat(inputFilePath);
           if (stats.isSymbolicLink() || await isbinaryfile.isBinaryFile(inputFilePath)) {
             ctx.logger.info(
@@ -1227,12 +1224,11 @@ const createFilesystemDeleteAction = () => {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a;
-      if (!Array.isArray((_a = ctx.input) == null ? void 0 : _a.files)) {
+      if (!Array.isArray(ctx.input?.files)) {
         throw new errors.InputError("files must be an Array");
       }
       for (const file of ctx.input.files) {
-        const filepath = backendCommon.resolveSafeChildPath(ctx.workspacePath, file);
+        const filepath = backendPluginApi.resolveSafeChildPath(ctx.workspacePath, file);
         try {
           await fs__default.default.remove(filepath);
           ctx.logger.info(`File ${filepath} deleted successfully`);
@@ -1305,22 +1301,21 @@ const createFilesystemRenameAction = () => {
     },
     supportsDryRun: true,
     async handler(ctx) {
-      var _a, _b;
-      if (!Array.isArray((_a = ctx.input) == null ? void 0 : _a.files)) {
+      if (!Array.isArray(ctx.input?.files)) {
         throw new errors.InputError("files must be an Array");
       }
       for (const file of ctx.input.files) {
         if (!file.from || !file.to) {
           throw new errors.InputError("each file must have a from and to property");
         }
-        const sourceFilepath = backendCommon.resolveSafeChildPath(
+        const sourceFilepath = backendPluginApi.resolveSafeChildPath(
           ctx.workspacePath,
           file.from
         );
-        const destFilepath = backendCommon.resolveSafeChildPath(ctx.workspacePath, file.to);
+        const destFilepath = backendPluginApi.resolveSafeChildPath(ctx.workspacePath, file.to);
         try {
           await fs__default.default.move(sourceFilepath, destFilepath, {
-            overwrite: (_b = file.overwrite) != null ? _b : false
+            overwrite: file.overwrite ?? false
           });
           ctx.logger.info(
             `File ${sourceFilepath} renamed to ${destFilepath} successfully`
@@ -1382,7 +1377,8 @@ const createBuiltinActions = (options) => {
     }),
     github.createPublishGithubPullRequestAction({
       integrations,
-      githubCredentialsProvider
+      githubCredentialsProvider,
+      config
     }),
     gitlab.createPublishGitlabAction({
       integrations,
@@ -1459,16 +1455,8 @@ const createBuiltinActions = (options) => {
   return actions;
 };
 
-var __defProp$4 = Object.defineProperty;
-var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
-var __publicField$4 = (obj, key, value) => {
-  __defNormalProp$4(obj, typeof key !== "symbol" ? key + "" : key, value);
-  return value;
-};
 class TemplateActionRegistry {
-  constructor() {
-    __publicField$4(this, "actions", /* @__PURE__ */ new Map());
-  }
+  actions = /* @__PURE__ */ new Map();
   register(action) {
     if (this.actions.has(action.id)) {
       throw new errors.ConflictError(
@@ -1521,12 +1509,23 @@ const intervalFromNowTill = (timeoutS, knex) => {
   return heartbeatInterval;
 };
 
-var __defProp$3 = Object.defineProperty;
-var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
-var __publicField$3 = (obj, key, value) => {
-  __defNormalProp$3(obj, typeof key !== "symbol" ? key + "" : key, value);
-  return value;
+const pipeline = util.promisify(stream.pipeline);
+const serializeWorkspace = async (path) => {
+  return await new Promise(async (resolve) => {
+    await pipeline(tar__default.default.create({ cwd: path }, [""]), concatStream__default.default(resolve));
+  });
 };
+const restoreWorkspace = async (path, buffer) => {
+  if (buffer) {
+    await pipeline(
+      stream.Readable.from(buffer),
+      tar__default.default.extract({
+        C: path
+      })
+    );
+  }
+};
+
 const migrationsDir = backendCommon.resolvePackagePath(
   "@backstage/plugin-scaffolder-backend",
   "migrations"
@@ -1547,10 +1546,7 @@ const parseSqlDateToIsoString = (input) => {
   return input;
 };
 class DatabaseTaskStore {
-  constructor(client) {
-    __publicField$3(this, "db");
-    this.db = client;
-  }
+  db;
   static async create(options) {
     const { database } = options;
     const client = await this.getClient(database);
@@ -1558,9 +1554,8 @@ class DatabaseTaskStore {
     return new DatabaseTaskStore(client);
   }
   isRecoverableTask(spec) {
-    var _a, _b;
     return ["startOver"].includes(
-      (_b = (_a = spec.EXPERIMENTAL_recovery) == null ? void 0 : _a.EXPERIMENTAL_strategy) != null ? _b : "none"
+      spec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? "none"
     );
   }
   parseSpec({ spec, id }) {
@@ -1586,19 +1581,21 @@ class DatabaseTaskStore {
     return database;
   }
   static async runMigrations(database, client) {
-    var _a;
     if (!isPluginDatabaseManager(database)) {
       await client.migrate.latest({
         directory: migrationsDir
       });
       return;
     }
-    if (!((_a = database.migrations) == null ? void 0 : _a.skip)) {
+    if (!database.migrations?.skip) {
       await client.migrate.latest({
         directory: migrationsDir
       });
     }
   }
+  constructor(client) {
+    this.db = client;
+  }
   async list(options) {
     const queryBuilder = this.db("tasks");
     if (options.createdBy) {
@@ -1607,21 +1604,17 @@ class DatabaseTaskStore {
       });
     }
     const results = await queryBuilder.orderBy("created_at", "desc").select();
-    const tasks = results.map((result) => {
-      var _a;
-      return {
-        id: result.id,
-        spec: JSON.parse(result.spec),
-        status: result.status,
-        createdBy: (_a = result.created_by) != null ? _a : void 0,
-        lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),
-        createdAt: parseSqlDateToIsoString(result.created_at)
-      };
-    });
+    const tasks = results.map((result) => ({
+      id: result.id,
+      spec: JSON.parse(result.spec),
+      status: result.status,
+      createdBy: result.created_by ?? void 0,
+      lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),
+      createdAt: parseSqlDateToIsoString(result.created_at)
+    }));
     return { tasks };
   }
   async getTask(taskId) {
-    var _a;
     const [result] = await this.db("tasks").where({ id: taskId }).select();
     if (!result) {
       throw new errors.NotFoundError(`No task with id '${taskId}' found`);
@@ -1636,7 +1629,7 @@ class DatabaseTaskStore {
         status: result.status,
         lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),
         createdAt: parseSqlDateToIsoString(result.created_at),
-        createdBy: (_a = result.created_by) != null ? _a : void 0,
+        createdBy: result.created_by ?? void 0,
         secrets,
         state
       };
@@ -1645,20 +1638,18 @@ class DatabaseTaskStore {
     }
   }
   async createTask(options) {
-    var _a;
     const taskId = uuid.v4();
     await this.db("tasks").insert({
       id: taskId,
       spec: JSON.stringify(options.spec),
       secrets: options.secrets ? JSON.stringify(options.secrets) : void 0,
-      created_by: (_a = options.createdBy) != null ? _a : null,
+      created_by: options.createdBy ?? null,
       status: "open"
     });
     return { taskId };
   }
   async claimTask() {
     return this.db.transaction(async (tx) => {
-      var _a;
       const [task] = await tx("tasks").where({
         status: "open"
       }).limit(1).select();
@@ -1691,7 +1682,7 @@ class DatabaseTaskStore {
         status: "processing",
         lastHeartbeatAt: task.last_heartbeat_at,
         createdAt: task.created_at,
-        createdBy: (_a = task.created_by) != null ? _a : void 0,
+        createdBy: task.created_by ?? void 0,
         secrets,
         state: getState()
       };
@@ -1820,7 +1811,7 @@ class DatabaseTaskStore {
     const { taskId } = options;
     const message = `This task was marked as stale as it exceeded its timeout`;
     const statusStepEvents = (await this.listEvents({ taskId })).events.filter(
-      ({ body }) => body == null ? void 0 : body.stepId
+      ({ body }) => body?.stepId
     );
     const completedSteps = statusStepEvents.filter(
       ({ body: { status } }) => status === "failed" || status === "completed"
@@ -1844,6 +1835,22 @@ class DatabaseTaskStore {
       }
     });
   }
+  async rehydrateWorkspace(options) {
+    const [result] = await this.db("tasks").where({ id: options.taskId }).select("workspace");
+    await restoreWorkspace(options.targetPath, result.workspace);
+  }
+  async cleanWorkspace({ taskId }) {
+    await this.db("tasks").where({ id: taskId }).update({
+      workspace: void 0
+    });
+  }
+  async serializeWorkspace(options) {
+    if (options.path) {
+      await this.db("tasks").where({ id: options.taskId }).update({
+        workspace: await serializeWorkspace(options.path)
+      });
+    }
+  }
   async cancelTask(options) {
     const { taskId, body } = options;
     const serializedBody = JSON.stringify(body);
@@ -1857,7 +1864,6 @@ class DatabaseTaskStore {
     const taskIdsToRecover = [];
     const timeoutS = luxon.Duration.fromObject(options.timeout).as("seconds");
     await this.db.transaction(async (tx) => {
-      var _a, _b;
       const heartbeatInterval = intervalFromNowTill(timeoutS, this.db);
       const result = await tx("tasks").where("status", "processing").andWhere("last_heartbeat_at", "<=", heartbeatInterval).update(
         {
@@ -1873,7 +1879,7 @@ class DatabaseTaskStore {
           task_id: id,
           event_type: "recovered",
           body: JSON.stringify({
-            recoverStrategy: (_b = (_a = taskSpec.EXPERIMENTAL_recovery) == null ? void 0 : _a.EXPERIMENTAL_strategy) != null ? _b : "none"
+            recoverStrategy: taskSpec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? "none"
           })
         });
       }
@@ -1886,20 +1892,19 @@ function isTruthy(value) {
   return lodash.isArray(value) ? value.length > 0 : !!value;
 }
 function generateExampleOutput(schema) {
-  var _a, _b;
   const { examples } = schema;
   if (examples && Array.isArray(examples)) {
     return examples[0];
   }
   if (schema.type === "object") {
     return Object.fromEntries(
-      Object.entries((_a = schema.properties) != null ? _a : {}).map(([key, value]) => [
+      Object.entries(schema.properties ?? {}).map(([key, value]) => [
         key,
         generateExampleOutput(value)
       ])
     );
   } else if (schema.type === "array") {
-    const [firstSchema] = (_b = [schema.items]) == null ? void 0 : _b.flat();
+    const [firstSchema] = [schema.items]?.flat();
     if (firstSchema) {
       return [generateExampleOutput(firstSchema)];
     }
@@ -1914,31 +1919,33 @@ function generateExampleOutput(schema) {
   return "<unknown>";
 }
 const readDuration$1 = (config$1, key, defaultValue) => {
-  if (config$1 == null ? void 0 : config$1.has(key)) {
+  if (config$1?.has(key)) {
     return config.readDurationFromConfig(config$1, { key });
   }
   return defaultValue;
 };
 
-var __defProp$2 = Object.defineProperty;
-var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
-var __publicField$2 = (obj, key, value) => {
-  __defNormalProp$2(obj, typeof key !== "symbol" ? key + "" : key, value);
-  return value;
-};
 class TaskManager {
   // Runs heartbeat internally
-  constructor(task, storage, signal, logger, auth) {
+  constructor(task, storage, signal, logger, auth, config) {
     this.task = task;
     this.storage = storage;
     this.signal = signal;
     this.logger = logger;
     this.auth = auth;
-    __publicField$2(this, "isDone", false);
-    __publicField$2(this, "heartbeatTimeoutId");
+    this.config = config;
   }
-  static create(task, storage, abortSignal, logger, auth) {
-    const agent = new TaskManager(task, storage, abortSignal, logger, auth);
+  isDone = false;
+  heartbeatTimeoutId;
+  static create(task, storage, abortSignal, logger, auth, config) {
+    const agent = new TaskManager(
+      task,
+      storage,
+      abortSignal,
+      logger,
+      auth,
+      config
+    );
     agent.startTimeout();
     return agent;
   }
@@ -1957,6 +1964,11 @@ class TaskManager {
   async getWorkspaceName() {
     return this.task.taskId;
   }
+  async rehydrateWorkspace(options) {
+    if (this.isWorkspaceSerializationEnabled()) {
+      this.storage.rehydrateWorkspace?.(options);
+    }
+  }
   get done() {
     return this.isDone;
   }
@@ -1967,21 +1979,32 @@ class TaskManager {
     });
   }
   async getTaskState() {
-    var _a, _b;
-    return (_b = (_a = this.storage).getTaskState) == null ? void 0 : _b.call(_a, { taskId: this.task.taskId });
+    return this.storage.getTaskState?.({ taskId: this.task.taskId });
   }
   async updateCheckpoint(options) {
-    var _a, _b;
     const { key, ...value } = options;
     if (this.task.state) {
       this.task.state.checkpoints[key] = value;
     } else {
       this.task.state = { checkpoints: { [key]: value } };
     }
-    await ((_b = (_a = this.storage).saveTaskState) == null ? void 0 : _b.call(_a, {
+    await this.storage.saveTaskState?.({
       taskId: this.task.taskId,
       state: this.task.state
-    }));
+    });
+  }
+  async serializeWorkspace(options) {
+    if (this.isWorkspaceSerializationEnabled()) {
+      await this.storage.serializeWorkspace?.({
+        path: options.path,
+        taskId: this.task.taskId
+      });
+    }
+  }
+  async cleanWorkspace() {
+    if (this.isWorkspaceSerializationEnabled()) {
+      await this.storage.cleanWorkspace?.({ taskId: this.task.taskId });
+    }
   }
   async complete(result, metadata) {
     await this.storage.completeTask({
@@ -2011,6 +2034,11 @@ class TaskManager {
       }
     }, 1e3);
   }
+  isWorkspaceSerializationEnabled() {
+    return this.config?.getOptionalBoolean(
+      "scaffolder.EXPERIMENTAL_workspaceSerialization"
+    ) ?? false;
+  }
   async getInitiatorCredentials() {
     const secrets = this.task.secrets;
     if (secrets && secrets.__initiatorCredentials) {
@@ -2038,7 +2066,6 @@ class StorageTaskBroker {
     this.logger = logger;
     this.config = config;
     this.auth = auth;
-    __publicField$2(this, "deferredDispatch", defer());
   }
   async list(options) {
     if (!this.storage.list) {
@@ -2046,8 +2073,9 @@ class StorageTaskBroker {
         "TaskStore does not implement the list method. Please implement the list method to be able to list tasks"
       );
     }
-    return await this.storage.list({ createdBy: options == null ? void 0 : options.createdBy });
+    return await this.storage.list({ createdBy: options?.createdBy });
   }
+  deferredDispatch = defer();
   async registerCancellable(taskId, abortController) {
     let shouldUnsubscribe = false;
     const subscription = this.event$({ taskId, after: void 0 }).subscribe({
@@ -2071,10 +2099,9 @@ class StorageTaskBroker {
     });
   }
   async recoverTasks() {
-    var _a, _b, _c, _d;
-    const enabled = (_a = this.config && this.config.getOptionalBoolean(
+    const enabled = (this.config && this.config.getOptionalBoolean(
       "scaffolder.EXPERIMENTAL_recoverTasks"
-    )) != null ? _a : false;
+    )) ?? false;
     if (enabled) {
       const defaultTimeout = { seconds: 30 };
       const timeout = readDuration$1(
@@ -2082,9 +2109,9 @@ class StorageTaskBroker {
         "scaffolder.EXPERIMENTAL_recoverTasksTimeout",
         defaultTimeout
       );
-      const { ids: recoveredTaskIds } = (_d = await ((_c = (_b = this.storage).recoverTasks) == null ? void 0 : _c.call(_b, {
+      const { ids: recoveredTaskIds } = await this.storage.recoverTasks?.({
         timeout
-      }))) != null ? _d : { ids: [] };
+      }) ?? { ids: [] };
       if (recoveredTaskIds.length > 0) {
         this.signalDispatch();
       }
@@ -2110,7 +2137,8 @@ class StorageTaskBroker {
           this.storage,
           abortController.signal,
           this.logger,
-          this.auth
+          this.auth,
+          this.config
         );
       }
       await this.waitForDispatch();
@@ -2185,17 +2213,16 @@ class StorageTaskBroker {
     this.deferredDispatch = defer();
   }
   async cancel(taskId) {
-    var _a, _b;
     const { events } = await this.storage.listEvents({ taskId });
-    const currentStepId = events.length > 0 ? events.filter(({ body }) => body == null ? void 0 : body.stepId).reduce((prev, curr) => prev.id > curr.id ? prev : curr).body.stepId : 0;
-    await ((_b = (_a = this.storage).cancelTask) == null ? void 0 : _b.call(_a, {
+    const currentStepId = events.length > 0 ? events.filter(({ body }) => body?.stepId).reduce((prev, curr) => prev.id > curr.id ? prev : curr).body.stepId : 0;
+    await this.storage.cancelTask?.({
       taskId,
       body: {
         message: `Step ${currentStepId} has been cancelled.`,
         stepId: currentStepId,
         status: "cancelled"
       }
-    }));
+    });
   }
 }
 
@@ -2225,8 +2252,7 @@ const hasTag = createTemplatePermissionRule({
     tag: zod.z.string().describe("Name of the tag to match on")
   }),
   apply: (resource, { tag }) => {
-    var _a, _b, _c;
-    return (_c = (_b = (_a = resource["backstage:permissions"]) == null ? void 0 : _a.tags) == null ? void 0 : _b.includes(tag)) != null ? _c : false;
+    return resource["backstage:permissions"]?.tags?.includes(tag) ?? false;
   },
   toQuery: () => ({})
 });
@@ -2297,25 +2323,6 @@ const scaffolderActionRules = {
   hasStringProperty
 };
 
-var __accessCheck = (obj, member, msg) => {
-  if (!member.has(obj))
-    throw TypeError("Cannot " + msg);
-};
-var __privateGet = (obj, member, getter) => {
-  __accessCheck(obj, member, "read from private field");
-  return getter ? getter.call(obj) : member.get(obj);
-};
-var __privateAdd = (obj, member, value) => {
-  if (member.has(obj))
-    throw TypeError("Cannot add the same private member more than once");
-  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
-};
-var __privateSet = (obj, member, value, setter) => {
-  __accessCheck(obj, member, "write to private field");
-  setter ? setter.call(obj, value) : member.set(obj, value);
-  return value;
-};
-var _winston, _addRedactions;
 const escapeRegExp = (text) => {
   return text.replace(/[.*+?^${}(\)|[\]\\]/g, "\\$&");
 };
@@ -2349,28 +2356,23 @@ class BackstageLoggerTransport extends Transport__default.default {
     callback();
   }
 }
-const _WinstonLogger = class _WinstonLogger {
-  constructor(winston, addRedactions) {
-    __privateAdd(this, _winston, void 0);
-    __privateAdd(this, _addRedactions, void 0);
-    __privateSet(this, _winston, winston);
-    __privateSet(this, _addRedactions, addRedactions);
-  }
+class WinstonLogger {
+  #winston;
+  #addRedactions;
   /**
    * Creates a {@link WinstonLogger} instance.
    */
   static create(options) {
-    var _a;
-    const redacter = _WinstonLogger.redacter();
+    const redacter = WinstonLogger.redacter();
     let logger = winston.createLogger({
       level: options.level,
       format: winston.format.combine(redacter.format, options.format),
-      transports: (_a = options.transports) != null ? _a : new winston.transports.Console()
+      transports: options.transports ?? new winston.transports.Console()
     });
     if (options.meta) {
       logger = logger.child(options.meta);
     }
-    return new _WinstonLogger(logger, redacter.add);
+    return new WinstonLogger(logger, redacter.add);
   }
   /**
    * Creates a winston log formatter for redacting secrets.
@@ -2378,21 +2380,14 @@ const _WinstonLogger = class _WinstonLogger {
   static redacter() {
     const redactionSet = /* @__PURE__ */ new Set();
     let redactionPattern = void 0;
-    const replace = (obj) => {
-      var _a;
-      for (const key in obj) {
-        if (obj.hasOwnProperty(key)) {
-          if (typeof obj[key] === "object") {
-            obj[key] = replace(obj[key]);
-          } else if (typeof obj[key] === "string") {
-            obj[key] = (_a = obj[key]) == null ? void 0 : _a.replace(redactionPattern, "[REDACTED]");
-          }
-        }
-      }
-      return obj;
-    };
     return {
-      format: winston.format(replace)(),
+      format: winston.format((obj) => {
+        if (!redactionPattern || !obj) {
+          return obj;
+        }
+        obj[tripleBeam.MESSAGE] = obj[tripleBeam.MESSAGE]?.replace?.(redactionPattern, "***");
+        return obj;
+      })(),
       add(newRedactions) {
         let added = 0;
         for (const redactionToTrim of newRedactions) {
@@ -2439,36 +2434,30 @@ const _WinstonLogger = class _WinstonLogger {
       })
     );
   }
+  constructor(winston, addRedactions) {
+    this.#winston = winston;
+    this.#addRedactions = addRedactions;
+  }
   error(message, meta) {
-    __privateGet(this, _winston).error(message, meta);
+    this.#winston.error(message, meta);
   }
   warn(message, meta) {
-    __privateGet(this, _winston).warn(message, meta);
+    this.#winston.warn(message, meta);
   }
   info(message, meta) {
-    __privateGet(this, _winston).info(message, meta);
+    this.#winston.info(message, meta);
   }
   debug(message, meta) {
-    __privateGet(this, _winston).debug(message, meta);
+    this.#winston.debug(message, meta);
   }
   child(meta) {
-    return new _WinstonLogger(__privateGet(this, _winston).child(meta));
+    return new WinstonLogger(this.#winston.child(meta));
   }
   addRedactions(redactions) {
-    var _a;
-    (_a = __privateGet(this, _addRedactions)) == null ? void 0 : _a.call(this, redactions);
+    this.#addRedactions?.(redactions);
   }
-};
-_winston = new WeakMap();
-_addRedactions = new WeakMap();
-let WinstonLogger = _WinstonLogger;
+}
 
-var __defProp$1 = Object.defineProperty;
-var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
-var __publicField$1 = (obj, key, value) => {
-  __defNormalProp$1(obj, typeof key !== "symbol" ? key + "" : key, value);
-  return value;
-};
 const isValidTaskSpec = (taskSpec) => {
   return taskSpec.apiVersion === "scaffolder.backstage.io/v1beta3";
 };
@@ -2477,11 +2466,10 @@ const createStepLogger = ({
   step,
   rootLogger
 }) => {
-  var _a;
   const stepLogStream = new stream.PassThrough();
   stepLogStream.on("data", async (data) => {
     const message = data.toString().trim();
-    if ((message == null ? void 0 : message.length) > 1) {
+    if (message?.length > 1) {
       await task.emitLog(message, { stepId: step.id });
     }
   });
@@ -2496,11 +2484,11 @@ const createStepLogger = ({
       new BackstageLoggerTransport(rootLogger)
     ]
   });
-  taskLogger.addRedactions(Object.values((_a = task.secrets) != null ? _a : {}));
+  taskLogger.addRedactions(Object.values(task.secrets ?? {}));
   const streamLogger = new stream.PassThrough();
   streamLogger.on("data", async (data) => {
     const message = data.toString().trim();
-    if ((message == null ? void 0 : message.length) > 1) {
+    if (message?.length > 1) {
       taskLogger.info(message);
     }
   });
@@ -2512,14 +2500,13 @@ const isActionAuthorized = pluginPermissionNode.createConditionAuthorizer(
 class NunjucksWorkflowRunner {
   constructor(options) {
     this.options = options;
-    __publicField$1(this, "defaultTemplateFilters");
-    __publicField$1(this, "tracker", scaffoldingTracker());
     this.defaultTemplateFilters = createDefaultFilters({
       integrations: this.options.integrations
     });
   }
+  defaultTemplateFilters;
+  tracker = scaffoldingTracker();
   isSingleTemplateString(input) {
-    var _a, _b;
     const { parser, nodes } = nunjucks__default.default;
     const parsed = parser.parse(
       input,
@@ -2532,7 +2519,7 @@ class NunjucksWorkflowRunner {
         }
       }
     );
-    return parsed.children.length === 1 && !(((_b = (_a = parsed.children[0]) == null ? void 0 : _a.children) == null ? void 0 : _b[0]) instanceof nodes.TemplateData);
+    return parsed.children.length === 1 && !(parsed.children[0]?.children?.[0] instanceof nodes.TemplateData);
   }
   render(input, context, renderTemplate) {
     return JSON.parse(JSON.stringify(input), (_key, value) => {
@@ -2568,7 +2555,6 @@ class NunjucksWorkflowRunner {
     });
   }
   async executeStep(task, step, context, renderTemplate, taskTrack, workspacePath, decision) {
-    var _a, _b, _c, _d, _e, _f;
     const stepTrack = await this.tracker.stepStart(task, step);
     if (task.cancelSignal.aborted) {
       throw new Error(`Step ${step.name} has been cancelled.`);
@@ -2589,19 +2575,16 @@ class NunjucksWorkflowRunner {
       });
       if (task.isDryRun) {
         const redactedSecrets = Object.fromEntries(
-          Object.entries((_a = task.secrets) != null ? _a : {}).map((secret) => [
-            secret[0],
-            "[REDACTED]"
-          ])
+          Object.entries(task.secrets ?? {}).map((secret) => [secret[0], "***"])
         );
-        const debugInput = (_b = step.input && this.render(
+        const debugInput = (step.input && this.render(
           step.input,
           {
             ...context,
             secrets: redactedSecrets
           },
           renderTemplate
-        )) != null ? _b : {};
+        )) ?? {};
         taskLogger.info(
           `Running ${action.id} in dry-run mode with inputs (secrets redacted): ${JSON.stringify(
             debugInput,
@@ -2611,7 +2594,7 @@ class NunjucksWorkflowRunner {
         );
         if (!action.supportsDryRun) {
           await taskTrack.skipDryRun(step, action);
-          const outputSchema = (_c = action.schema) == null ? void 0 : _c.output;
+          const outputSchema = action.schema?.output;
           if (outputSchema) {
             context.steps[step.id] = {
               output: generateExampleOutput(outputSchema)
@@ -2626,21 +2609,18 @@ class NunjucksWorkflowRunner {
         ([key, value]) => ({
           each: { key, value }
         })
-      ) : [{}]).map((i) => {
-        var _a2;
-        return {
-          ...i,
-          // Secrets are only passed when templating the input to actions for security reasons
-          input: step.input ? this.render(
-            step.input,
-            { ...context, secrets: (_a2 = task.secrets) != null ? _a2 : {}, ...i },
-            renderTemplate
-          ) : {}
-        };
-      });
+      ) : [{}]).map((i) => ({
+        ...i,
+        // Secrets are only passed when templating the input to actions for security reasons
+        input: step.input ? this.render(
+          step.input,
+          { ...context, secrets: task.secrets ?? {}, ...i },
+          renderTemplate
+        ) : {}
+      }));
       for (const iteration of iterations) {
         const actionId = `${action.id}${iteration.each ? `[${iteration.each.key}]` : ""}`;
-        if ((_d = action.schema) == null ? void 0 : _d.input) {
+        if (action.schema?.input) {
           const validateResult = jsonschema.validate(
             iteration.input,
             action.schema.input
@@ -2667,7 +2647,7 @@ class NunjucksWorkflowRunner {
       }
       const tmpDirs = new Array();
       const stepOutput = {};
-      const prevTaskState = await ((_e = task.getTaskState) == null ? void 0 : _e.call(task));
+      const prevTaskState = await task.getTaskState?.();
       for (const iteration of iterations) {
         if (iteration.each) {
           taskLogger.info(
@@ -2680,25 +2660,24 @@ class NunjucksWorkflowRunner {
         }
         await action.handler({
           input: iteration.input,
-          secrets: (_f = task.secrets) != null ? _f : {},
+          secrets: task.secrets ?? {},
           // TODO(blam): move to LoggerService and away from Winston
           logger: backendCommon.loggerToWinstonLogger(taskLogger),
           logStream: streamLogger,
           workspacePath,
           async checkpoint(keySuffix, fn) {
-            var _a2, _b2, _c2, _d2;
             const key = `v1.task.checkpoint.${keySuffix}`;
             try {
               let prevValue;
               if (prevTaskState) {
-                const prevState = (_b2 = (_a2 = prevTaskState.state) == null ? void 0 : _a2.checkpoints) == null ? void 0 : _b2[key];
+                const prevState = prevTaskState.state?.checkpoints?.[key];
                 if (prevState && prevState.status === "success") {
                   prevValue = prevState.value;
                 }
               }
               const value = prevValue ? prevValue : await fn();
               if (!prevValue) {
-                (_c2 = task.updateCheckpoint) == null ? void 0 : _c2.call(task, {
+                task.updateCheckpoint?.({
                   key,
                   status: "success",
                   value
@@ -2706,12 +2685,14 @@ class NunjucksWorkflowRunner {
               }
               return value;
             } catch (err) {
-              (_d2 = task.updateCheckpoint) == null ? void 0 : _d2.call(task, {
+              task.updateCheckpoint?.({
                 key,
                 status: "failed",
                 reason: errors.stringifyError(err)
               });
               throw err;
+            } finally {
+              await task.serializeWorkspace?.({ path: workspacePath });
             }
           },
           createTemporaryDirectory: async () => {
@@ -2743,11 +2724,14 @@ class NunjucksWorkflowRunner {
       if (task.cancelSignal.aborted) {
         throw new Error(`Step ${step.name} has been cancelled.`);
       }
+      await task.cleanWorkspace?.();
       await stepTrack.markSuccessful();
     } catch (err) {
       await taskTrack.markFailed(step, err);
       await stepTrack.markFailed();
       throw err;
+    } finally {
+      await task.serializeWorkspace?.({ path: workspacePath });
     }
   }
   async execute(task) {
@@ -2756,10 +2740,8 @@ class NunjucksWorkflowRunner {
         "Wrong template version executed with the workflow engine"
       );
     }
-    const workspacePath = path__default.default.join(
-      this.options.workingDirectory,
-      await task.getWorkspaceName()
-    );
+    const taskId = await task.getWorkspaceName();
+    const workspacePath = path__default.default.join(this.options.workingDirectory, taskId);
     const { additionalTemplateFilters, additionalTemplateGlobals } = this.options;
     const renderTemplate = await SecureTemplater.loadRenderer({
       templateFilters: {
@@ -2769,6 +2751,7 @@ class NunjucksWorkflowRunner {
       templateGlobals: additionalTemplateGlobals
     });
     try {
+      await task.rehydrateWorkspace?.({ taskId, targetPath: workspacePath });
       const taskTrack = await this.tracker.taskStart(task);
       await fs__default.default.ensureDir(workspacePath);
       const context = {
@@ -2823,10 +2806,9 @@ function scaffoldingTracker() {
     labelNames: ["template", "step", "result"]
   });
   async function taskStart(task) {
-    var _a, _b;
     await task.emitLog(`Starting up task with ${task.spec.steps.length} steps`);
-    const template = ((_a = task.spec.templateInfo) == null ? void 0 : _a.entityRef) || "";
-    const user = ((_b = task.spec.user) == null ? void 0 : _b.ref) || "";
+    const template = task.spec.templateInfo?.entityRef || "";
+    const user = task.spec.user?.ref || "";
     const taskTimer = taskDuration.startTimer({
       template
     });
@@ -2876,12 +2858,11 @@ function scaffoldingTracker() {
     };
   }
   async function stepStart(task, step) {
-    var _a;
     await task.emitLog(`Beginning step ${step.name}`, {
       stepId: step.id,
       status: "processing"
     });
-    const template = ((_a = task.spec.templateInfo) == null ? void 0 : _a.entityRef) || "";
+    const template = task.spec.templateInfo?.entityRef || "";
     const stepTimer = stepDuration.startTimer({
       template,
       step: step.name
@@ -2934,24 +2915,18 @@ function scaffoldingTracker() {
   };
 }
 
-var __defProp = Object.defineProperty;
-var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
-var __publicField = (obj, key, value) => {
-  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
-  return value;
-};
 class TaskWorker {
   constructor(options) {
     this.options = options;
-    __publicField(this, "taskQueue");
-    __publicField(this, "logger");
-    __publicField(this, "stopWorkers");
     this.stopWorkers = false;
     this.logger = options.logger;
     this.taskQueue = new PQueue__default.default({
       concurrency: options.concurrentTasksLimit
     });
   }
+  taskQueue;
+  logger;
+  stopWorkers;
   static async create(options) {
     const {
       taskBroker,
@@ -2982,11 +2957,10 @@ class TaskWorker {
     });
   }
   async recoverTasks() {
-    var _a, _b, _c;
     try {
-      await ((_b = (_a = this.options.taskBroker).recoverTasks) == null ? void 0 : _b.call(_a));
+      await this.options.taskBroker.recoverTasks?.();
     } catch (err) {
-      (_c = this.logger) == null ? void 0 : _c.error(errors.stringifyError(err));
+      this.logger?.error(errors.stringifyError(err));
     }
   }
   start() {
@@ -3075,7 +3049,7 @@ function createDryRunner(options) {
     });
     const dryRunId = uuid.v4();
     const log = new Array();
-    const contentsPath = backendCommon.resolveSafeChildPath(
+    const contentsPath = backendPluginApi.resolveSafeChildPath(
       options.workingDirectory,
       `dry-run-content-${dryRunId}`
     );
@@ -3096,7 +3070,7 @@ function createDryRunner(options) {
           templateInfo: {
             entityRef: "template:default/dry-run",
             baseUrl: url.pathToFileURL(
-              backendCommon.resolveSafeChildPath(contentsPath, "template.yaml")
+              backendPluginApi.resolveSafeChildPath(contentsPath, "template.yaml")
             ).toString()
           }
         },
@@ -3108,7 +3082,7 @@ function createDryRunner(options) {
         getWorkspaceName: async () => `dry-run-${dryRunId}`,
         cancelSignal: abortSignal,
         async emitLog(message, logMetadata) {
-          if ((logMetadata == null ? void 0 : logMetadata.stepId) === dryRunId) {
+          if (logMetadata?.stepId === dryRunId) {
             return;
           }
           log.push({
@@ -3155,10 +3129,9 @@ async function getWorkingDirectory(config, logger) {
   return workingDirectory;
 }
 function getEntityBaseUrl(entity) {
-  var _a, _b;
-  let location = (_a = entity.metadata.annotations) == null ? void 0 : _a[catalogModel.ANNOTATION_SOURCE_LOCATION];
+  let location = entity.metadata.annotations?.[catalogModel.ANNOTATION_SOURCE_LOCATION];
   if (!location) {
-    location = (_b = entity.metadata.annotations) == null ? void 0 : _b[catalogModel.ANNOTATION_LOCATION];
+    location = entity.metadata.annotations?.[catalogModel.ANNOTATION_LOCATION];
   }
   if (!location) {
     return void 0;
@@ -3185,6 +3158,24 @@ async function findTemplate(options) {
   return template;
 }
 
+async function checkPermission(options) {
+  const { permissions, permissionService, credentials } = options;
+  if (permissionService) {
+    const permissionRequest = permissions.map((permission) => ({
+      permission
+    }));
+    const authorizationResponses = await permissionService.authorize(
+      permissionRequest,
+      { credentials }
+    );
+    for (const response of authorizationResponses) {
+      if (response.result === pluginPermissionCommon.AuthorizeResult.DENY) {
+        throw new errors.NotAllowedError();
+      }
+    }
+  }
+}
+
 function isTemplatePermissionRuleInput(permissionRule) {
   return permissionRule.resourceType === alpha.RESOURCE_TYPE_SCAFFOLDER_TEMPLATE;
 }
@@ -3197,14 +3188,13 @@ function isSupportedTemplate(entity) {
 function buildDefaultIdentityClient(options) {
   return {
     getIdentity: async ({ request }) => {
-      var _a;
       const header = request.headers.authorization;
       const { logger } = options;
       if (!header) {
         return void 0;
       }
       try {
-        const token = (_a = header.match(/^Bearer\s(\S+\.\S+\.\S+)$/i)) == null ? void 0 : _a[1];
+        const token = header.match(/^Bearer\s(\S+\.\S+\.\S+)$/i)?.[1];
         if (!token) {
           throw new TypeError("Expected Bearer with JWT");
         }
@@ -3245,7 +3235,6 @@ const readDuration = (config$1, key, defaultValue) => {
   return defaultValue;
 };
 async function createRouter(options) {
-  var _a;
   const router = Router__default.default();
   router.use(express__default.default.json({ limit: "10MB" }));
   const {
@@ -3269,7 +3258,7 @@ async function createRouter(options) {
     identity,
     discovery
   });
-  const concurrentTasksLimit = (_a = options.concurrentTasksLimit) != null ? _a : options.config.getOptionalNumber("scaffolder.concurrentTasksLimit");
+  const concurrentTasksLimit = options.concurrentTasksLimit ?? options.config.getOptionalNumber("scaffolder.concurrentTasksLimit");
   const logger = parentLogger.child({ plugin: "scaffolder" });
   const workingDirectory = await getWorkingDirectory(config, logger);
   const integrations = integration.ScmIntegrations.fromConfig(config);
@@ -3378,13 +3367,13 @@ async function createRouter(options) {
         permissions: alpha.scaffolderActionPermissions,
         rules: actionRules
       }
-    ]
+    ],
+    permissions: alpha.scaffolderTaskPermissions
   });
   router.use(permissionIntegrationRouter);
   router.get(
     "/v2/templates/:namespace/:kind/:name/parameter-schema",
     async (req, res) => {
-      var _a2, _b;
       const credentials = await httpAuth.credentials(req);
       const { token } = await auth.getPluginRequestToken({
         onBehalfOf: credentials,
@@ -3395,21 +3384,18 @@ async function createRouter(options) {
         token,
         credentials
       );
-      const parameters = [(_a2 = template.spec.parameters) != null ? _a2 : []].flat();
+      const parameters = [template.spec.parameters ?? []].flat();
       const presentation = template.spec.presentation;
       res.json({
-        title: (_b = template.metadata.title) != null ? _b : template.metadata.name,
+        title: template.metadata.title ?? template.metadata.name,
         ...presentation ? { presentation } : {},
         description: template.metadata.description,
         "ui:options": template.metadata["ui:options"],
-        steps: parameters.map((schema) => {
-          var _a3;
-          return {
-            title: (_a3 = schema.title) != null ? _a3 : "Please enter the following information",
-            description: schema.description,
-            schema
-          };
-        })
+        steps: parameters.map((schema) => ({
+          title: schema.title ?? "Please enter the following information",
+          description: schema.description,
+          schema
+        }))
       });
     }
   ).get("/v2/actions", async (_req, res) => {
@@ -3423,12 +3409,16 @@ async function createRouter(options) {
     });
     res.json(actionsList);
   }).post("/v2/tasks", async (req, res) => {
-    var _a2, _b;
     const templateRef = req.body.templateRef;
     const { kind, namespace, name } = catalogModel.parseEntityRef(templateRef, {
       defaultKind: "template"
     });
     const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskCreatePermission],
+      permissionService: permissions
+    });
     const { token } = await auth.getPluginRequestToken({
       onBehalfOf: credentials,
       targetPluginId: "catalog"
@@ -3446,7 +3436,7 @@ async function createRouter(options) {
       token,
       credentials
     );
-    for (const parameters of [(_a2 = template.spec.parameters) != null ? _a2 : []].flat()) {
+    for (const parameters of [template.spec.parameters ?? []].flat()) {
       const result2 = jsonschema.validate(values, parameters);
       if (!result2.valid) {
         res.status(400).json({ errors: result2.errors });
@@ -3456,16 +3446,13 @@ async function createRouter(options) {
     const baseUrl = getEntityBaseUrl(template);
     const taskSpec = {
       apiVersion: template.apiVersion,
-      steps: template.spec.steps.map((step, index) => {
-        var _a3, _b2;
-        return {
-          ...step,
-          id: (_a3 = step.id) != null ? _a3 : `step-${index + 1}`,
-          name: (_b2 = step.name) != null ? _b2 : step.action
-        };
-      }),
+      steps: template.spec.steps.map((step, index) => ({
+        ...step,
+        id: step.id ?? `step-${index + 1}`,
+        name: step.name ?? step.action
+      })),
       EXPERIMENTAL_recovery: template.spec.EXPERIMENTAL_recovery,
-      output: (_b = template.spec.output) != null ? _b : {},
+      output: template.spec.output ?? {},
       parameters: values,
       user: {
         entity: userEntity,
@@ -3491,6 +3478,12 @@ async function createRouter(options) {
     });
     res.status(201).json({ id: result.taskId });
   }).get("/v2/tasks", async (req, res) => {
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskReadPermission],
+      permissionService: permissions
+    });
     const [userEntityRef] = [req.query.createdBy].flat();
     if (typeof userEntityRef !== "string" && typeof userEntityRef !== "undefined") {
       throw new errors.InputError("createdBy query parameter must be a string");
@@ -3505,6 +3498,12 @@ async function createRouter(options) {
     });
     res.status(200).json(tasks);
   }).get("/v2/tasks/:taskId", async (req, res) => {
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskReadPermission],
+      permissionService: permissions
+    });
     const { taskId } = req.params;
     const task = await taskBroker.get(taskId);
     if (!task) {
@@ -3513,11 +3512,22 @@ async function createRouter(options) {
     delete task.secrets;
     res.status(200).json(task);
   }).post("/v2/tasks/:taskId/cancel", async (req, res) => {
-    var _a2;
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskCancelPermission, alpha.taskReadPermission],
+      permissionService: permissions
+    });
     const { taskId } = req.params;
-    await ((_a2 = taskBroker.cancel) == null ? void 0 : _a2.call(taskBroker, taskId));
+    await taskBroker.cancel?.(taskId);
     res.status(200).json({ status: "cancelled" });
   }).get("/v2/tasks/:taskId/eventstream", async (req, res) => {
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskReadPermission],
+      permissionService: permissions
+    });
     const { taskId } = req.params;
     const after = req.query.after !== void 0 ? Number(req.query.after) : void 0;
     logger.debug(`Event stream observing taskId '${taskId}' opened`);
@@ -3534,7 +3544,6 @@ async function createRouter(options) {
         res.end();
       },
       next: ({ events }) => {
-        var _a2;
         let shouldUnsubscribe = false;
         for (const event of events) {
           res.write(
@@ -3547,7 +3556,7 @@ data: ${JSON.stringify(event)}
             shouldUnsubscribe = true;
           }
         }
-        (_a2 = res.flush) == null ? void 0 : _a2.call(res);
+        res.flush?.();
         if (shouldUnsubscribe) {
           subscription.unsubscribe();
           res.end();
@@ -3559,6 +3568,12 @@ data: ${JSON.stringify(event)}
       logger.debug(`Event stream observing taskId '${taskId}' closed`);
     });
   }).get("/v2/tasks/:taskId/events", async (req, res) => {
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskReadPermission],
+      permissionService: permissions
+    });
     const { taskId } = req.params;
     const after = Number(req.query.after) || void 0;
     const timeout = setTimeout(() => {
@@ -3581,7 +3596,12 @@ data: ${JSON.stringify(event)}
       clearTimeout(timeout);
     });
   }).post("/v2/dry-run", async (req, res) => {
-    var _a2, _b, _c;
+    const credentials = await httpAuth.credentials(req);
+    await checkPermission({
+      credentials,
+      permissions: [alpha.taskCreatePermission],
+      permissionService: permissions
+    });
     const bodySchema = zod.z.object({
       template: zod.z.unknown(),
       values: zod.z.record(zod.z.unknown()),
@@ -3597,34 +3617,30 @@ data: ${JSON.stringify(event)}
     if (!await pluginScaffolderCommon.templateEntityV1beta3Validator.check(template)) {
       throw new errors.InputError("Input template is not a template");
     }
-    const credentials = await httpAuth.credentials(req);
     const { token } = await auth.getPluginRequestToken({
       onBehalfOf: credentials,
       targetPluginId: "catalog"
     });
-    for (const parameters of [(_a2 = template.spec.parameters) != null ? _a2 : []].flat()) {
+    for (const parameters of [template.spec.parameters ?? []].flat()) {
       const result2 = jsonschema.validate(body.values, parameters);
       if (!result2.valid) {
         res.status(400).json({ errors: result2.errors });
         return;
       }
     }
-    const steps = template.spec.steps.map((step, index) => {
-      var _a3, _b2;
-      return {
-        ...step,
-        id: (_a3 = step.id) != null ? _a3 : `step-${index + 1}`,
-        name: (_b2 = step.name) != null ? _b2 : step.action
-      };
-    });
+    const steps = template.spec.steps.map((step, index) => ({
+      ...step,
+      id: step.id ?? `step-${index + 1}`,
+      name: step.name ?? step.action
+    }));
     const result = await dryRunner({
       spec: {
         apiVersion: template.apiVersion,
         steps,
-        output: (_b = template.spec.output) != null ? _b : {},
+        output: template.spec.output ?? {},
         parameters: body.values
       },
-      directoryContents: ((_c = body.directoryContents) != null ? _c : []).map((file) => ({
+      directoryContents: (body.directoryContents ?? []).map((file) => ({
         path: file.path,
         content: Buffer.from(file.base64Content, "base64")
       })),
@@ -3701,4 +3717,4 @@ exports.createRouter = createRouter;
 exports.createWaitAction = createWaitAction;
 exports.scaffolderActionRules = scaffolderActionRules;
 exports.scaffolderTemplateRules = scaffolderTemplateRules;
-//# sourceMappingURL=router-CDFi_apW.cjs.js.map
+//# sourceMappingURL=router-MKDOtEGf.cjs.js.map
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js.map
new file mode 100644
index 0000000..2a73578
--- /dev/null
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/cjs/router-MKDOtEGf.cjs.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"router-MKDOtEGf.cjs.js","sources":["../../src/scaffolder/actions/builtin/catalog/register.examples.ts","../../src/scaffolder/actions/builtin/catalog/register.ts","../../src/scaffolder/actions/builtin/catalog/write.examples.ts","../../src/scaffolder/actions/builtin/catalog/write.ts","../../src/scaffolder/actions/builtin/catalog/fetch.examples.ts","../../src/scaffolder/actions/builtin/catalog/fetch.ts","../../src/scaffolder/actions/builtin/debug/log.examples.ts","../../src/scaffolder/actions/builtin/debug/log.ts","../../src/scaffolder/actions/builtin/debug/wait.examples.ts","../../src/scaffolder/actions/builtin/debug/wait.ts","../../src/scaffolder/actions/builtin/fetch/plain.examples.ts","../../src/scaffolder/actions/builtin/fetch/plain.ts","../../src/scaffolder/actions/builtin/fetch/plainFile.examples.ts","../../src/scaffolder/actions/builtin/fetch/plainFile.ts","../../src/lib/templating/helpers.ts","../../src/lib/templating/SecureTemplater.ts","../../src/lib/templating/filters.ts","../../src/scaffolder/actions/builtin/fetch/template.examples.ts","../../src/scaffolder/actions/builtin/fetch/template.ts","../../src/scaffolder/actions/builtin/filesystem/delete.examples.ts","../../src/scaffolder/actions/builtin/filesystem/delete.ts","../../src/scaffolder/actions/builtin/filesystem/rename.examples.ts","../../src/scaffolder/actions/builtin/filesystem/rename.ts","../../src/scaffolder/actions/builtin/createBuiltinActions.ts","../../src/scaffolder/actions/TemplateActionRegistry.ts","../../src/scaffolder/tasks/taskRecoveryHelper.ts","../../src/scaffolder/tasks/dbUtil.ts","../../src/scaffolder/tasks/serializer.ts","../../src/scaffolder/tasks/DatabaseTaskStore.ts","../../src/scaffolder/tasks/helper.ts","../../src/scaffolder/tasks/StorageTaskBroker.ts","../../src/util/metrics.ts","../../src/service/rules.ts","../../src/scaffolder/tasks/logger.ts","../../src/scaffolder/tasks/NunjucksWorkflowRunner.ts","../../src/scaffolder/tasks/TaskWorker.ts","../../src/scaffolder/dryrun/DecoratedActionsRegistry.ts","../../src/scaffolder/dryrun/createDryRunner.ts","../../src/service/helpers.ts","../../src/util/checkPermissions.ts","../../src/service/router.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Register with the catalog',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:register',\n          id: 'register-with-catalog',\n          name: 'Register with the catalog',\n          input: {\n            catalogInfoUrl:\n              'http://github.com/backstage/backstage/blob/master/catalog-info.yaml',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { stringifyEntityRef, Entity } from '@backstage/catalog-model';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { examples } from './register.examples';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\nconst id = 'catalog:register';\n\n/**\n * Registers entities from a catalog descriptor file in the workspace into the software catalog.\n * @public\n */\nexport function createCatalogRegisterAction(options: {\n  catalogClient: CatalogApi;\n  integrations: ScmIntegrations;\n  auth?: AuthService;\n}) {\n  const { catalogClient, integrations, auth } = options;\n\n  return createTemplateAction<\n    | { catalogInfoUrl: string; optional?: boolean }\n    | { repoContentsUrl: string; catalogInfoPath?: string; optional?: boolean }\n  >({\n    id,\n    description:\n      'Registers entities from a catalog descriptor file in the workspace into the software catalog.',\n    examples,\n    schema: {\n      input: {\n        oneOf: [\n          {\n            type: 'object',\n            required: ['catalogInfoUrl'],\n            properties: {\n              catalogInfoUrl: {\n                title: 'Catalog Info URL',\n                description:\n                  'An absolute URL pointing to the catalog info file location',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n          {\n            type: 'object',\n            required: ['repoContentsUrl'],\n            properties: {\n              repoContentsUrl: {\n                title: 'Repository Contents URL',\n                description:\n                  'An absolute URL pointing to the root of a repository directory tree',\n                type: 'string',\n              },\n              catalogInfoPath: {\n                title: 'Fetch URL',\n                description:\n                  'A relative path from the repo root pointing to the catalog info file, defaults to /catalog-info.yaml',\n                type: 'string',\n              },\n              optional: {\n                title: 'Optional',\n                description:\n                  'Permit the registered location to optionally exist. Default: false',\n                type: 'boolean',\n              },\n            },\n          },\n        ],\n      },\n      output: {\n        type: 'object',\n        required: ['catalogInfoUrl'],\n        properties: {\n          entityRef: {\n            type: 'string',\n          },\n          catalogInfoUrl: {\n            type: 'string',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const { input } = ctx;\n\n      let catalogInfoUrl;\n      if ('catalogInfoUrl' in input) {\n        catalogInfoUrl = input.catalogInfoUrl;\n      } else {\n        const { repoContentsUrl, catalogInfoPath = '/catalog-info.yaml' } =\n          input;\n        const integration = integrations.byUrl(repoContentsUrl);\n        if (!integration) {\n          throw new InputError(\n            `No integration found for host ${repoContentsUrl}`,\n          );\n        }\n\n        catalogInfoUrl = integration.resolveUrl({\n          base: repoContentsUrl,\n          url: catalogInfoPath,\n        });\n      }\n\n      ctx.logger.info(`Registering ${catalogInfoUrl} in the catalog`);\n\n      const { token } = (await auth?.getPluginRequestToken({\n        onBehalfOf: await ctx.getInitiatorCredentials(),\n        targetPluginId: 'catalog',\n      })) ?? { token: ctx.secrets?.backstageToken };\n\n      try {\n        // 1st try to register the location, this will throw an error if the location already exists (see catch)\n        await catalogClient.addLocation(\n          {\n            type: 'url',\n            target: catalogInfoUrl,\n          },\n          token ? { token } : {},\n        );\n      } catch (e) {\n        if (!input.optional) {\n          // if optional is false or unset, it is not allowed to register the same location twice, we rethrow the error\n          throw e;\n        }\n      }\n\n      try {\n        // 2nd retry the registration as a dry run, this will not throw an error if the location already exists\n        const result = await catalogClient.addLocation(\n          {\n            dryRun: true,\n            type: 'url',\n            target: catalogInfoUrl,\n          },\n          token ? { token } : {},\n        );\n\n        if (result.entities.length) {\n          const { entities } = result;\n          let entity: Entity | undefined;\n          // prioritise 'Component' type as it is the most central kind of entity\n          entity = entities.find(\n            e =>\n              !e.metadata.name.startsWith('generated-') &&\n              e.kind === 'Component',\n          );\n          if (!entity) {\n            entity = entities.find(\n              e => !e.metadata.name.startsWith('generated-'),\n            );\n          }\n          if (!entity) {\n            entity = entities[0];\n          }\n\n          ctx.output('entityRef', stringifyEntityRef(entity));\n        }\n      } catch (e) {\n        if (!input.optional) {\n          throw e;\n        }\n      }\n\n      ctx.output('catalogInfoUrl', catalogInfoUrl);\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Write a catalog yaml file',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:write',\n          id: 'create-catalog-info-file',\n          name: 'Create catalog file',\n          input: {\n            entity: {\n              apiVersion: 'backstage.io/v1alpha1',\n              kind: 'Component',\n              metadata: {\n                name: 'test',\n                annotations: {},\n              },\n              spec: {\n                type: 'service',\n                lifecycle: 'production',\n                owner: 'default/owner',\n              },\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs-extra';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { z } from 'zod';\nimport { examples } from './write.examples';\n\nconst id = 'catalog:write';\n\n/**\n * Writes a catalog descriptor file containing the provided entity to a path in the workspace.\n * @public\n */\n\nexport function createCatalogWriteAction() {\n  return createTemplateAction({\n    id,\n    description: 'Writes the catalog-info.yaml for your template',\n    schema: {\n      input: z.object({\n        filePath: z\n          .string()\n          .optional()\n          .describe('Defaults to catalog-info.yaml'),\n        // TODO: this should reference an zod entity validator if it existed.\n        entity: z\n          .record(z.any())\n          .describe(\n            'You can provide the same values used in the Entity schema.',\n          ),\n      }),\n    },\n    examples,\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(`Writing catalog-info.yaml`);\n      const { filePath, entity } = ctx.input;\n      const entityRef = ctx.templateInfo?.entityRef;\n      const path = filePath ?? 'catalog-info.yaml';\n\n      await fs.writeFile(\n        resolveSafeChildPath(ctx.workspacePath, path),\n        yaml.stringify({\n          ...entity,\n          metadata: {\n            ...entity.metadata,\n            ...(entityRef\n              ? {\n                  annotations: {\n                    ...entity.metadata.annotations,\n                    'backstage.io/source-template': entityRef,\n                  },\n                }\n              : undefined),\n          },\n        }),\n      );\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Fetch entity by reference',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:fetch',\n          id: 'fetch',\n          name: 'Fetch catalog entity',\n          input: {\n            entityRef: 'component:default/name',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Fetch multiple entities by reference',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'catalog:fetch',\n          id: 'fetchMultiple',\n          name: 'Fetch catalog entities',\n          input: {\n            entityRefs: ['component:default/name'],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { z } from 'zod';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { examples } from './fetch.examples';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\nconst id = 'catalog:fetch';\n\n/**\n * Returns entity or entities from the catalog by entity reference(s).\n *\n * @public\n */\nexport function createFetchCatalogEntityAction(options: {\n  catalogClient: CatalogApi;\n  auth?: AuthService;\n}) {\n  const { catalogClient, auth } = options;\n\n  return createTemplateAction({\n    id,\n    description:\n      'Returns entity or entities from the catalog by entity reference(s)',\n    examples,\n    supportsDryRun: true,\n    schema: {\n      input: z.object({\n        entityRef: z\n          .string({\n            description: 'Entity reference of the entity to get',\n          })\n          .optional(),\n        entityRefs: z\n          .array(z.string(), {\n            description: 'Entity references of the entities to get',\n          })\n          .optional(),\n        optional: z\n          .boolean({\n            description:\n              'Allow the entity or entities to optionally exist. Default: false',\n          })\n          .optional(),\n        defaultKind: z.string({ description: 'The default kind' }).optional(),\n        defaultNamespace: z\n          .string({ description: 'The default namespace' })\n          .optional(),\n      }),\n      output: z.object({\n        entity: z\n          .any({\n            description:\n              'Object containing same values used in the Entity schema. Only when used with `entityRef` parameter.',\n          })\n          .optional(),\n        entities: z\n          .array(\n            z.any({\n              description:\n                'Array containing objects with same values used in the Entity schema. Only when used with `entityRefs` parameter.',\n            }),\n          )\n          .optional(),\n      }),\n    },\n    async handler(ctx) {\n      const { entityRef, entityRefs, optional, defaultKind, defaultNamespace } =\n        ctx.input;\n      if (!entityRef && !entityRefs) {\n        if (optional) {\n          return;\n        }\n        throw new Error('Missing entity reference or references');\n      }\n\n      const { token } = (await auth?.getPluginRequestToken({\n        onBehalfOf: await ctx.getInitiatorCredentials(),\n        targetPluginId: 'catalog',\n      })) ?? { token: ctx.secrets?.backstageToken };\n\n      if (entityRef) {\n        const entity = await catalogClient.getEntityByRef(\n          stringifyEntityRef(\n            parseEntityRef(entityRef, { defaultKind, defaultNamespace }),\n          ),\n          {\n            token,\n          },\n        );\n\n        if (!entity && !optional) {\n          throw new Error(`Entity ${entityRef} not found`);\n        }\n        ctx.output('entity', entity ?? null);\n      }\n\n      if (entityRefs) {\n        const entities = await catalogClient.getEntitiesByRefs(\n          {\n            entityRefs: entityRefs.map(ref =>\n              stringifyEntityRef(\n                parseEntityRef(ref, { defaultKind, defaultNamespace }),\n              ),\n            ),\n          },\n          {\n            token,\n          },\n        );\n\n        const finalEntities = entities.items.map((e, i) => {\n          if (!e && !optional) {\n            throw new Error(`Entity ${entityRefs[i]} not found`);\n          }\n          return e ?? null;\n        });\n\n        ctx.output('entities', finalEntities);\n      }\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Write a debug message',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:log',\n          id: 'write-debug-line',\n          name: 'Write \"Hello Backstage!\" log line',\n          input: {\n            message: 'Hello Backstage!',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'List the workspace directory',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:log',\n          id: 'write-workspace-directory',\n          name: 'List the workspace directory',\n          input: {\n            listWorkspace: true,\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { readdir, stat } from 'fs-extra';\nimport { relative, join } from 'path';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { examples } from './log.examples';\n\nconst id = 'debug:log';\n\n/**\n * Writes a message into the log or lists all files in the workspace\n *\n * @remarks\n *\n * This task is useful for local development and testing of both the scaffolder\n * and scaffolder templates.\n *\n * @public\n */\nexport function createDebugLogAction() {\n  return createTemplateAction<{ message?: string; listWorkspace?: boolean }>({\n    id,\n    description:\n      'Writes a message into the log or lists all files in the workspace.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          message: {\n            title: 'Message to output.',\n            type: 'string',\n          },\n          listWorkspace: {\n            title: 'List all files in the workspace, if true.',\n            type: 'boolean',\n          },\n          extra: {\n            title: 'Extra info',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info(JSON.stringify(ctx.input, null, 2));\n\n      if (ctx.input?.message) {\n        ctx.logger.info(ctx.input.message);\n      }\n\n      if (ctx.input?.listWorkspace) {\n        const files = await recursiveReadDir(ctx.workspacePath);\n        ctx.logger.info(\n          `Workspace:\\n${files\n            .map(f => `  - ${relative(ctx.workspacePath, f)}`)\n            .join('\\n')}`,\n        );\n      }\n    },\n  });\n}\n\nexport async function recursiveReadDir(dir: string): Promise<string[]> {\n  const subdirs = await readdir(dir);\n  const files = await Promise.all(\n    subdirs.map(async subdir => {\n      const res = join(dir, subdir);\n      return (await stat(res)).isDirectory() ? recursiveReadDir(res) : [res];\n    }),\n  );\n  return files.reduce((a, f) => a.concat(f), []);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Waiting for 50 milliseconds',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-milliseconds',\n          name: 'Waiting for 50 milliseconds',\n          input: {\n            milliseconds: 50,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Waiting for 5 seconds',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-5sec',\n          name: 'Waiting for 5 seconds',\n          input: {\n            seconds: 5,\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description: 'Waiting for 1 minutes',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'debug:wait',\n          id: 'wait-1min',\n          name: 'Waiting for 1 minutes',\n          input: {\n            minutes: 1,\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { HumanDuration } from '@backstage/types';\nimport { Duration } from 'luxon';\nimport { examples } from './wait.examples';\n\nconst id = 'debug:wait';\n\nconst MAX_WAIT_TIME_IN_ISO = 'T00:00:30';\n\n/**\n * Waits for a certain period of time.\n *\n * @remarks\n *\n * This task is useful to give some waiting time for manual intervention.\n * Has to be used in a combination with other actions.\n *\n * @public\n */\nexport function createWaitAction(options?: {\n  maxWaitTime?: Duration | HumanDuration;\n}) {\n  const toDuration = (\n    maxWaitTime: Duration | HumanDuration | undefined,\n  ): Duration => {\n    if (maxWaitTime) {\n      if (maxWaitTime instanceof Duration) {\n        return maxWaitTime;\n      }\n      return Duration.fromObject(maxWaitTime);\n    }\n    return Duration.fromISOTime(MAX_WAIT_TIME_IN_ISO);\n  };\n\n  return createTemplateAction<HumanDuration>({\n    id,\n    description: 'Waits for a certain period of time.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        properties: {\n          minutes: {\n            title: 'Waiting period in minutes.',\n            type: 'number',\n          },\n          seconds: {\n            title: 'Waiting period in seconds.',\n            type: 'number',\n          },\n          milliseconds: {\n            title: 'Waiting period in milliseconds.',\n            type: 'number',\n          },\n        },\n      },\n    },\n    async handler(ctx) {\n      const delayTime = Duration.fromObject(ctx.input);\n      const maxWait = toDuration(options?.maxWaitTime);\n\n      if (delayTime.minus(maxWait).toMillis() > 0) {\n        throw new Error(\n          `Waiting duration is longer than the maximum threshold of ${maxWait.toHuman()}`,\n        );\n      }\n\n      await new Promise(resolve => {\n        const controller = new AbortController();\n        const timeoutHandle = setTimeout(abort, delayTime.toMillis());\n        ctx.signal?.addEventListener('abort', abort);\n\n        function abort() {\n          ctx.signal?.removeEventListener('abort', abort);\n          clearTimeout(timeoutHandle!);\n          controller.abort();\n          resolve('finished');\n        }\n      });\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Downloads content and places it in the workspace.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain',\n          id: 'fetch-plain',\n          name: 'Fetch plain',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Optionally, if you would prefer the data to be downloaded to a subdirectory in the workspace you may specify the ‘targetPath’ input option.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain',\n          id: 'fetch-plain',\n          name: 'Fetch plain',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets',\n            targetPath: 'fetched-data',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { examples } from './plain.examples';\n\nimport {\n  createTemplateAction,\n  fetchContents,\n} from '@backstage/plugin-scaffolder-node';\n\nexport const ACTION_ID = 'fetch:plain';\n\n/**\n * Downloads content and places it in the workspace, or optionally\n * in a subdirectory specified by the 'targetPath' input option.\n * @public\n */\nexport function createFetchPlainAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n}) {\n  const { reader, integrations } = options;\n\n  return createTemplateAction<{\n    url: string;\n    targetPath?: string;\n    token?: string;\n  }>({\n    id: ACTION_ID,\n    examples,\n    description:\n      'Downloads content and places it in the workspace, or optionally in a subdirectory specified by the `targetPath` input option.',\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to.',\n            type: 'string',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching plain content from remote URL');\n\n      // Finally move the template result into the task workspace\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputPath = resolveSafeChildPath(ctx.workspacePath, targetPath);\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath,\n        token: ctx.input.token,\n      });\n    },\n  });\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Downloads a file and places it in the workspace.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:plain:file',\n          id: 'fetch-plain-file',\n          name: 'Fetch plain file',\n          input: {\n            url: 'https://github.com/backstage/community/tree/main/backstage-community-sessions/assets/Backstage%20Community%20Sessions.png',\n            targetPath: 'target-path',\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { examples } from './plainFile.examples';\nimport {\n  createTemplateAction,\n  fetchFile,\n} from '@backstage/plugin-scaffolder-node';\n\n/**\n * Downloads content and places it in the workspace, or optionally\n * in a subdirectory specified by the 'targetPath' input option.\n * @public\n */\nexport function createFetchPlainFileAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n}) {\n  const { reader, integrations } = options;\n\n  return createTemplateAction<{\n    url: string;\n    targetPath: string;\n    token?: string;\n  }>({\n    id: 'fetch:plain:file',\n    description: 'Downloads single file and places it in the workspace.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url', 'targetPath'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the single file to fetch.',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the file as.',\n            type: 'string',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching plain content from remote URL');\n\n      // Finally move the template result into the task workspace\n      const outputPath = resolveSafeChildPath(\n        ctx.workspacePath,\n        ctx.input.targetPath,\n      );\n\n      await fetchFile({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath,\n        token: ctx.input.token,\n      });\n    },\n  });\n}\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isNoNodeSnapshotOptionProvided(): boolean {\n  return (\n    process.env.NODE_OPTIONS?.includes('--no-node-snapshot') ||\n    process.argv.includes('--no-node-snapshot')\n  );\n}\n\n/**\n * Gets the major version of the currently running Node.js process.\n *\n * @remarks\n * This function extracts the major version from `process.versions.node` (a string representing the Node.js version),\n * which includes the major, minor, and patch versions. It splits this string by the `.` character to get an array\n * of these versions, and then parses the first element of this array (the major version) to a number.\n *\n * @returns {number} The major version of the currently running Node.js process.\n */\nexport function getMajorNodeVersion(): number {\n  const version = process.versions.node;\n  return parseInt(version.split('.')[0], 10);\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Isolate } from 'isolated-vm';\nimport { resolvePackagePath } from '@backstage/backend-plugin-api';\nimport {\n  TemplateFilter as _TemplateFilter,\n  TemplateGlobal as _TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport fs from 'fs-extra';\nimport { JsonValue } from '@backstage/types';\nimport { getMajorNodeVersion, isNoNodeSnapshotOptionProvided } from './helpers';\n\n// language=JavaScript\nconst mkScript = (nunjucksSource: string) => `\nconst { render, renderCompat } = (() => {\n  const module = {};\n  const process = { env: {} };\n  const require = (pkg) => { if (pkg === 'events') { return function (){}; }};\n\n  ${nunjucksSource}\n\n  const env = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '\\${{',\n      variableEnd: '}}',\n    },\n  });\n\n  const compatEnv = module.exports.configure({\n    autoescape: false,\n    ...JSON.parse(nunjucksConfigs),\n    tags: {\n      variableStart: '{{',\n      variableEnd: '}}',\n    },\n  });\n  compatEnv.addFilter('jsonify', compatEnv.getFilter('dump'));\n\n  for (const name of JSON.parse(availableTemplateFilters)) {\n    env.addFilter(name, (...args) => JSON.parse(callFilter(name, args)));\n  }\n  for (const [name, value] of Object.entries(JSON.parse(availableTemplateGlobals))) {\n    env.addGlobal(name, value);\n  }\n  for (const name of JSON.parse(availableTemplateCallbacks)) {\n    env.addGlobal(name, (...args) => JSON.parse(callGlobal(name, args)));\n  }\n\n  let uninstallCompat = undefined;\n\n  function render(str, values) {\n    try {\n      if (uninstallCompat) {\n        uninstallCompat();\n        uninstallCompat = undefined;\n      }\n      return env.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  function renderCompat(str, values) {\n    try {\n      if (!uninstallCompat) {\n        uninstallCompat = module.exports.installJinjaCompat();\n      }\n      return compatEnv.renderString(str, JSON.parse(values));\n    } catch (error) {\n      // Make sure errors don't leak anything\n      throw new Error(String(error.message));\n    }\n  }\n\n  return { render, renderCompat };\n})();\n`;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateFilter = _TemplateFilter;\n\n/**\n * @public\n * @deprecated Import from `@backstage/plugin-scaffolder-node` instead.\n */\nexport type TemplateGlobal = _TemplateGlobal;\n\ninterface SecureTemplaterOptions {\n  /* Enables jinja compatibility and the \"jsonify\" filter */\n  cookiecutterCompat?: boolean;\n  /* Extra user-provided nunjucks filters */\n  templateFilters?: Record<string, TemplateFilter>;\n  /* Extra user-provided nunjucks globals */\n  templateGlobals?: Record<string, TemplateGlobal>;\n  nunjucksConfigs?: { trimBlocks?: boolean; lstripBlocks?: boolean };\n}\n\nexport type SecureTemplateRenderer = (\n  template: string,\n  values: unknown,\n) => string;\n\nexport class SecureTemplater {\n  static async loadRenderer(options: SecureTemplaterOptions = {}) {\n    const {\n      cookiecutterCompat,\n      templateFilters = {},\n      templateGlobals = {},\n      nunjucksConfigs = {},\n    } = options;\n\n    const nodeVersion = getMajorNodeVersion();\n    if (nodeVersion >= 20 && !isNoNodeSnapshotOptionProvided()) {\n      throw new Error(\n        `When using Node.js version 20 or newer, the scaffolder backend plugin requires that it be started with the --no-node-snapshot option. \n        Please make sure that you have NODE_OPTIONS=--no-node-snapshot in your environment.`,\n      );\n    }\n\n    const isolate = new Isolate({ memoryLimit: 128 });\n    const context = await isolate.createContext();\n    const contextGlobal = context.global;\n\n    const nunjucksSource = await fs.readFile(\n      resolvePackagePath(\n        '@backstage/plugin-scaffolder-backend',\n        'assets/nunjucks.js.txt',\n      ),\n      'utf-8',\n    );\n\n    const nunjucksScript = await isolate.compileScript(\n      mkScript(nunjucksSource),\n    );\n\n    await contextGlobal.set('nunjucksConfigs', JSON.stringify(nunjucksConfigs));\n\n    const availableFilters = Object.keys(templateFilters);\n\n    await contextGlobal.set(\n      'availableTemplateFilters',\n      JSON.stringify(availableFilters),\n    );\n\n    const globalCallbacks = [];\n    const globalValues: Record<string, unknown> = {};\n    for (const [name, value] of Object.entries(templateGlobals)) {\n      if (typeof value === 'function') {\n        globalCallbacks.push(name);\n      } else {\n        globalValues[name] = value;\n      }\n    }\n\n    await contextGlobal.set(\n      'availableTemplateGlobals',\n      JSON.stringify(globalValues),\n    );\n    await contextGlobal.set(\n      'availableTemplateCallbacks',\n      JSON.stringify(globalCallbacks),\n    );\n\n    await contextGlobal.set(\n      'callFilter',\n      (filterName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateFilters, filterName)) {\n          return '';\n        }\n        return JSON.stringify(templateFilters[filterName](...args));\n      },\n    );\n\n    await contextGlobal.set(\n      'callGlobal',\n      (globalName: string, args: JsonValue[]) => {\n        if (!Object.hasOwn(templateGlobals, globalName)) {\n          return '';\n        }\n        const global = templateGlobals[globalName];\n        if (typeof global !== 'function') {\n          return '';\n        }\n        return JSON.stringify(global(...args));\n      },\n    );\n\n    await nunjucksScript.run(context);\n\n    const render: SecureTemplateRenderer = (template, values) => {\n      if (!context) {\n        throw new Error('SecureTemplater has not been initialized');\n      }\n\n      contextGlobal.setSync('templateStr', String(template));\n      contextGlobal.setSync('templateValues', JSON.stringify(values));\n\n      if (cookiecutterCompat) {\n        return context.evalSync(`renderCompat(templateStr, templateValues)`);\n      }\n\n      return context.evalSync(`render(templateStr, templateValues)`);\n    };\n    return render;\n  }\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { parseEntityRef } from '@backstage/catalog-model';\nimport { ScmIntegrations } from '@backstage/integration';\nimport type { JsonObject, JsonValue } from '@backstage/types';\nimport {\n  parseRepoUrl,\n  TemplateFilter,\n} from '@backstage/plugin-scaffolder-node';\nimport get from 'lodash/get';\n\nexport const createDefaultFilters = ({\n  integrations,\n}: {\n  integrations: ScmIntegrations;\n}): Record<string, TemplateFilter> => {\n  return {\n    parseRepoUrl: url => parseRepoUrl(url as string, integrations),\n    parseEntityRef: (ref: JsonValue, context?: JsonValue) =>\n      parseEntityRef(ref as string, context as JsonObject),\n    pick: (obj: JsonValue, key: JsonValue) => get(obj, key as string),\n    projectSlug: repoUrl => {\n      const { owner, repo } = parseRepoUrl(repoUrl as string, integrations);\n      return `${owner}/${repo}`;\n    },\n  };\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description:\n      'Downloads a skeleton directory that lives alongside the template file and fill it out with values.',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fetch:template',\n          id: 'fetch-template',\n          name: 'Fetch template',\n          input: {\n            url: './skeleton',\n            targetPath: './target',\n            values: {\n              name: 'test-project',\n              count: 1234,\n              itemList: ['first', 'second', 'third'],\n              showDummyFile: false,\n            },\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extname } from 'path';\nimport { UrlReader } from '@backstage/backend-common';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { InputError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport {\n  createTemplateAction,\n  fetchContents,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport globby from 'globby';\nimport fs from 'fs-extra';\nimport { isBinaryFile } from 'isbinaryfile';\nimport { SecureTemplater } from '../../../../lib/templating/SecureTemplater';\nimport { createDefaultFilters } from '../../../../lib/templating/filters';\nimport { examples } from './template.examples';\n\n/**\n * Downloads a skeleton, templates variables into file and directory names and content.\n * Then places the result in the workspace, or optionally in a subdirectory\n * specified by the 'targetPath' input option.\n *\n * @public\n */\nexport function createFetchTemplateAction(options: {\n  reader: UrlReader;\n  integrations: ScmIntegrations;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n}) {\n  const {\n    reader,\n    integrations,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n  } = options;\n\n  const defaultTemplateFilters = createDefaultFilters({ integrations });\n\n  return createTemplateAction<{\n    url: string;\n    targetPath?: string;\n    values: any;\n    templateFileExtension?: string | boolean;\n\n    // Cookiecutter compat options\n    /**\n     * @deprecated This field is deprecated in favor of copyWithoutTemplating.\n     */\n    copyWithoutRender?: string[];\n    copyWithoutTemplating?: string[];\n    cookiecutterCompat?: boolean;\n    replace?: boolean;\n    trimBlocks?: boolean;\n    lstripBlocks?: boolean;\n    token?: string;\n  }>({\n    id: 'fetch:template',\n    description:\n      'Downloads a skeleton, templates variables into file and directory names and content, and places the result in the workspace, or optionally in a subdirectory specified by the `targetPath` input option.',\n    examples,\n    schema: {\n      input: {\n        type: 'object',\n        required: ['url'],\n        properties: {\n          url: {\n            title: 'Fetch URL',\n            description:\n              'Relative path or absolute URL pointing to the directory tree to fetch',\n            type: 'string',\n          },\n          targetPath: {\n            title: 'Target Path',\n            description:\n              'Target path within the working directory to download the contents to. Defaults to the working directory root.',\n            type: 'string',\n          },\n          values: {\n            title: 'Template Values',\n            description: 'Values to pass on to the templating engine',\n            type: 'object',\n          },\n          copyWithoutRender: {\n            title: '[Deprecated] Copy Without Render',\n            description:\n              'An array of glob patterns. Any files or directories which match are copied without being processed as templates.',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          copyWithoutTemplating: {\n            title: 'Copy Without Templating',\n            description:\n              'An array of glob patterns. Contents of matched files or directories are copied without being processed, but paths are subject to rendering.',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          cookiecutterCompat: {\n            title: 'Cookiecutter compatibility mode',\n            description:\n              'Enable features to maximise compatibility with templates built for fetch:cookiecutter',\n            type: 'boolean',\n          },\n          templateFileExtension: {\n            title: 'Template File Extension',\n            description:\n              'If set, only files with the given extension will be templated. If set to `true`, the default extension `.njk` is used.',\n            type: ['string', 'boolean'],\n          },\n          replace: {\n            title: 'Replace files',\n            description:\n              'If set, replace files in targetPath instead of skipping existing ones.',\n            type: 'boolean',\n          },\n          token: {\n            title: 'Token',\n            description:\n              'An optional token to use for authentication when reading the resources.',\n            type: 'string',\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      ctx.logger.info('Fetching template content from remote URL');\n\n      const workDir = await ctx.createTemporaryDirectory();\n      const templateDir = resolveSafeChildPath(workDir, 'template');\n\n      const targetPath = ctx.input.targetPath ?? './';\n      const outputDir = resolveSafeChildPath(ctx.workspacePath, targetPath);\n      if (ctx.input.copyWithoutRender && ctx.input.copyWithoutTemplating) {\n        throw new InputError(\n          'Fetch action input copyWithoutRender and copyWithoutTemplating can not be used at the same time',\n        );\n      }\n\n      let copyOnlyPatterns: string[] | undefined;\n      let renderFilename: boolean;\n      if (ctx.input.copyWithoutRender) {\n        ctx.logger.warn(\n          '[Deprecated] copyWithoutRender is deprecated Please use copyWithoutTemplating instead.',\n        );\n        copyOnlyPatterns = ctx.input.copyWithoutRender;\n        renderFilename = false;\n      } else {\n        copyOnlyPatterns = ctx.input.copyWithoutTemplating;\n        renderFilename = true;\n      }\n\n      if (copyOnlyPatterns && !Array.isArray(copyOnlyPatterns)) {\n        throw new InputError(\n          'Fetch action input copyWithoutRender/copyWithoutTemplating must be an Array',\n        );\n      }\n\n      if (\n        ctx.input.templateFileExtension &&\n        (copyOnlyPatterns || ctx.input.cookiecutterCompat)\n      ) {\n        throw new InputError(\n          'Fetch action input extension incompatible with copyWithoutRender/copyWithoutTemplating and cookiecutterCompat',\n        );\n      }\n\n      let extension: string | false = false;\n      if (ctx.input.templateFileExtension) {\n        extension =\n          ctx.input.templateFileExtension === true\n            ? '.njk'\n            : ctx.input.templateFileExtension;\n        if (!extension.startsWith('.')) {\n          extension = `.${extension}`;\n        }\n      }\n\n      await fetchContents({\n        reader,\n        integrations,\n        baseUrl: ctx.templateInfo?.baseUrl,\n        fetchUrl: ctx.input.url,\n        outputPath: templateDir,\n        token: ctx.input.token,\n      });\n\n      ctx.logger.info('Listing files and directories in template');\n      const allEntriesInTemplate = await globby(`**/*`, {\n        cwd: templateDir,\n        dot: true,\n        onlyFiles: false,\n        markDirectories: true,\n        followSymbolicLinks: false,\n      });\n\n      const nonTemplatedEntries = new Set(\n        await globby(copyOnlyPatterns || [], {\n          cwd: templateDir,\n          dot: true,\n          onlyFiles: false,\n          markDirectories: true,\n          followSymbolicLinks: false,\n        }),\n      );\n\n      // Cookiecutter prefixes all parameters in templates with\n      // `cookiecutter.`. To replicate this, we wrap our parameters\n      // in an object with a `cookiecutter` property when compat\n      // mode is enabled.\n      const { cookiecutterCompat, values } = ctx.input;\n      const context = {\n        [cookiecutterCompat ? 'cookiecutter' : 'values']: values,\n      };\n\n      ctx.logger.info(\n        `Processing ${allEntriesInTemplate.length} template files/directories with input values`,\n        ctx.input.values,\n      );\n\n      const renderTemplate = await SecureTemplater.loadRenderer({\n        cookiecutterCompat: ctx.input.cookiecutterCompat,\n        templateFilters: {\n          ...defaultTemplateFilters,\n          ...additionalTemplateFilters,\n        },\n        templateGlobals: additionalTemplateGlobals,\n        nunjucksConfigs: {\n          trimBlocks: ctx.input.trimBlocks,\n          lstripBlocks: ctx.input.lstripBlocks,\n        },\n      });\n\n      for (const location of allEntriesInTemplate) {\n        let renderContents: boolean;\n\n        let localOutputPath = location;\n        if (extension) {\n          renderContents = extname(localOutputPath) === extension;\n          if (renderContents) {\n            localOutputPath = localOutputPath.slice(0, -extension.length);\n          }\n          // extension is mutual exclusive with copyWithoutRender/copyWithoutTemplating,\n          // therefore the output path is always rendered.\n          localOutputPath = renderTemplate(localOutputPath, context);\n        } else {\n          renderContents = !nonTemplatedEntries.has(location);\n          // The logic here is a bit tangled because it depends on two variables.\n          // If renderFilename is true, which means copyWithoutTemplating is used,\n          // then the path is always rendered.\n          // If renderFilename is false, which means copyWithoutRender is used,\n          // then matched file/directory won't be processed, same as before.\n          if (renderFilename) {\n            localOutputPath = renderTemplate(localOutputPath, context);\n          } else {\n            localOutputPath = renderContents\n              ? renderTemplate(localOutputPath, context)\n              : localOutputPath;\n          }\n        }\n\n        if (containsSkippedContent(localOutputPath)) {\n          continue;\n        }\n\n        const outputPath = resolveSafeChildPath(outputDir, localOutputPath);\n        if (fs.existsSync(outputPath) && !ctx.input.replace) {\n          continue;\n        }\n\n        if (!renderContents && !extension) {\n          ctx.logger.info(\n            `Copying file/directory ${location} without processing.`,\n          );\n        }\n\n        if (location.endsWith('/')) {\n          ctx.logger.info(\n            `Writing directory ${location} to template output path.`,\n          );\n          await fs.ensureDir(outputPath);\n        } else {\n          const inputFilePath = resolveSafeChildPath(templateDir, location);\n          const stats = await fs.promises.lstat(inputFilePath);\n\n          if (stats.isSymbolicLink() || (await isBinaryFile(inputFilePath))) {\n            ctx.logger.info(\n              `Copying file binary or symbolic link at ${location}, to template output path.`,\n            );\n            await fs.copy(inputFilePath, outputPath);\n          } else {\n            const statsObj = await fs.stat(inputFilePath);\n            ctx.logger.info(\n              `Writing file ${location} to template output path with mode ${statsObj.mode}.`,\n            );\n            const inputFileContents = await fs.readFile(inputFilePath, 'utf-8');\n            await fs.outputFile(\n              outputPath,\n              renderContents\n                ? renderTemplate(inputFileContents, context)\n                : inputFileContents,\n              { mode: statsObj.mode },\n            );\n          }\n        }\n      }\n\n      ctx.logger.info(`Template result written to ${outputDir}`);\n    },\n  });\n}\n\nfunction containsSkippedContent(localOutputPath: string): boolean {\n  // if the path is empty means that there is a file skipped in the root\n  // if the path starts with a separator it means that the root directory has been skipped\n  // if the path includes // means that there is a subdirectory skipped\n  // All paths returned are considered with / separator because of globby returning the linux separator for all os'.\n  return (\n    localOutputPath === '' ||\n    localOutputPath.startsWith('/') ||\n    localOutputPath.includes('//')\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Delete specified files',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fs:delete',\n          id: 'deleteFiles',\n          name: 'Delete files',\n          input: {\n            files: ['file1.txt', 'file2.txt'],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { InputError } from '@backstage/errors';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport fs from 'fs-extra';\nimport { examples } from './delete.examples';\n\n/**\n * Creates new action that enables deletion of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemDeleteAction = () => {\n  return createTemplateAction<{ files: string[] }>({\n    id: 'fs:delete',\n    description: 'Deletes files and directories from the workspace',\n    examples,\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description: 'A list of files and directories that will be deleted',\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        const filepath = resolveSafeChildPath(ctx.workspacePath, file);\n\n        try {\n          await fs.remove(filepath);\n          ctx.logger.info(`File ${filepath} deleted successfully`);\n        } catch (err) {\n          ctx.logger.error(`Failed to delete file ${filepath}:`, err);\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport * as yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Rename specified files ',\n    example: yaml.stringify({\n      steps: [\n        {\n          action: 'fs:rename',\n          id: 'renameFiles',\n          name: 'Rename files',\n          input: {\n            files: [\n              { from: 'file1.txt', to: 'file1Renamed.txt' },\n              { from: 'file2.txt', to: 'file2Renamed.txt' },\n              { from: 'file3.txt', to: 'file3Renamed.txt', overwrite: true },\n            ],\n          },\n        },\n      ],\n    }),\n  },\n];\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { InputError } from '@backstage/errors';\nimport fs from 'fs-extra';\nimport { examples } from './rename.examples';\n\n/**\n * Creates a new action that allows renames of files and directories in the workspace.\n * @public\n */\nexport const createFilesystemRenameAction = () => {\n  return createTemplateAction<{\n    files: Array<{\n      from: string;\n      to: string;\n      overwrite?: boolean;\n    }>;\n  }>({\n    id: 'fs:rename',\n    description: 'Renames files and directories within the workspace',\n    examples,\n    schema: {\n      input: {\n        required: ['files'],\n        type: 'object',\n        properties: {\n          files: {\n            title: 'Files',\n            description:\n              'A list of file and directory names that will be renamed',\n            type: 'array',\n            items: {\n              type: 'object',\n              required: ['from', 'to'],\n              properties: {\n                from: {\n                  type: 'string',\n                  title: 'The source location of the file to be renamed',\n                },\n                to: {\n                  type: 'string',\n                  title: 'The destination of the new file',\n                },\n                overwrite: {\n                  type: 'boolean',\n                  title:\n                    'Overwrite existing file or directory, default is false',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n    supportsDryRun: true,\n    async handler(ctx) {\n      if (!Array.isArray(ctx.input?.files)) {\n        throw new InputError('files must be an Array');\n      }\n\n      for (const file of ctx.input.files) {\n        if (!file.from || !file.to) {\n          throw new InputError('each file must have a from and to property');\n        }\n\n        const sourceFilepath = resolveSafeChildPath(\n          ctx.workspacePath,\n          file.from,\n        );\n        const destFilepath = resolveSafeChildPath(ctx.workspacePath, file.to);\n\n        try {\n          await fs.move(sourceFilepath, destFilepath, {\n            overwrite: file.overwrite ?? false,\n          });\n          ctx.logger.info(\n            `File ${sourceFilepath} renamed to ${destFilepath} successfully`,\n          );\n        } catch (err) {\n          ctx.logger.error(\n            `Failed to rename file ${sourceFilepath} to ${destFilepath}:`,\n            err,\n          );\n          throw err;\n        }\n      }\n    },\n  });\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UrlReader } from '@backstage/backend-common';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { Config } from '@backstage/config';\nimport {\n  DefaultGithubCredentialsProvider,\n  GithubCredentialsProvider,\n  ScmIntegrations,\n} from '@backstage/integration';\nimport {\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  createCatalogRegisterAction,\n  createCatalogWriteAction,\n  createFetchCatalogEntityAction,\n} from './catalog';\n\nimport { createDebugLogAction, createWaitAction } from './debug';\nimport {\n  createFetchPlainAction,\n  createFetchPlainFileAction,\n  createFetchTemplateAction,\n} from './fetch';\nimport {\n  createFilesystemDeleteAction,\n  createFilesystemRenameAction,\n} from './filesystem';\nimport {\n  createGithubActionsDispatchAction,\n  createGithubAutolinksAction,\n  createGithubDeployKeyAction,\n  createGithubEnvironmentAction,\n  createGithubIssuesLabelAction,\n  createGithubRepoCreateAction,\n  createGithubRepoPushAction,\n  createGithubWebhookAction,\n  createPublishGithubAction,\n  createPublishGithubPullRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-github';\n\nimport { createPublishAzureAction } from '@backstage/plugin-scaffolder-backend-module-azure';\n\nimport { createPublishBitbucketAction } from '@backstage/plugin-scaffolder-backend-module-bitbucket';\n\nimport {\n  createPublishBitbucketCloudAction,\n  createBitbucketPipelinesRunAction,\n} from '@backstage/plugin-scaffolder-backend-module-bitbucket-cloud';\n\nimport {\n  createPublishBitbucketServerAction,\n  createPublishBitbucketServerPullRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-bitbucket-server';\n\nimport {\n  createPublishGerritAction,\n  createPublishGerritReviewAction,\n} from '@backstage/plugin-scaffolder-backend-module-gerrit';\n\nimport {\n  createPublishGitlabAction,\n  createGitlabRepoPushAction,\n  createPublishGitlabMergeRequestAction,\n} from '@backstage/plugin-scaffolder-backend-module-gitlab';\n\nimport { createPublishGiteaAction } from '@backstage/plugin-scaffolder-backend-module-gitea';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\n/**\n * The options passed to {@link createBuiltinActions}\n * @public\n */\nexport interface CreateBuiltInActionsOptions {\n  /**\n   * The {@link @backstage/backend-common#UrlReader} interface that will be used in the default actions.\n   */\n  reader: UrlReader;\n  /**\n   * The {@link @backstage/integrations#ScmIntegrations} that will be used in the default actions.\n   */\n  integrations: ScmIntegrations;\n  /**\n   * The {@link @backstage/catalog-client#CatalogApi} that will be used in the default actions.\n   */\n  catalogClient: CatalogApi;\n  /**\n   * The {@link @backstage/backend-plugin-api#AuthService} that will be used in the default actions.\n   */\n  auth?: AuthService;\n  /**\n   * The {@link @backstage/config#Config} that will be used in the default actions.\n   */\n  config: Config;\n  /**\n   * Additional custom filters that will be passed to the nunjucks template engine for use in\n   * Template Manifests and also template skeleton files when using `fetch:template`.\n   */\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n}\n\n/**\n * A function to generate create a list of default actions that the scaffolder provides.\n * Is called internally in the default setup, but can be used when adding your own actions or overriding the default ones\n *\n * TODO(blam): version 2 of the scaffolder shouldn't ship with the additional modules. We should ship the basics, and let people install\n * modules for the providers they want to use.\n * @public\n * @returns A list of actions that can be used in the scaffolder\n *\n */\nexport const createBuiltinActions = (\n  options: CreateBuiltInActionsOptions,\n): TemplateAction[] => {\n  const {\n    reader,\n    integrations,\n    catalogClient,\n    auth,\n    config,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n  } = options;\n\n  const githubCredentialsProvider: GithubCredentialsProvider =\n    DefaultGithubCredentialsProvider.fromIntegrations(integrations);\n\n  const actions = [\n    createFetchPlainAction({\n      reader,\n      integrations,\n    }),\n    createFetchPlainFileAction({\n      reader,\n      integrations,\n    }),\n    createFetchTemplateAction({\n      integrations,\n      reader,\n      additionalTemplateFilters,\n      additionalTemplateGlobals,\n    }),\n    createPublishGerritAction({\n      integrations,\n      config,\n    }),\n    createPublishGerritReviewAction({\n      integrations,\n      config,\n    }),\n    createPublishGiteaAction({\n      integrations,\n      config,\n    }),\n    createPublishGithubAction({\n      integrations,\n      config,\n      githubCredentialsProvider,\n    }),\n    createPublishGithubPullRequestAction({\n      integrations,\n      githubCredentialsProvider,\n      config,\n    }),\n    createPublishGitlabAction({\n      integrations,\n      config,\n    }),\n    createPublishGitlabMergeRequestAction({\n      integrations,\n    }),\n    createGitlabRepoPushAction({\n      integrations,\n    }),\n    createPublishBitbucketAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketCloudAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketServerAction({\n      integrations,\n      config,\n    }),\n    createPublishBitbucketServerPullRequestAction({\n      integrations,\n      config,\n    }),\n    createPublishAzureAction({\n      integrations,\n      config,\n    }),\n    createDebugLogAction(),\n    createWaitAction(),\n    createCatalogRegisterAction({ catalogClient, integrations, auth }),\n    createFetchCatalogEntityAction({ catalogClient, auth }),\n    createCatalogWriteAction(),\n    createFilesystemDeleteAction(),\n    createFilesystemRenameAction(),\n    createGithubActionsDispatchAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubWebhookAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubIssuesLabelAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubRepoCreateAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createGithubRepoPushAction({\n      integrations,\n      config,\n      githubCredentialsProvider,\n    }),\n    createGithubEnvironmentAction({\n      integrations,\n    }),\n    createGithubDeployKeyAction({\n      integrations,\n    }),\n    createGithubAutolinksAction({\n      integrations,\n      githubCredentialsProvider,\n    }),\n    createBitbucketPipelinesRunAction({\n      integrations,\n    }),\n  ];\n\n  return actions as TemplateAction[];\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\n/**\n * Registry of all registered template actions.\n * @public\n */\nexport class TemplateActionRegistry {\n  private readonly actions = new Map<string, TemplateAction>();\n\n  register(action: TemplateAction) {\n    if (this.actions.has(action.id)) {\n      throw new ConflictError(\n        `Template action with ID '${action.id}' has already been registered`,\n      );\n    }\n\n    this.actions.set(action.id, action);\n  }\n\n  get(actionId: string): TemplateAction {\n    const action = this.actions.get(actionId);\n    if (!action) {\n      throw new NotFoundError(\n        `Template action with ID '${actionId}' is not registered.`,\n      );\n    }\n    return action;\n  }\n\n  list(): TemplateAction[] {\n    return [...this.actions.values()];\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SerializedTaskEvent } from '@backstage/plugin-scaffolder-node';\nimport { TaskRecoverStrategy } from '@backstage/plugin-scaffolder-common';\n\nexport const trimEventsTillLastRecovery = (\n  events: SerializedTaskEvent[],\n): { events: SerializedTaskEvent[] } => {\n  const recoveredEventInd = events\n    .slice()\n    .reverse()\n    .findIndex(event => event.type === 'recovered');\n\n  if (recoveredEventInd >= 0) {\n    const ind = events.length - recoveredEventInd - 1;\n    const { recoverStrategy } = events[ind].body as {\n      recoverStrategy: TaskRecoverStrategy;\n    };\n    if (recoverStrategy === 'startOver') {\n      return {\n        events: recoveredEventInd === 0 ? [] : events.slice(ind),\n      };\n    }\n  }\n\n  return { events };\n};\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Knex } from 'knex';\n\nexport const intervalFromNowTill = (timeoutS: number, knex: Knex) => {\n  let heartbeatInterval = knex.raw(`? - interval '${timeoutS} seconds'`, [\n    knex.fn.now(),\n  ]);\n  if (knex.client.config.client.includes('mysql')) {\n    heartbeatInterval = knex.raw(\n      `date_sub(now(), interval ${timeoutS} second)`,\n    );\n  } else if (knex.client.config.client.includes('sqlite3')) {\n    heartbeatInterval = knex.raw(`datetime('now', ?)`, [\n      `-${timeoutS} seconds`,\n    ]);\n  }\n  return heartbeatInterval;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport tar from 'tar';\nimport concatStream from 'concat-stream';\nimport { promisify } from 'util';\nimport { pipeline as pipelineCb, Readable } from 'stream';\n\nconst pipeline = promisify(pipelineCb);\n\nexport const serializeWorkspace = async (path: string): Promise<Buffer> => {\n  return await new Promise<Buffer>(async resolve => {\n    await pipeline(tar.create({ cwd: path }, ['']), concatStream(resolve));\n  });\n};\n\nexport const restoreWorkspace = async (path: string, buffer?: Buffer) => {\n  if (buffer) {\n    await pipeline(\n      Readable.from(buffer),\n      tar.extract({\n        C: path,\n      }),\n    );\n  }\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonObject } from '@backstage/types';\nimport { PluginDatabaseManager, resolvePackagePath } from '@backstage/backend-common';\nimport { ConflictError, NotFoundError } from '@backstage/errors';\nimport { Knex } from 'knex';\nimport { v4 as uuid } from 'uuid';\nimport {\n  TaskStore,\n  TaskStoreEmitOptions,\n  TaskStoreListEventsOptions,\n  TaskStoreCreateTaskOptions,\n  TaskStoreCreateTaskResult,\n  TaskStoreShutDownTaskOptions,\n  TaskStoreRecoverTaskOptions,\n} from './types';\nimport {\n  SerializedTaskEvent,\n  SerializedTask,\n  TaskStatus,\n  TaskEventType,\n  TaskSecrets,\n} from '@backstage/plugin-scaffolder-node';\nimport { DateTime, Duration } from 'luxon';\nimport { TaskRecovery, TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { trimEventsTillLastRecovery } from './taskRecoveryHelper';\nimport { intervalFromNowTill } from './dbUtil';\nimport { restoreWorkspace, serializeWorkspace } from './serializer';\n\nconst migrationsDir = resolvePackagePath(\n  '@backstage/plugin-scaffolder-backend',\n  'migrations',\n);\n\nexport type RawDbTaskRow = {\n  id: string;\n  spec: string;\n  status: TaskStatus;\n  state?: string;\n  last_heartbeat_at?: string;\n  created_at: string;\n  created_by: string | null;\n  secrets?: string | null;\n  workspace?: Buffer;\n};\n\nexport type RawDbTaskEventRow = {\n  id: number;\n  task_id: string;\n  body: string;\n  event_type: TaskEventType;\n  created_at: string;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport type DatabaseTaskStoreOptions = {\n  database: PluginDatabaseManager | Knex;\n};\n\n/**\n * Type guard to help DatabaseTaskStore understand when database is PluginDatabaseManager vs. when database is a Knex instance.\n *\n * * @public\n */\nfunction isPluginDatabaseManager(\n  opt: PluginDatabaseManager | Knex,\n): opt is PluginDatabaseManager {\n  return (opt as PluginDatabaseManager).getClient !== undefined;\n}\n\nconst parseSqlDateToIsoString = <T>(input: T): T | string => {\n  if (typeof input === 'string') {\n    const parsed = DateTime.fromSQL(input, { zone: 'UTC' });\n    if (!parsed.isValid) {\n      throw new Error(\n        `Failed to parse database timestamp '${input}', ${parsed.invalidReason}: ${parsed.invalidExplanation}`,\n      );\n    }\n    return parsed.toISO()!;\n  }\n\n  return input;\n};\n\n/**\n * DatabaseTaskStore\n *\n * @public\n */\nexport class DatabaseTaskStore implements TaskStore {\n  private readonly db: Knex;\n\n  static async create(\n    options: DatabaseTaskStoreOptions,\n  ): Promise<DatabaseTaskStore> {\n    const { database } = options;\n    const client = await this.getClient(database);\n\n    await this.runMigrations(database, client);\n\n    return new DatabaseTaskStore(client);\n  }\n\n  private isRecoverableTask(spec: TaskSpec): boolean {\n    return ['startOver'].includes(\n      spec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? 'none',\n    );\n  }\n\n  private parseSpec({ spec, id }: { spec: string; id: string }): TaskSpec {\n    try {\n      return JSON.parse(spec);\n    } catch (error) {\n      throw new Error(`Failed to parse spec of task '${id}', ${error}`);\n    }\n  }\n\n  private parseTaskSecrets(taskRow: RawDbTaskRow): TaskSecrets | undefined {\n    try {\n      return taskRow.secrets ? JSON.parse(taskRow.secrets) : undefined;\n    } catch (error) {\n      throw new Error(\n        `Failed to parse secrets of task '${taskRow.id}', ${error}`,\n      );\n    }\n  }\n\n  private static async getClient(\n    database: PluginDatabaseManager | Knex,\n  ): Promise<Knex> {\n    if (isPluginDatabaseManager(database)) {\n      return database.getClient();\n    }\n\n    return database;\n  }\n\n  private static async runMigrations(\n    database: PluginDatabaseManager | Knex,\n    client: Knex,\n  ): Promise<void> {\n    if (!isPluginDatabaseManager(database)) {\n      await client.migrate.latest({\n        directory: migrationsDir,\n      });\n\n      return;\n    }\n\n    if (!database.migrations?.skip) {\n      await client.migrate.latest({\n        directory: migrationsDir,\n      });\n    }\n  }\n\n  private constructor(client: Knex) {\n    this.db = client;\n  }\n\n  async list(options: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    const queryBuilder = this.db<RawDbTaskRow>('tasks');\n\n    if (options.createdBy) {\n      queryBuilder.where({\n        created_by: options.createdBy,\n      });\n    }\n\n    const results = await queryBuilder.orderBy('created_at', 'desc').select();\n\n    const tasks = results.map(result => ({\n      id: result.id,\n      spec: JSON.parse(result.spec),\n      status: result.status,\n      createdBy: result.created_by ?? undefined,\n      lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n      createdAt: parseSqlDateToIsoString(result.created_at),\n    }));\n\n    return { tasks };\n  }\n\n  async getTask(taskId: string): Promise<SerializedTask> {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId })\n      .select();\n    if (!result) {\n      throw new NotFoundError(`No task with id '${taskId}' found`);\n    }\n    try {\n      const spec = JSON.parse(result.spec);\n      const secrets = result.secrets ? JSON.parse(result.secrets) : undefined;\n      const state = result.state ? JSON.parse(result.state).state : undefined;\n      return {\n        id: result.id,\n        spec,\n        status: result.status,\n        lastHeartbeatAt: parseSqlDateToIsoString(result.last_heartbeat_at),\n        createdAt: parseSqlDateToIsoString(result.created_at),\n        createdBy: result.created_by ?? undefined,\n        secrets,\n        state,\n      };\n    } catch (error) {\n      throw new Error(`Failed to parse spec of task '${taskId}', ${error}`);\n    }\n  }\n\n  async createTask(\n    options: TaskStoreCreateTaskOptions,\n  ): Promise<TaskStoreCreateTaskResult> {\n    const taskId = uuid();\n    await this.db<RawDbTaskRow>('tasks').insert({\n      id: taskId,\n      spec: JSON.stringify(options.spec),\n      secrets: options.secrets ? JSON.stringify(options.secrets) : undefined,\n      created_by: options.createdBy ?? null,\n      status: 'open',\n    });\n    return { taskId };\n  }\n\n  async claimTask(): Promise<SerializedTask | undefined> {\n    return this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          status: 'open',\n        })\n        .limit(1)\n        .select();\n\n      if (!task) {\n        return undefined;\n      }\n\n      const spec = this.parseSpec(task);\n\n      const updateCount = await tx<RawDbTaskRow>('tasks')\n        .where({ id: task.id, status: 'open' })\n        .update({\n          status: 'processing',\n          last_heartbeat_at: this.db.fn.now(),\n          // remove the secrets for non-recoverable tasks when moving to processing state.\n          secrets: this.isRecoverableTask(spec) ? task.secrets : null,\n        });\n\n      if (updateCount < 1) {\n        return undefined;\n      }\n\n      const getState = () => {\n        try {\n          return task.state ? JSON.parse(task.state).state : undefined;\n        } catch (error) {\n          throw new Error(\n            `Failed to parse state of the task '${task.id}', ${error}`,\n          );\n        }\n      };\n\n      const secrets = this.parseTaskSecrets(task);\n      return {\n        id: task.id,\n        spec,\n        status: 'processing',\n        lastHeartbeatAt: task.last_heartbeat_at,\n        createdAt: task.created_at,\n        createdBy: task.created_by ?? undefined,\n        secrets,\n        state: getState(),\n      };\n    });\n  }\n\n  async heartbeatTask(taskId: string): Promise<void> {\n    const updateCount = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId, status: 'processing' })\n      .update({\n        last_heartbeat_at: this.db.fn.now(),\n      });\n    if (updateCount === 0) {\n      throw new ConflictError(`No running task with taskId ${taskId} found`);\n    }\n  }\n\n  async listStaleTasks(options: { timeoutS: number }): Promise<{\n    tasks: { taskId: string; recovery?: TaskRecovery }[];\n  }> {\n    const { timeoutS } = options;\n    const heartbeatInterval = intervalFromNowTill(timeoutS, this.db);\n    const rawRows = await this.db<RawDbTaskRow>('tasks')\n      .where('status', 'processing')\n      .andWhere('last_heartbeat_at', '<=', heartbeatInterval);\n    const tasks = rawRows.map(row => ({\n      recovery: (JSON.parse(row.spec) as TaskSpec).EXPERIMENTAL_recovery,\n      taskId: row.id,\n    }));\n    return { tasks };\n  }\n\n  async completeTask(options: {\n    taskId: string;\n    status: TaskStatus;\n    eventBody: JsonObject;\n  }): Promise<void> {\n    const { taskId, status, eventBody } = options;\n\n    let oldStatus: TaskStatus;\n    if (['failed', 'completed', 'cancelled'].includes(status)) {\n      oldStatus = 'processing';\n    } else {\n      throw new Error(\n        `Invalid status update of run '${taskId}' to status '${status}'`,\n      );\n    }\n\n    await this.db.transaction(async tx => {\n      const [task] = await tx<RawDbTaskRow>('tasks')\n        .where({\n          id: taskId,\n        })\n        .limit(1)\n        .select();\n\n      const updateTask = async (criteria: {\n        id: string;\n        status?: TaskStatus;\n      }) => {\n        const updateCount = await tx<RawDbTaskRow>('tasks')\n          .where(criteria)\n          .update({\n            status,\n            secrets: null,\n          });\n\n        if (updateCount !== 1) {\n          throw new ConflictError(\n            `Failed to update status to '${status}' for taskId ${taskId}`,\n          );\n        }\n\n        await tx<RawDbTaskEventRow>('task_events').insert({\n          task_id: taskId,\n          event_type: 'completion',\n          body: JSON.stringify(eventBody),\n        });\n      };\n\n      if (status === 'cancelled') {\n        await updateTask({\n          id: taskId,\n        });\n        return;\n      }\n\n      if (task.status === 'cancelled') {\n        return;\n      }\n\n      if (!task) {\n        throw new Error(`No task with taskId ${taskId} found`);\n      }\n      if (task.status !== oldStatus) {\n        throw new ConflictError(\n          `Refusing to update status of run '${taskId}' to status '${status}' ` +\n            `as it is currently '${task.status}', expected '${oldStatus}'`,\n        );\n      }\n\n      await updateTask({\n        id: taskId,\n        status: oldStatus,\n      });\n    });\n  }\n\n  async emitLogEvent(\n    options: TaskStoreEmitOptions<{ message: string } & JsonObject>,\n  ): Promise<void> {\n    const { taskId, body } = options;\n    const serializedBody = JSON.stringify(body);\n    await this.db<RawDbTaskEventRow>('task_events').insert({\n      task_id: taskId,\n      event_type: 'log',\n      body: serializedBody,\n    });\n  }\n\n  async getTaskState({ taskId }: { taskId: string }): Promise<\n    | {\n        state: JsonObject;\n      }\n    | undefined\n  > {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: taskId })\n      .select('state');\n    return result.state ? JSON.parse(result.state) : undefined;\n  }\n\n  async saveTaskState(options: {\n    taskId: string;\n    state?: JsonObject;\n  }): Promise<void> {\n    if (options.state) {\n      const serializedState = JSON.stringify({ state: options.state });\n      await this.db<RawDbTaskRow>('tasks')\n        .where({ id: options.taskId })\n        .update({\n          state: serializedState,\n        });\n    }\n  }\n\n  async listEvents(\n    options: TaskStoreListEventsOptions,\n  ): Promise<{ events: SerializedTaskEvent[] }> {\n    const { taskId, after } = options;\n    const rawEvents = await this.db<RawDbTaskEventRow>('task_events')\n      .where({\n        task_id: taskId,\n      })\n      .andWhere(builder => {\n        if (typeof after === 'number') {\n          builder.where('id', '>', after).orWhere('event_type', 'completion');\n        }\n      })\n      .orderBy('id')\n      .select();\n\n    const events = rawEvents.map(event => {\n      try {\n        const body = JSON.parse(event.body) as JsonObject;\n        return {\n          id: Number(event.id),\n          taskId,\n          body,\n          type: event.event_type,\n          createdAt: parseSqlDateToIsoString(event.created_at),\n        };\n      } catch (error) {\n        throw new Error(\n          `Failed to parse event body from event taskId=${taskId} id=${event.id}, ${error}`,\n        );\n      }\n    });\n\n    return trimEventsTillLastRecovery(events);\n  }\n\n  async shutdownTask(options: TaskStoreShutDownTaskOptions): Promise<void> {\n    const { taskId } = options;\n    const message = `This task was marked as stale as it exceeded its timeout`;\n\n    const statusStepEvents = (await this.listEvents({ taskId })).events.filter(\n      ({ body }) => body?.stepId,\n    );\n\n    const completedSteps = statusStepEvents\n      .filter(\n        ({ body: { status } }) => status === 'failed' || status === 'completed',\n      )\n      .map(step => step.body.stepId);\n\n    const hungProcessingSteps = statusStepEvents\n      .filter(({ body: { status } }) => status === 'processing')\n      .map(event => event.body.stepId)\n      .filter(step => !completedSteps.includes(step));\n\n    for (const step of hungProcessingSteps) {\n      await this.emitLogEvent({\n        taskId,\n        body: {\n          message,\n          stepId: step,\n          status: 'failed',\n        },\n      });\n    }\n\n    await this.completeTask({\n      taskId,\n      status: 'failed',\n      eventBody: {\n        message,\n      },\n    });\n  }\n\n  async rehydrateWorkspace(options: {\n    taskId: string;\n    targetPath: string;\n  }): Promise<void> {\n    const [result] = await this.db<RawDbTaskRow>('tasks')\n      .where({ id: options.taskId })\n      .select('workspace');\n\n    await restoreWorkspace(options.targetPath, result.workspace);\n  }\n\n  async cleanWorkspace({ taskId }: { taskId: string }): Promise<void> {\n    await this.db<RawDbTaskRow>('tasks').where({ id: taskId }).update({\n      workspace: undefined,\n    });\n  }\n\n  async serializeWorkspace(options: {\n    path: string;\n    taskId: string;\n  }): Promise<void> {\n    if (options.path) {\n      await this.db<RawDbTaskRow>('tasks')\n        .where({ id: options.taskId })\n        .update({\n          workspace: await serializeWorkspace(options.path),\n        });\n    }\n  }\n\n  async cancelTask(\n    options: TaskStoreEmitOptions<{ message: string } & JsonObject>,\n  ): Promise<void> {\n    const { taskId, body } = options;\n    const serializedBody = JSON.stringify(body);\n    await this.db<RawDbTaskEventRow>('task_events').insert({\n      task_id: taskId,\n      event_type: 'cancelled',\n      body: serializedBody,\n    });\n  }\n\n  async recoverTasks(\n    options: TaskStoreRecoverTaskOptions,\n  ): Promise<{ ids: string[] }> {\n    const taskIdsToRecover: string[] = [];\n    const timeoutS = Duration.fromObject(options.timeout).as('seconds');\n\n    await this.db.transaction(async tx => {\n      const heartbeatInterval = intervalFromNowTill(timeoutS, this.db);\n\n      const result = await tx<RawDbTaskRow>('tasks')\n        .where('status', 'processing')\n        .andWhere('last_heartbeat_at', '<=', heartbeatInterval)\n        .update(\n          {\n            status: 'open',\n            last_heartbeat_at: this.db.fn.now(),\n          },\n          ['id', 'spec'],\n        );\n\n      taskIdsToRecover.push(...result.map(i => i.id));\n\n      for (const { id, spec } of result) {\n        const taskSpec = JSON.parse(spec as string) as TaskSpec;\n        await tx<RawDbTaskEventRow>('task_events').insert({\n          task_id: id,\n          event_type: 'recovered',\n          body: JSON.stringify({\n            recoverStrategy:\n              taskSpec.EXPERIMENTAL_recovery?.EXPERIMENTAL_strategy ?? 'none',\n          }),\n        });\n      }\n    });\n\n    return { ids: taskIdsToRecover };\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { HumanDuration } from '@backstage/types';\n\nimport { isArray } from 'lodash';\nimport { Schema } from 'jsonschema';\n\n/**\n * Returns true if the input is not `false`, `undefined`, `null`, `\"\"`, `0`, or\n * `[]`. This behavior is based on the behavior of handlebars, see\n * https://handlebarsjs.com/guide/builtin-helpers.html#if\n */\nexport function isTruthy(value: any): boolean {\n  return isArray(value) ? value.length > 0 : !!value;\n}\n\nexport function generateExampleOutput(schema: Schema): unknown {\n  const { examples } = schema as { examples?: unknown };\n  if (examples && Array.isArray(examples)) {\n    return examples[0];\n  }\n  if (schema.type === 'object') {\n    return Object.fromEntries(\n      Object.entries(schema.properties ?? {}).map(([key, value]) => [\n        key,\n        generateExampleOutput(value),\n      ]),\n    );\n  } else if (schema.type === 'array') {\n    const [firstSchema] = [schema.items]?.flat();\n    if (firstSchema) {\n      return [generateExampleOutput(firstSchema)];\n    }\n    return [];\n  } else if (schema.type === 'string') {\n    return '<example>';\n  } else if (schema.type === 'number') {\n    return 0;\n  } else if (schema.type === 'boolean') {\n    return false;\n  }\n  return '<unknown>';\n}\n\nexport const readDuration = (\n  config: Config | undefined,\n  key: string,\n  defaultValue: HumanDuration,\n) => {\n  if (config?.has(key)) {\n    return readDurationFromConfig(config, { key });\n  }\n  return defaultValue;\n};\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Config } from '@backstage/config';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject, JsonValue, Observable } from '@backstage/types';\nimport { Logger } from 'winston';\nimport ObservableImpl from 'zen-observable';\nimport {\n  TaskSecrets,\n  SerializedTask,\n  SerializedTaskEvent,\n  TaskBroker,\n  TaskBrokerDispatchOptions,\n  TaskCompletionState,\n  TaskContext,\n} from '@backstage/plugin-scaffolder-node';\nimport { InternalTaskSecrets, TaskStore } from './types';\nimport { readDuration } from './helper';\nimport {\n  AuthService,\n  BackstageCredentials,\n} from '@backstage/backend-plugin-api';\n\ntype TaskState = {\n  checkpoints: {\n    [key: string]:\n      | {\n          status: 'failed';\n          reason: string;\n        }\n      | {\n          status: 'success';\n          value: JsonValue;\n        };\n  };\n};\n/**\n * TaskManager\n *\n * @public\n */\nexport class TaskManager implements TaskContext {\n  private isDone = false;\n\n  private heartbeatTimeoutId?: ReturnType<typeof setInterval>;\n\n  static create(\n    task: CurrentClaimedTask,\n    storage: TaskStore,\n    abortSignal: AbortSignal,\n    logger: Logger,\n    auth?: AuthService,\n    config?: Config,\n  ) {\n    const agent = new TaskManager(\n      task,\n      storage,\n      abortSignal,\n      logger,\n      auth,\n      config,\n    );\n    agent.startTimeout();\n    return agent;\n  }\n\n  // Runs heartbeat internally\n  private constructor(\n    private readonly task: CurrentClaimedTask,\n    private readonly storage: TaskStore,\n    private readonly signal: AbortSignal,\n    private readonly logger: Logger,\n    private readonly auth?: AuthService,\n    private readonly config?: Config,\n  ) {}\n\n  get spec() {\n    return this.task.spec;\n  }\n\n  get cancelSignal() {\n    return this.signal;\n  }\n\n  get secrets() {\n    return this.task.secrets;\n  }\n\n  get createdBy() {\n    return this.task.createdBy;\n  }\n\n  async getWorkspaceName() {\n    return this.task.taskId;\n  }\n\n  async rehydrateWorkspace?(options: {\n    taskId: string;\n    targetPath: string;\n  }): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      this.storage.rehydrateWorkspace?.(options);\n    }\n  }\n\n  get done() {\n    return this.isDone;\n  }\n\n  async emitLog(message: string, logMetadata?: JsonObject): Promise<void> {\n    await this.storage.emitLogEvent({\n      taskId: this.task.taskId,\n      body: { message, ...logMetadata },\n    });\n  }\n\n  async getTaskState?(): Promise<\n    | {\n        state?: JsonObject;\n      }\n    | undefined\n  > {\n    return this.storage.getTaskState?.({ taskId: this.task.taskId });\n  }\n\n  async updateCheckpoint?(\n    options:\n      | {\n          key: string;\n          status: 'success';\n          value: JsonValue;\n        }\n      | {\n          key: string;\n          status: 'failed';\n          reason: string;\n        },\n  ): Promise<void> {\n    const { key, ...value } = options;\n    if (this.task.state) {\n      (this.task.state as TaskState).checkpoints[key] = value;\n    } else {\n      this.task.state = { checkpoints: { [key]: value } };\n    }\n    await this.storage.saveTaskState?.({\n      taskId: this.task.taskId,\n      state: this.task.state,\n    });\n  }\n\n  async serializeWorkspace?(options: { path: string }): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      await this.storage.serializeWorkspace?.({\n        path: options.path,\n        taskId: this.task.taskId,\n      });\n    }\n  }\n\n  async cleanWorkspace?(): Promise<void> {\n    if (this.isWorkspaceSerializationEnabled()) {\n      await this.storage.cleanWorkspace?.({ taskId: this.task.taskId });\n    }\n  }\n\n  async complete(\n    result: TaskCompletionState,\n    metadata?: JsonObject,\n  ): Promise<void> {\n    await this.storage.completeTask({\n      taskId: this.task.taskId,\n      status: result === 'failed' ? 'failed' : 'completed',\n      eventBody: {\n        message: `Run completed with status: ${result}`,\n        ...metadata,\n      },\n    });\n    this.isDone = true;\n    if (this.heartbeatTimeoutId) {\n      clearTimeout(this.heartbeatTimeoutId);\n    }\n  }\n\n  private startTimeout() {\n    this.heartbeatTimeoutId = setTimeout(async () => {\n      try {\n        await this.storage.heartbeatTask(this.task.taskId);\n        this.startTimeout();\n      } catch (error) {\n        this.isDone = true;\n\n        this.logger.error(\n          `Heartbeat for task ${this.task.taskId} failed`,\n          error,\n        );\n      }\n    }, 1000);\n  }\n\n  private isWorkspaceSerializationEnabled(): boolean {\n    return (\n      this.config?.getOptionalBoolean(\n        'scaffolder.EXPERIMENTAL_workspaceSerialization',\n      ) ?? false\n    );\n  }\n\n  async getInitiatorCredentials(): Promise<BackstageCredentials> {\n    const secrets = this.task.secrets as InternalTaskSecrets;\n\n    if (secrets && secrets.__initiatorCredentials) {\n      return JSON.parse(secrets.__initiatorCredentials);\n    }\n    if (!this.auth) {\n      throw new Error(\n        'Failed to create none credentials in scaffolder task. The TaskManager has not been initialized with an auth service implementation',\n      );\n    }\n    return this.auth.getNoneCredentials();\n  }\n}\n\n/**\n * Stores the state of the current claimed task passed to the TaskContext\n *\n * @public\n */\nexport interface CurrentClaimedTask {\n  /**\n   * The TaskSpec of the current claimed task.\n   */\n  spec: TaskSpec;\n  /**\n   * The uuid of the current claimed task.\n   */\n  taskId: string;\n  /**\n   * The secrets that are stored with the task.\n   */\n  secrets?: TaskSecrets;\n  /**\n   * The state of checkpoints of the task.\n   */\n  state?: JsonObject;\n  /**\n   * The creator of the task.\n   */\n  createdBy?: string;\n\n  workspace?: Promise<Buffer>;\n}\n\nfunction defer() {\n  let resolve = () => {};\n  const promise = new Promise<void>(_resolve => {\n    resolve = _resolve;\n  });\n  return { promise, resolve };\n}\n\nexport class StorageTaskBroker implements TaskBroker {\n  constructor(\n    private readonly storage: TaskStore,\n    private readonly logger: Logger,\n    private readonly config?: Config,\n    private readonly auth?: AuthService,\n  ) {}\n\n  async list(options?: {\n    createdBy?: string;\n  }): Promise<{ tasks: SerializedTask[] }> {\n    if (!this.storage.list) {\n      throw new Error(\n        'TaskStore does not implement the list method. Please implement the list method to be able to list tasks',\n      );\n    }\n    return await this.storage.list({ createdBy: options?.createdBy });\n  }\n\n  private deferredDispatch = defer();\n\n  private async registerCancellable(\n    taskId: string,\n    abortController: AbortController,\n  ) {\n    let shouldUnsubscribe = false;\n    const subscription = this.event$({ taskId, after: undefined }).subscribe({\n      error: _ => {\n        subscription.unsubscribe();\n      },\n      next: ({ events }) => {\n        for (const event of events) {\n          if (event.type === 'cancelled') {\n            abortController.abort();\n            shouldUnsubscribe = true;\n          }\n\n          if (event.type === 'completion') {\n            shouldUnsubscribe = true;\n          }\n        }\n        if (shouldUnsubscribe) {\n          subscription.unsubscribe();\n        }\n      },\n    });\n  }\n\n  public async recoverTasks(): Promise<void> {\n    const enabled =\n      (this.config &&\n        this.config.getOptionalBoolean(\n          'scaffolder.EXPERIMENTAL_recoverTasks',\n        )) ??\n      false;\n\n    if (enabled) {\n      const defaultTimeout = { seconds: 30 };\n      const timeout = readDuration(\n        this.config,\n        'scaffolder.EXPERIMENTAL_recoverTasksTimeout',\n        defaultTimeout,\n      );\n      const { ids: recoveredTaskIds } = (await this.storage.recoverTasks?.({\n        timeout,\n      })) ?? { ids: [] };\n      if (recoveredTaskIds.length > 0) {\n        this.signalDispatch();\n      }\n    }\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.claim}\n   */\n  async claim(): Promise<TaskContext> {\n    for (;;) {\n      const pendingTask = await this.storage.claimTask();\n      if (pendingTask) {\n        const abortController = new AbortController();\n        await this.registerCancellable(pendingTask.id, abortController);\n        return TaskManager.create(\n          {\n            taskId: pendingTask.id,\n            spec: pendingTask.spec,\n            secrets: pendingTask.secrets,\n            createdBy: pendingTask.createdBy,\n            state: pendingTask.state,\n          },\n          this.storage,\n          abortController.signal,\n          this.logger,\n          this.auth,\n          this.config,\n        );\n      }\n\n      await this.waitForDispatch();\n    }\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.dispatch}\n   */\n  async dispatch(\n    options: TaskBrokerDispatchOptions,\n  ): Promise<{ taskId: string }> {\n    const taskRow = await this.storage.createTask(options);\n    this.signalDispatch();\n    return {\n      taskId: taskRow.taskId,\n    };\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.get}\n   */\n  async get(taskId: string): Promise<SerializedTask> {\n    return this.storage.getTask(taskId);\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.event$}\n   */\n  event$(options: {\n    taskId: string;\n    after?: number;\n  }): Observable<{ events: SerializedTaskEvent[] }> {\n    return new ObservableImpl(observer => {\n      const { taskId } = options;\n\n      let after = options.after;\n      let cancelled = false;\n\n      (async () => {\n        while (!cancelled) {\n          const result = await this.storage.listEvents({ taskId, after });\n          const { events } = result;\n          if (events.length) {\n            after = events[events.length - 1].id;\n            observer.next(result);\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      })();\n\n      return () => {\n        cancelled = true;\n      };\n    });\n  }\n\n  /**\n   * {@inheritdoc TaskBroker.vacuumTasks}\n   */\n  async vacuumTasks(options: { timeoutS: number }): Promise<void> {\n    const { tasks } = await this.storage.listStaleTasks(options);\n    await Promise.all(\n      tasks.map(async task => {\n        try {\n          await this.storage.completeTask({\n            taskId: task.taskId,\n            status: 'failed',\n            eventBody: {\n              message:\n                'The task was cancelled because the task worker lost connection to the task broker',\n            },\n          });\n        } catch (error) {\n          this.logger.warn(`Failed to cancel task '${task.taskId}', ${error}`);\n        }\n      }),\n    );\n  }\n\n  private waitForDispatch() {\n    return this.deferredDispatch.promise;\n  }\n\n  private signalDispatch() {\n    this.deferredDispatch.resolve();\n    this.deferredDispatch = defer();\n  }\n\n  async cancel(taskId: string) {\n    const { events } = await this.storage.listEvents({ taskId });\n    const currentStepId =\n      events.length > 0\n        ? events\n            .filter(({ body }) => body?.stepId)\n            .reduce((prev, curr) => (prev.id > curr.id ? prev : curr)).body\n            .stepId\n        : 0;\n\n    await this.storage.cancelTask?.({\n      taskId,\n      body: {\n        message: `Step ${currentStepId} has been cancelled.`,\n        stepId: currentStepId,\n        status: 'cancelled',\n      },\n    });\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Counter,\n  CounterConfiguration,\n  Gauge,\n  GaugeConfiguration,\n  Histogram,\n  HistogramConfiguration,\n  register,\n  Summary,\n  SummaryConfiguration,\n} from 'prom-client';\n\nexport function createCounterMetric<T extends string>(\n  config: CounterConfiguration<T>,\n): Counter<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Counter<T>(config);\n    register.registerMetric(metric);\n  }\n  return metric as Counter<T>;\n}\n\nexport function createGaugeMetric<T extends string>(\n  config: GaugeConfiguration<T>,\n): Gauge<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Gauge<T>(config);\n    register.registerMetric(metric);\n  }\n  return metric as Gauge<T>;\n}\n\nexport function createSummaryMetric<T extends string>(\n  config: SummaryConfiguration<T>,\n): Summary<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Summary<T>(config);\n    register.registerMetric(metric);\n  }\n\n  return metric as Summary<T>;\n}\n\nexport function createHistogramMetric<T extends string>(\n  config: HistogramConfiguration<T>,\n): Histogram<T> {\n  let metric = register.getSingleMetric(config.name);\n  if (!metric) {\n    metric = new Histogram<T>(config);\n    register.registerMetric(metric);\n  }\n\n  return metric as Histogram<T>;\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { makeCreatePermissionRule } from '@backstage/plugin-permission-node';\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n} from '@backstage/plugin-scaffolder-common/alpha';\n\nimport {\n  TemplateEntityStepV1beta3,\n  TemplateParametersV1beta3,\n} from '@backstage/plugin-scaffolder-common';\n\nimport { z } from 'zod';\nimport { JsonObject, JsonPrimitive } from '@backstage/types';\nimport { get } from 'lodash';\n\nexport const createTemplatePermissionRule = makeCreatePermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE\n>();\n\nexport const hasTag = createTemplatePermissionRule({\n  name: 'HAS_TAG',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  description: `Match parameters or steps with the given tag`,\n  paramsSchema: z.object({\n    tag: z.string().describe('Name of the tag to match on'),\n  }),\n  apply: (resource, { tag }) => {\n    return resource['backstage:permissions']?.tags?.includes(tag) ?? false;\n  },\n  toQuery: () => ({}),\n});\n\nexport const createActionPermissionRule = makeCreatePermissionRule<\n  {\n    action: string;\n    input: JsonObject | undefined;\n  },\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION\n>();\n\nexport const hasActionId = createActionPermissionRule({\n  name: 'HAS_ACTION_ID',\n  resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  description: `Match actions with the given actionId`,\n  paramsSchema: z.object({\n    actionId: z.string().describe('Name of the actionId to match on'),\n  }),\n  apply: (resource, { actionId }) => {\n    return resource.action === actionId;\n  },\n  toQuery: () => ({}),\n});\n\nexport const hasProperty = buildHasProperty({\n  name: 'HAS_PROPERTY',\n  valueSchema: z.union([z.string(), z.number(), z.boolean(), z.null()]),\n  validateProperty: false,\n});\n\nexport const hasBooleanProperty = buildHasProperty({\n  name: 'HAS_BOOLEAN_PROPERTY',\n  valueSchema: z.boolean(),\n});\nexport const hasNumberProperty = buildHasProperty({\n  name: 'HAS_NUMBER_PROPERTY',\n  valueSchema: z.number(),\n});\nexport const hasStringProperty = buildHasProperty({\n  name: 'HAS_STRING_PROPERTY',\n  valueSchema: z.string(),\n});\n\nfunction buildHasProperty<Schema extends z.ZodType<JsonPrimitive>>({\n  name,\n  valueSchema,\n  validateProperty = true,\n}: {\n  name: string;\n  valueSchema: Schema;\n  validateProperty?: boolean;\n}) {\n  return createActionPermissionRule({\n    name,\n    description: `Allow actions with the specified property`,\n    resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n    paramsSchema: z.object({\n      key: z\n        .string()\n        .describe(`Property within the action parameters to match on`),\n      value: valueSchema\n        .optional()\n        .describe(`Value of the given property to match on`),\n    }) as unknown as z.ZodType<{ key: string; value?: z.infer<Schema> }>,\n    apply: (resource, { key, value }) => {\n      const foundValue = get(resource.input, key);\n\n      if (validateProperty && !valueSchema.safeParse(foundValue).success) {\n        return false;\n      }\n      if (value !== undefined) {\n        if (valueSchema.safeParse(value).success) {\n          return value === foundValue;\n        }\n        return false;\n      }\n\n      return foundValue !== undefined;\n    },\n    toQuery: () => ({}),\n  });\n}\n\nexport const scaffolderTemplateRules = { hasTag };\nexport const scaffolderActionRules = {\n  hasActionId,\n  hasBooleanProperty,\n  hasNumberProperty,\n  hasStringProperty,\n};\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  LoggerService,\n  RootLoggerService,\n} from '@backstage/backend-plugin-api';\nimport { JsonObject } from '@backstage/types';\nimport { Format, TransformableInfo } from 'logform';\nimport Transport, { TransportStreamOptions } from 'winston-transport';\nimport { Logger, format, createLogger, transports } from 'winston';\nimport { MESSAGE } from 'triple-beam';\n\n/**\n * Escapes a given string to be used inside a RegExp.\n *\n * Taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n */\nconst escapeRegExp = (text: string) => {\n  return text.replace(/[.*+?^${}(\\)|[\\]\\\\]/g, '\\\\$&');\n};\n\ninterface WinstonLoggerOptions {\n  meta?: JsonObject;\n  level: string;\n  format: Format;\n  transports: Transport[];\n}\n\n// This is a workaround for being able to preserve the log format of the root logger.\n// Will revisit all of this implementation once we can break the router to use only `LoggerService`.\nexport class BackstageLoggerTransport extends Transport {\n  constructor(\n    private readonly backstageLogger: LoggerService,\n    opts?: TransportStreamOptions,\n  ) {\n    super(opts);\n  }\n\n  log(info: unknown, callback: VoidFunction) {\n    if (typeof info !== 'object' || info === null) {\n      callback();\n      return;\n    }\n    const { level, message, ...meta } = info as JsonObject;\n    switch (level) {\n      case 'error':\n        this.backstageLogger.error(String(message), meta);\n        break;\n      case 'warn':\n        this.backstageLogger.warn(String(message), meta);\n        break;\n      case 'info':\n        this.backstageLogger.info(String(message), meta);\n        break;\n      case 'debug':\n        this.backstageLogger.debug(String(message), meta);\n        break;\n      default:\n        this.backstageLogger.info(String(message), meta);\n    }\n    callback();\n  }\n}\n\nexport class WinstonLogger implements RootLoggerService {\n  #winston: Logger;\n  #addRedactions?: (redactions: Iterable<string>) => void;\n\n  /**\n   * Creates a {@link WinstonLogger} instance.\n   */\n  static create(options: WinstonLoggerOptions): WinstonLogger {\n    const redacter = WinstonLogger.redacter();\n\n    let logger = createLogger({\n      level: options.level,\n      format: format.combine(redacter.format, options.format),\n      transports: options.transports ?? new transports.Console(),\n    });\n    if (options.meta) {\n      logger = logger.child(options.meta);\n    }\n\n    return new WinstonLogger(logger, redacter.add);\n  }\n\n  /**\n   * Creates a winston log formatter for redacting secrets.\n   */\n  static redacter(): {\n    format: Format;\n    add: (redactions: Iterable<string>) => void;\n  } {\n    const redactionSet = new Set<string>();\n\n    let redactionPattern: RegExp | undefined = undefined;\n\n    return {\n      format: format((obj: TransformableInfo) => {\n        if (!redactionPattern || !obj) {\n          return obj;\n        }\n\n        obj[MESSAGE] = obj[MESSAGE]?.replace?.(redactionPattern, '***');\n\n        return obj;\n      })(),\n      add(newRedactions) {\n        let added = 0;\n        for (const redactionToTrim of newRedactions) {\n          // Trimming the string ensures that we don't accdentally get extra\n          // newlines or other whitespace interfering with the redaction; this\n          // can happen for example when using string literals in yaml\n          const redaction = redactionToTrim.trim();\n          // Exclude secrets that are empty or just one character in length. These\n          // typically mean that you are running local dev or tests, or using the\n          // --lax flag which sets things to just 'x'.\n          if (redaction.length <= 1) {\n            continue;\n          }\n          if (!redactionSet.has(redaction)) {\n            redactionSet.add(redaction);\n            added += 1;\n          }\n        }\n        if (added > 0) {\n          const redactions = Array.from(redactionSet)\n            .map(r => escapeRegExp(r))\n            .join('|');\n          redactionPattern = new RegExp(`(${redactions})`, 'g');\n        }\n      },\n    };\n  }\n\n  /**\n   * Creates a pretty printed winston log formatter.\n   */\n  static colorFormat(): Format {\n    const colorizer = format.colorize();\n\n    return format.combine(\n      format.timestamp(),\n      format.colorize({\n        colors: {\n          timestamp: 'dim',\n          prefix: 'blue',\n          field: 'cyan',\n          debug: 'grey',\n        },\n      }),\n      format.printf((info: TransformableInfo) => {\n        const { timestamp, level, message, plugin, service, ...fields } = info;\n        const prefix = plugin || service;\n        const timestampColor = colorizer.colorize('timestamp', timestamp);\n        const prefixColor = colorizer.colorize('prefix', prefix);\n\n        const extraFields = Object.entries(fields)\n          .map(\n            ([key, value]) =>\n              `${colorizer.colorize('field', `${key}`)}=${value}`,\n          )\n          .join(' ');\n\n        return `${timestampColor} ${prefixColor} ${level} ${message} ${extraFields}`;\n      }),\n    );\n  }\n\n  private constructor(\n    winston: Logger,\n    addRedactions?: (redactions: Iterable<string>) => void,\n  ) {\n    this.#winston = winston;\n    this.#addRedactions = addRedactions;\n  }\n\n  error(message: string, meta?: JsonObject): void {\n    this.#winston.error(message, meta);\n  }\n\n  warn(message: string, meta?: JsonObject): void {\n    this.#winston.warn(message, meta);\n  }\n\n  info(message: string, meta?: JsonObject): void {\n    this.#winston.info(message, meta);\n  }\n\n  debug(message: string, meta?: JsonObject): void {\n    this.#winston.debug(message, meta);\n  }\n\n  child(meta: JsonObject): LoggerService {\n    return new WinstonLogger(this.#winston.child(meta));\n  }\n\n  addRedactions(redactions: Iterable<string>) {\n    this.#addRedactions?.(redactions);\n  }\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskTrackType, WorkflowResponse, WorkflowRunner } from './types';\nimport * as winston from 'winston';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport nunjucks from 'nunjucks';\nimport { JsonArray, JsonObject, JsonValue } from '@backstage/types';\nimport { InputError, NotAllowedError, stringifyError } from '@backstage/errors';\nimport { PassThrough } from 'stream';\nimport { generateExampleOutput, isTruthy } from './helper';\nimport { validate as validateJsonSchema } from 'jsonschema';\nimport { TemplateActionRegistry } from '../actions';\nimport {\n  SecureTemplater,\n  SecureTemplateRenderer,\n} from '../../lib/templating/SecureTemplater';\nimport {\n  TaskRecovery,\n  TaskSpec,\n  TaskSpecV1beta3,\n  TaskStep,\n} from '@backstage/plugin-scaffolder-common';\n\nimport {\n  TemplateAction,\n  TemplateFilter,\n  TemplateGlobal,\n  TaskContext,\n} from '@backstage/plugin-scaffolder-node';\nimport { createConditionAuthorizer } from '@backstage/plugin-permission-node';\nimport { UserEntity } from '@backstage/catalog-model';\nimport { createCounterMetric, createHistogramMetric } from '../../util/metrics';\nimport { createDefaultFilters } from '../../lib/templating/filters';\nimport {\n  AuthorizeResult,\n  PolicyDecision,\n} from '@backstage/plugin-permission-common';\nimport { scaffolderActionRules } from '../../service/rules';\nimport { actionExecutePermission } from '@backstage/plugin-scaffolder-common/alpha';\nimport { PermissionsService } from '@backstage/backend-plugin-api';\nimport { loggerToWinstonLogger } from '@backstage/backend-common';\nimport { BackstageLoggerTransport, WinstonLogger } from './logger';\n\ntype NunjucksWorkflowRunnerOptions = {\n  workingDirectory: string;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  logger: winston.Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionsService;\n};\n\ntype TemplateContext = {\n  parameters: JsonObject;\n  EXPERIMENTAL_recovery?: TaskRecovery;\n  steps: {\n    [stepName: string]: { output: { [outputName: string]: JsonValue } };\n  };\n  secrets?: Record<string, string>;\n  user?: {\n    entity?: UserEntity;\n    ref?: string;\n  };\n  each?: JsonValue;\n};\n\ntype CheckpointState =\n  | {\n      status: 'failed';\n      reason: string;\n    }\n  | {\n      status: 'success';\n      value: JsonValue;\n    };\n\nconst isValidTaskSpec = (taskSpec: TaskSpec): taskSpec is TaskSpecV1beta3 => {\n  return taskSpec.apiVersion === 'scaffolder.backstage.io/v1beta3';\n};\n\nconst createStepLogger = ({\n  task,\n  step,\n  rootLogger,\n}: {\n  task: TaskContext;\n  step: TaskStep;\n  rootLogger: winston.Logger;\n}) => {\n  const stepLogStream = new PassThrough();\n  stepLogStream.on('data', async data => {\n    const message = data.toString().trim();\n    if (message?.length > 1) {\n      await task.emitLog(message, { stepId: step.id });\n    }\n  });\n\n  const taskLogger = WinstonLogger.create({\n    level: process.env.LOG_LEVEL || 'info',\n    format: winston.format.combine(\n      winston.format.colorize(),\n      winston.format.simple(),\n    ),\n    transports: [\n      new winston.transports.Stream({ stream: stepLogStream }),\n      new BackstageLoggerTransport(rootLogger),\n    ],\n  });\n\n  taskLogger.addRedactions(Object.values(task.secrets ?? {}));\n\n  // This stream logger should be deprecated. We're going to replace it with\n  // just using the logger directly, as all those logs get written to step logs\n  // using the stepLogStream above.\n  // Initially this stream used to be the only way to write to the client logs, but that\n  // has changed over time, there's not really a need for this anymore.\n  // You can just create a simple wrapper like the below in your action to write to the main logger.\n  // This way we also get recactions for free.\n  const streamLogger = new PassThrough();\n  streamLogger.on('data', async data => {\n    const message = data.toString().trim();\n    if (message?.length > 1) {\n      taskLogger.info(message);\n    }\n  });\n\n  return { taskLogger, streamLogger };\n};\n\nconst isActionAuthorized = createConditionAuthorizer(\n  Object.values(scaffolderActionRules),\n);\n\nexport class NunjucksWorkflowRunner implements WorkflowRunner {\n  private readonly defaultTemplateFilters: Record<string, TemplateFilter>;\n\n  constructor(private readonly options: NunjucksWorkflowRunnerOptions) {\n    this.defaultTemplateFilters = createDefaultFilters({\n      integrations: this.options.integrations,\n    });\n  }\n\n  private readonly tracker = scaffoldingTracker();\n\n  private isSingleTemplateString(input: string) {\n    const { parser, nodes } = nunjucks as unknown as {\n      parser: {\n        parse(\n          template: string,\n          ctx: object,\n          options: nunjucks.ConfigureOptions,\n        ): { children: { children?: unknown[] }[] };\n      };\n      nodes: { TemplateData: Function };\n    };\n\n    const parsed = parser.parse(\n      input,\n      {},\n      {\n        autoescape: false,\n        tags: {\n          variableStart: '${{',\n          variableEnd: '}}',\n        },\n      },\n    );\n\n    return (\n      parsed.children.length === 1 &&\n      !(parsed.children[0]?.children?.[0] instanceof nodes.TemplateData)\n    );\n  }\n\n  private render<T>(\n    input: T,\n    context: TemplateContext,\n    renderTemplate: SecureTemplateRenderer,\n  ): T {\n    return JSON.parse(JSON.stringify(input), (_key, value) => {\n      try {\n        if (typeof value === 'string') {\n          try {\n            if (this.isSingleTemplateString(value)) {\n              // Lets convert ${{ parameters.bob }} to ${{ (parameters.bob) | dump }} so we can keep the input type\n              const wrappedDumped = value.replace(\n                /\\${{(.+)}}/g,\n                '${{ ( $1 ) | dump }}',\n              );\n\n              // Run the templating\n              const templated = renderTemplate(wrappedDumped, context);\n\n              // If there's an empty string returned, then it's undefined\n              if (templated === '') {\n                return undefined;\n              }\n\n              // Reparse the dumped string\n              return JSON.parse(templated);\n            }\n          } catch (ex) {\n            this.options.logger.error(\n              `Failed to parse template string: ${value} with error ${ex.message}`,\n            );\n          }\n\n          // Fallback to default behaviour\n          const templated = renderTemplate(value, context);\n\n          if (templated === '') {\n            return undefined;\n          }\n\n          return templated;\n        }\n      } catch {\n        return value;\n      }\n      return value;\n    });\n  }\n\n  async executeStep(\n    task: TaskContext,\n    step: TaskStep,\n    context: TemplateContext,\n    renderTemplate: (template: string, values: unknown) => string,\n    taskTrack: TaskTrackType,\n    workspacePath: string,\n    decision: PolicyDecision,\n  ) {\n    const stepTrack = await this.tracker.stepStart(task, step);\n\n    if (task.cancelSignal.aborted) {\n      throw new Error(`Step ${step.name} has been cancelled.`);\n    }\n\n    try {\n      if (step.if) {\n        const ifResult = this.render(step.if, context, renderTemplate);\n        if (!isTruthy(ifResult)) {\n          await stepTrack.skipFalsy();\n          return;\n        }\n      }\n\n      const action: TemplateAction<JsonObject> =\n        this.options.actionRegistry.get(step.action);\n      const { taskLogger, streamLogger } = createStepLogger({\n        task,\n        step,\n        rootLogger: this.options.logger,\n      });\n\n      if (task.isDryRun) {\n        const redactedSecrets = Object.fromEntries(\n          Object.entries(task.secrets ?? {}).map(secret => [secret[0], '***']),\n        );\n        const debugInput =\n          (step.input &&\n            this.render(\n              step.input,\n              {\n                ...context,\n                secrets: redactedSecrets,\n              },\n              renderTemplate,\n            )) ??\n          {};\n        taskLogger.info(\n          `Running ${\n            action.id\n          } in dry-run mode with inputs (secrets redacted): ${JSON.stringify(\n            debugInput,\n            undefined,\n            2,\n          )}`,\n        );\n        if (!action.supportsDryRun) {\n          await taskTrack.skipDryRun(step, action);\n          const outputSchema = action.schema?.output;\n          if (outputSchema) {\n            context.steps[step.id] = {\n              output: generateExampleOutput(outputSchema) as {\n                [name in string]: JsonValue;\n              },\n            };\n          } else {\n            context.steps[step.id] = { output: {} };\n          }\n          return;\n        }\n      }\n      const iterations = (\n        step.each\n          ? Object.entries(this.render(step.each, context, renderTemplate)).map(\n              ([key, value]) => ({\n                each: { key, value },\n              }),\n            )\n          : [{}]\n      ).map(i => ({\n        ...i,\n        // Secrets are only passed when templating the input to actions for security reasons\n        input: step.input\n          ? this.render(\n              step.input,\n              { ...context, secrets: task.secrets ?? {}, ...i },\n              renderTemplate,\n            )\n          : {},\n      }));\n      for (const iteration of iterations) {\n        const actionId = `${action.id}${\n          iteration.each ? `[${iteration.each.key}]` : ''\n        }`;\n\n        if (action.schema?.input) {\n          const validateResult = validateJsonSchema(\n            iteration.input,\n            action.schema.input,\n          );\n          if (!validateResult.valid) {\n            const errors = validateResult.errors.join(', ');\n            throw new InputError(\n              `Invalid input passed to action ${actionId}, ${errors}`,\n            );\n          }\n        }\n        if (\n          !isActionAuthorized(decision, {\n            action: action.id,\n            input: iteration.input,\n          })\n        ) {\n          throw new NotAllowedError(\n            `Unauthorized action: ${actionId}. The action is not allowed. Input: ${JSON.stringify(\n              iteration.input,\n              null,\n              2,\n            )}`,\n          );\n        }\n      }\n      const tmpDirs = new Array<string>();\n      const stepOutput: { [outputName: string]: JsonValue } = {};\n      const prevTaskState = await task.getTaskState?.();\n\n      for (const iteration of iterations) {\n        if (iteration.each) {\n          taskLogger.info(\n            `Running step each: ${JSON.stringify(\n              iteration.each,\n              (k, v) => (k ? v.toString() : v),\n              0,\n            )}`,\n          );\n        }\n        await action.handler({\n          input: iteration.input,\n          secrets: task.secrets ?? {},\n          // TODO(blam): move to LoggerService and away from Winston\n          logger: loggerToWinstonLogger(taskLogger),\n          logStream: streamLogger,\n          workspacePath,\n          async checkpoint<U extends JsonValue>(\n            keySuffix: string,\n            fn: () => Promise<U>,\n          ) {\n            const key = `v1.task.checkpoint.${keySuffix}`;\n            try {\n              let prevValue: U | undefined;\n              if (prevTaskState) {\n                const prevState = (\n                  prevTaskState.state?.checkpoints as {\n                    [key: string]: CheckpointState;\n                  }\n                )?.[key];\n                if (prevState && prevState.status === 'success') {\n                  prevValue = prevState.value as U;\n                }\n              }\n\n              const value = prevValue ? prevValue : await fn();\n\n              if (!prevValue) {\n                task.updateCheckpoint?.({\n                  key,\n                  status: 'success',\n                  value,\n                });\n              }\n              return value;\n            } catch (err) {\n              task.updateCheckpoint?.({\n                key,\n                status: 'failed',\n                reason: stringifyError(err),\n              });\n              throw err;\n            } finally {\n              await task.serializeWorkspace?.({ path: workspacePath });\n            }\n          },\n          createTemporaryDirectory: async () => {\n            const tmpDir = await fs.mkdtemp(\n              `${workspacePath}_step-${step.id}-`,\n            );\n            tmpDirs.push(tmpDir);\n            return tmpDir;\n          },\n          output(name: string, value: JsonValue) {\n            if (step.each) {\n              stepOutput[name] = stepOutput[name] || [];\n              (stepOutput[name] as JsonArray).push(value);\n            } else {\n              stepOutput[name] = value;\n            }\n          },\n          templateInfo: task.spec.templateInfo,\n          user: task.spec.user,\n          isDryRun: task.isDryRun,\n          signal: task.cancelSignal,\n          getInitiatorCredentials: () => task.getInitiatorCredentials(),\n        });\n      }\n\n      // Remove all temporary directories that were created when executing the action\n      for (const tmpDir of tmpDirs) {\n        await fs.remove(tmpDir);\n      }\n\n      context.steps[step.id] = { output: stepOutput };\n\n      if (task.cancelSignal.aborted) {\n        throw new Error(`Step ${step.name} has been cancelled.`);\n      }\n\n      await task.cleanWorkspace?.();\n      await stepTrack.markSuccessful();\n    } catch (err) {\n      await taskTrack.markFailed(step, err);\n      await stepTrack.markFailed();\n      throw err;\n    } finally {\n      await task.serializeWorkspace?.({ path: workspacePath });\n    }\n  }\n\n  async execute(task: TaskContext): Promise<WorkflowResponse> {\n    if (!isValidTaskSpec(task.spec)) {\n      throw new InputError(\n        'Wrong template version executed with the workflow engine',\n      );\n    }\n    const taskId = await task.getWorkspaceName();\n\n    const workspacePath = path.join(this.options.workingDirectory, taskId);\n\n    const { additionalTemplateFilters, additionalTemplateGlobals } =\n      this.options;\n\n    const renderTemplate = await SecureTemplater.loadRenderer({\n      templateFilters: {\n        ...this.defaultTemplateFilters,\n        ...additionalTemplateFilters,\n      },\n      templateGlobals: additionalTemplateGlobals,\n    });\n\n    try {\n      await task.rehydrateWorkspace?.({ taskId, targetPath: workspacePath });\n\n      const taskTrack = await this.tracker.taskStart(task);\n      await fs.ensureDir(workspacePath);\n\n      const context: TemplateContext = {\n        parameters: task.spec.parameters,\n        steps: {},\n        user: task.spec.user,\n      };\n\n      const [decision]: PolicyDecision[] =\n        this.options.permissions && task.spec.steps.length\n          ? await this.options.permissions.authorizeConditional(\n              [{ permission: actionExecutePermission }],\n              { credentials: await task.getInitiatorCredentials() },\n            )\n          : [{ result: AuthorizeResult.ALLOW }];\n\n      for (const step of task.spec.steps) {\n        await this.executeStep(\n          task,\n          step,\n          context,\n          renderTemplate,\n          taskTrack,\n          workspacePath,\n          decision,\n        );\n      }\n\n      const output = this.render(task.spec.output, context, renderTemplate);\n      await taskTrack.markSuccessful();\n\n      return { output };\n    } finally {\n      if (workspacePath) {\n        await fs.remove(workspacePath);\n      }\n    }\n  }\n}\n\nfunction scaffoldingTracker() {\n  const taskCount = createCounterMetric({\n    name: 'scaffolder_task_count',\n    help: 'Count of task runs',\n    labelNames: ['template', 'user', 'result'],\n  });\n  const taskDuration = createHistogramMetric({\n    name: 'scaffolder_task_duration',\n    help: 'Duration of a task run',\n    labelNames: ['template', 'result'],\n  });\n  const stepCount = createCounterMetric({\n    name: 'scaffolder_step_count',\n    help: 'Count of step runs',\n    labelNames: ['template', 'step', 'result'],\n  });\n  const stepDuration = createHistogramMetric({\n    name: 'scaffolder_step_duration',\n    help: 'Duration of a step runs',\n    labelNames: ['template', 'step', 'result'],\n  });\n\n  async function taskStart(task: TaskContext) {\n    await task.emitLog(`Starting up task with ${task.spec.steps.length} steps`);\n    const template = task.spec.templateInfo?.entityRef || '';\n    const user = task.spec.user?.ref || '';\n\n    const taskTimer = taskDuration.startTimer({\n      template,\n    });\n\n    async function skipDryRun(\n      step: TaskStep,\n      action: TemplateAction<JsonObject>,\n    ) {\n      task.emitLog(`Skipping because ${action.id} does not support dry-run`, {\n        stepId: step.id,\n        status: 'skipped',\n      });\n    }\n\n    async function markSuccessful() {\n      taskCount.inc({\n        template,\n        user,\n        result: 'ok',\n      });\n      taskTimer({ result: 'ok' });\n    }\n\n    async function markFailed(step: TaskStep, err: Error) {\n      await task.emitLog(String(err.stack), {\n        stepId: step.id,\n        status: 'failed',\n      });\n      taskCount.inc({\n        template,\n        user,\n        result: 'failed',\n      });\n      taskTimer({ result: 'failed' });\n    }\n\n    async function markCancelled(step: TaskStep) {\n      await task.emitLog(`Step ${step.id} has been cancelled.`, {\n        stepId: step.id,\n        status: 'cancelled',\n      });\n      taskCount.inc({\n        template,\n        user,\n        result: 'cancelled',\n      });\n      taskTimer({ result: 'cancelled' });\n    }\n\n    return {\n      skipDryRun,\n      markCancelled,\n      markSuccessful,\n      markFailed,\n    };\n  }\n\n  async function stepStart(task: TaskContext, step: TaskStep) {\n    await task.emitLog(`Beginning step ${step.name}`, {\n      stepId: step.id,\n      status: 'processing',\n    });\n    const template = task.spec.templateInfo?.entityRef || '';\n\n    const stepTimer = stepDuration.startTimer({\n      template,\n      step: step.name,\n    });\n\n    async function markSuccessful() {\n      await task.emitLog(`Finished step ${step.name}`, {\n        stepId: step.id,\n        status: 'completed',\n      });\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'ok',\n      });\n      stepTimer({ result: 'ok' });\n    }\n\n    async function markCancelled() {\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'cancelled',\n      });\n      stepTimer({ result: 'cancelled' });\n    }\n\n    async function markFailed() {\n      stepCount.inc({\n        template,\n        step: step.name,\n        result: 'failed',\n      });\n      stepTimer({ result: 'failed' });\n    }\n\n    async function skipFalsy() {\n      await task.emitLog(\n        `Skipping step ${step.id} because its if condition was false`,\n        { stepId: step.id, status: 'skipped' },\n      );\n      stepTimer({ result: 'skipped' });\n    }\n\n    return {\n      markCancelled,\n      markFailed,\n      markSuccessful,\n      skipFalsy,\n    };\n  }\n\n  return {\n    taskStart,\n    stepStart,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WorkflowRunner } from './types';\nimport {\n  TaskContext,\n  TaskBroker,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport PQueue from 'p-queue';\nimport { NunjucksWorkflowRunner } from './NunjucksWorkflowRunner';\nimport { Logger } from 'winston';\nimport { TemplateActionRegistry } from '../actions';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { assertError, stringifyError } from '@backstage/errors';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\n\n/**\n * TaskWorkerOptions\n *\n * @public\n */\nexport type TaskWorkerOptions = {\n  taskBroker: TaskBroker;\n  runners: {\n    workflowRunner: WorkflowRunner;\n  };\n  concurrentTasksLimit: number;\n  permissions?: PermissionEvaluator;\n  logger?: Logger;\n};\n\n/**\n * CreateWorkerOptions\n *\n * @public\n */\nexport type CreateWorkerOptions = {\n  taskBroker: TaskBroker;\n  actionRegistry: TemplateActionRegistry;\n  integrations: ScmIntegrations;\n  workingDirectory: string;\n  logger: Logger;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  /**\n   * The number of tasks that can be executed at the same time by the worker\n   * @defaultValue 10\n   * @example\n   * ```\n   * {\n   *   concurrentTasksLimit: 1,\n   *   // OR\n   *   concurrentTasksLimit: Infinity\n   * }\n   * ```\n   */\n  concurrentTasksLimit?: number;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionEvaluator;\n};\n\n/**\n * TaskWorker\n *\n * @public\n */\nexport class TaskWorker {\n  private taskQueue: PQueue;\n  private logger: Logger | undefined;\n  private stopWorkers: boolean;\n\n  private constructor(private readonly options: TaskWorkerOptions) {\n    this.stopWorkers = false;\n    this.logger = options.logger;\n    this.taskQueue = new PQueue({\n      concurrency: options.concurrentTasksLimit,\n    });\n  }\n\n  static async create(options: CreateWorkerOptions): Promise<TaskWorker> {\n    const {\n      taskBroker,\n      logger,\n      actionRegistry,\n      integrations,\n      workingDirectory,\n      additionalTemplateFilters,\n      concurrentTasksLimit = 10, // from 1 to Infinity\n      additionalTemplateGlobals,\n      permissions,\n    } = options;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      actionRegistry,\n      integrations,\n      logger,\n      workingDirectory,\n      additionalTemplateFilters,\n      additionalTemplateGlobals,\n      permissions,\n    });\n\n    return new TaskWorker({\n      taskBroker: taskBroker,\n      runners: { workflowRunner },\n      concurrentTasksLimit,\n      permissions,\n    });\n  }\n\n  async recoverTasks() {\n    try {\n      await this.options.taskBroker.recoverTasks?.();\n    } catch (err) {\n      this.logger?.error(stringifyError(err));\n    }\n  }\n\n  start() {\n    (async () => {\n      while (!this.stopWorkers) {\n        await new Promise(resolve => setTimeout(resolve, 10000));\n        await this.recoverTasks();\n      }\n    })();\n    (async () => {\n      while (!this.stopWorkers) {\n        await this.onReadyToClaimTask();\n        if (!this.stopWorkers) {\n          const task = await this.options.taskBroker.claim();\n          void this.taskQueue.add(() => this.runOneTask(task));\n        }\n      }\n    })();\n  }\n\n  stop() {\n    this.stopWorkers = true;\n  }\n\n  protected onReadyToClaimTask(): Promise<void> {\n    if (this.taskQueue.pending < this.options.concurrentTasksLimit) {\n      return Promise.resolve();\n    }\n    return new Promise(resolve => {\n      // \"next\" event emits when a task completes\n      // https://github.com/sindresorhus/p-queue#next\n      this.taskQueue.once('next', () => {\n        resolve();\n      });\n    });\n  }\n\n  async runOneTask(task: TaskContext) {\n    try {\n      if (task.spec.apiVersion !== 'scaffolder.backstage.io/v1beta3') {\n        throw new Error(\n          `Unsupported Template apiVersion ${task.spec.apiVersion}`,\n        );\n      }\n\n      const { output } = await this.options.runners.workflowRunner.execute(\n        task,\n      );\n\n      await task.complete('completed', { output });\n    } catch (error) {\n      assertError(error);\n      await task.complete('failed', {\n        error: { name: error.name, message: error.message },\n      });\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { TemplateActionRegistry } from '../actions';\n\n/** @internal */\nexport class DecoratedActionsRegistry extends TemplateActionRegistry {\n  constructor(\n    private readonly innerRegistry: TemplateActionRegistry,\n    extraActions: Array<TemplateAction>,\n  ) {\n    super();\n    for (const action of extraActions) {\n      this.register(action);\n    }\n  }\n\n  get(actionId: string): TemplateAction {\n    try {\n      return super.get(actionId);\n    } catch {\n      return this.innerRegistry.get(actionId);\n    }\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject } from '@backstage/types';\nimport { v4 as uuid } from 'uuid';\nimport { pathToFileURL } from 'url';\nimport { Logger } from 'winston';\nimport {\n  createTemplateAction,\n  TaskSecrets,\n  TemplateFilter,\n  TemplateGlobal,\n  deserializeDirectoryContents,\n  SerializedFile,\n  serializeDirectoryContents,\n} from '@backstage/plugin-scaffolder-node';\nimport { TemplateActionRegistry } from '../actions';\nimport { NunjucksWorkflowRunner } from '../tasks/NunjucksWorkflowRunner';\nimport { DecoratedActionsRegistry } from './DecoratedActionsRegistry';\nimport fs from 'fs-extra';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\nimport {\n  BackstageCredentials,\n  resolveSafeChildPath,\n} from '@backstage/backend-plugin-api';\n\ninterface DryRunInput {\n  spec: TaskSpec;\n  secrets?: TaskSecrets;\n  directoryContents: SerializedFile[];\n  credentials: BackstageCredentials;\n}\n\ninterface DryRunResult {\n  log: Array<{ body: JsonObject }>;\n  directoryContents: SerializedFile[];\n  output: JsonObject;\n}\n\n/** @internal */\nexport type TemplateTesterCreateOptions = {\n  logger: Logger;\n  integrations: ScmIntegrations;\n  actionRegistry: TemplateActionRegistry;\n  workingDirectory: string;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionEvaluator;\n};\n\n/**\n * Executes a dry-run of the provided template.\n *\n * The provided content will be extracted into a temporary directory\n * which is then use as the base for any relative file fetch paths.\n *\n * @internal\n */\nexport function createDryRunner(options: TemplateTesterCreateOptions) {\n  return async function dryRun(input: DryRunInput): Promise<DryRunResult> {\n    let contentPromise;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      ...options,\n      actionRegistry: new DecoratedActionsRegistry(options.actionRegistry, [\n        createTemplateAction({\n          id: 'dry-run:extract',\n          supportsDryRun: true,\n          async handler(ctx) {\n            contentPromise = serializeDirectoryContents(ctx.workspacePath);\n            await contentPromise.catch(() => {});\n          },\n        }),\n      ]),\n    });\n\n    const dryRunId = uuid();\n    const log = new Array<{ body: JsonObject }>();\n    const contentsPath = resolveSafeChildPath(\n      options.workingDirectory,\n      `dry-run-content-${dryRunId}`,\n    );\n\n    try {\n      await deserializeDirectoryContents(contentsPath, input.directoryContents);\n\n      const abortSignal = new AbortController().signal;\n\n      const result = await workflowRunner.execute({\n        spec: {\n          ...input.spec,\n          steps: [\n            ...input.spec.steps,\n            {\n              id: dryRunId,\n              name: 'dry-run:extract',\n              action: 'dry-run:extract',\n            },\n          ],\n          templateInfo: {\n            entityRef: 'template:default/dry-run',\n            baseUrl: pathToFileURL(\n              resolveSafeChildPath(contentsPath, 'template.yaml'),\n            ).toString(),\n          },\n        },\n        secrets: input.secrets,\n        getInitiatorCredentials: () => Promise.resolve(input.credentials),\n        // No need to update this at the end of the run, so just hard-code it\n        done: false,\n        isDryRun: true,\n        getWorkspaceName: async () => `dry-run-${dryRunId}`,\n        cancelSignal: abortSignal,\n        async emitLog(message: string, logMetadata?: JsonObject) {\n          if (logMetadata?.stepId === dryRunId) {\n            return;\n          }\n          log.push({\n            body: {\n              ...logMetadata,\n              message,\n            },\n          });\n        },\n        complete: async () => {\n          throw new Error('Not implemented');\n        },\n      });\n\n      if (!contentPromise) {\n        throw new Error('Content extraction step was skipped');\n      }\n      const directoryContents = await contentPromise;\n\n      return {\n        log,\n        directoryContents,\n        output: result.output,\n      };\n    } finally {\n      await fs.remove(contentsPath);\n    }\n  };\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  Entity,\n  ANNOTATION_LOCATION,\n  parseLocationRef,\n  ANNOTATION_SOURCE_LOCATION,\n  CompoundEntityRef,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { assertError, InputError, NotFoundError } from '@backstage/errors';\nimport { TemplateEntityV1beta3 } from '@backstage/plugin-scaffolder-common';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport { Logger } from 'winston';\n\nexport async function getWorkingDirectory(\n  config: Config,\n  logger: Logger,\n): Promise<string> {\n  if (!config.has('backend.workingDirectory')) {\n    return os.tmpdir();\n  }\n\n  const workingDirectory = config.getString('backend.workingDirectory');\n  try {\n    // Check if working directory exists and is writable\n    await fs.access(workingDirectory, fs.constants.F_OK | fs.constants.W_OK);\n    logger.info(`using working directory: ${workingDirectory}`);\n  } catch (err) {\n    assertError(err);\n    logger.error(\n      `working directory ${workingDirectory} ${\n        err.code === 'ENOENT' ? 'does not exist' : 'is not writable'\n      }`,\n    );\n    throw err;\n  }\n  return workingDirectory;\n}\n\n/**\n * Gets the base URL of the entity location that points to the source location\n * of the entity description within a repo. If there is not source location\n * or if it has an invalid type, undefined will be returned instead.\n *\n * For file locations this will return a `file://` URL.\n */\nexport function getEntityBaseUrl(entity: Entity): string | undefined {\n  let location = entity.metadata.annotations?.[ANNOTATION_SOURCE_LOCATION];\n  if (!location) {\n    location = entity.metadata.annotations?.[ANNOTATION_LOCATION];\n  }\n  if (!location) {\n    return undefined;\n  }\n\n  const { type, target } = parseLocationRef(location);\n  if (type === 'url') {\n    return target;\n  } else if (type === 'file') {\n    return `file://${target}`;\n  }\n\n  // Only url and file location are handled, as we otherwise don't know if\n  // what the url is pointing to makes sense to use as a baseUrl\n  return undefined;\n}\n\n/**\n * Will use the provided CatalogApi to go find the given template entity with an additional token.\n * Returns the matching template, or throws a NotFoundError if no such template existed.\n */\nexport async function findTemplate(options: {\n  entityRef: CompoundEntityRef;\n  token?: string;\n  catalogApi: CatalogApi;\n}): Promise<TemplateEntityV1beta3> {\n  const { entityRef, token, catalogApi } = options;\n\n  if (entityRef.kind.toLocaleLowerCase('en-US') !== 'template') {\n    throw new InputError(`Invalid kind, only 'Template' kind is supported`);\n  }\n\n  const template = await catalogApi.getEntityByRef(entityRef, { token });\n  if (!template) {\n    throw new NotFoundError(\n      `Template ${stringifyEntityRef(entityRef)} not found`,\n    );\n  }\n\n  return template as TemplateEntityV1beta3;\n}\n","/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  BackstageCredentials,\n  PermissionsService,\n} from '@backstage/backend-plugin-api';\nimport { NotAllowedError } from '@backstage/errors';\nimport {\n  AuthorizeResult,\n  BasicPermission,\n} from '@backstage/plugin-permission-common';\n\nexport type checkPermissionOptions = {\n  credentials: BackstageCredentials;\n  permissions: BasicPermission[];\n  permissionService?: PermissionsService;\n};\n\n/**\n * Does a basic check on permissions. Throws 403 error if any permission responds with AuthorizeResult.DENY\n * @public\n */\nexport async function checkPermission(options: checkPermissionOptions) {\n  const { permissions, permissionService, credentials } = options;\n  if (permissionService) {\n    const permissionRequest = permissions.map(permission => ({\n      permission,\n    }));\n    const authorizationResponses = await permissionService.authorize(\n      permissionRequest,\n      { credentials: credentials },\n    );\n\n    for (const response of authorizationResponses) {\n      if (response.result === AuthorizeResult.DENY) {\n        throw new NotAllowedError();\n      }\n    }\n  }\n}\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  HostDiscovery,\n  PluginDatabaseManager,\n  UrlReader,\n  createLegacyAuthAdapters,\n} from '@backstage/backend-common';\nimport { PluginTaskScheduler } from '@backstage/backend-tasks';\nimport { CatalogApi } from '@backstage/catalog-client';\nimport {\n  CompoundEntityRef,\n  Entity,\n  parseEntityRef,\n  stringifyEntityRef,\n  UserEntity,\n} from '@backstage/catalog-model';\nimport { Config, readDurationFromConfig } from '@backstage/config';\nimport { InputError, NotFoundError, stringifyError } from '@backstage/errors';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { HumanDuration, JsonObject, JsonValue } from '@backstage/types';\nimport {\n  TaskSpec,\n  TemplateEntityV1beta3,\n  templateEntityV1beta3Validator,\n  TemplateParametersV1beta3,\n  TemplateEntityStepV1beta3,\n} from '@backstage/plugin-scaffolder-common';\nimport {\n  RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  scaffolderActionPermissions,\n  scaffolderTemplatePermissions,\n  taskCancelPermission,\n  taskCreatePermission,\n  taskReadPermission,\n  templateParameterReadPermission,\n  templateStepReadPermission,\n  scaffolderTaskPermissions,\n} from '@backstage/plugin-scaffolder-common/alpha';\nimport express from 'express';\nimport Router from 'express-promise-router';\nimport { validate } from 'jsonschema';\nimport { Logger } from 'winston';\nimport { z } from 'zod';\nimport {\n  TemplateAction,\n  TaskBroker,\n  TemplateFilter,\n  TemplateGlobal,\n} from '@backstage/plugin-scaffolder-node';\nimport {\n  createBuiltinActions,\n  DatabaseTaskStore,\n  TaskWorker,\n  TemplateActionRegistry,\n} from '../scaffolder';\nimport { createDryRunner } from '../scaffolder/dryrun';\nimport { StorageTaskBroker } from '../scaffolder/tasks/StorageTaskBroker';\nimport { findTemplate, getEntityBaseUrl, getWorkingDirectory } from './helpers';\nimport { PermissionRuleParams } from '@backstage/plugin-permission-common';\nimport {\n  createConditionAuthorizer,\n  createPermissionIntegrationRouter,\n  PermissionRule,\n} from '@backstage/plugin-permission-node';\nimport { scaffolderActionRules, scaffolderTemplateRules } from './rules';\nimport { Duration } from 'luxon';\nimport {\n  AuthService,\n  BackstageCredentials,\n  DiscoveryService,\n  HttpAuthService,\n  LifecycleService,\n  PermissionsService,\n} from '@backstage/backend-plugin-api';\nimport {\n  IdentityApi,\n  IdentityApiGetIdentityRequest,\n} from '@backstage/plugin-auth-node';\nimport { InternalTaskSecrets } from '../scaffolder/tasks/types';\nimport { checkPermission } from '../util/checkPermissions';\n\n/**\n *\n * @public\n */\nexport type TemplatePermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n  TParams\n>;\nfunction isTemplatePermissionRuleInput(\n  permissionRule: TemplatePermissionRuleInput | ActionPermissionRuleInput,\n): permissionRule is TemplatePermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_TEMPLATE;\n}\n\n/**\n *\n * @public\n */\nexport type ActionPermissionRuleInput<\n  TParams extends PermissionRuleParams = PermissionRuleParams,\n> = PermissionRule<\n  TemplateEntityStepV1beta3 | TemplateParametersV1beta3,\n  {},\n  typeof RESOURCE_TYPE_SCAFFOLDER_ACTION,\n  TParams\n>;\nfunction isActionPermissionRuleInput(\n  permissionRule: TemplatePermissionRuleInput | ActionPermissionRuleInput,\n): permissionRule is ActionPermissionRuleInput {\n  return permissionRule.resourceType === RESOURCE_TYPE_SCAFFOLDER_ACTION;\n}\n\n/**\n * RouterOptions\n *\n * @public\n */\nexport interface RouterOptions {\n  logger: Logger;\n  config: Config;\n  reader: UrlReader;\n  lifecycle?: LifecycleService;\n  database: PluginDatabaseManager;\n  catalogClient: CatalogApi;\n  scheduler?: PluginTaskScheduler;\n  actions?: TemplateAction<any, any>[];\n  /**\n   * @deprecated taskWorkers is deprecated in favor of concurrentTasksLimit option with a single TaskWorker\n   * @defaultValue 1\n   */\n  taskWorkers?: number;\n  /**\n   * Sets the number of concurrent tasks that can be run at any given time on the TaskWorker\n   * @defaultValue 10\n   */\n  concurrentTasksLimit?: number;\n  taskBroker?: TaskBroker;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionsService;\n  permissionRules?: Array<\n    TemplatePermissionRuleInput | ActionPermissionRuleInput\n  >;\n  auth?: AuthService;\n  httpAuth?: HttpAuthService;\n  identity?: IdentityApi;\n  discovery?: DiscoveryService;\n}\n\nfunction isSupportedTemplate(entity: TemplateEntityV1beta3) {\n  return entity.apiVersion === 'scaffolder.backstage.io/v1beta3';\n}\n\n/*\n * @deprecated This function remains as the DefaultIdentityClient behaves slightly differently to the pre-existing\n * scaffolder behaviour. Specifically if the token fails to parse, the DefaultIdentityClient will raise an error.\n * The scaffolder did not raise an error in this case. As such we chose to allow it to behave as it did previously\n * until someone explicitly passes an IdentityApi. When we have reasonable confidence that most backstage deployments\n * are using the IdentityApi, we can remove this function.\n */\nfunction buildDefaultIdentityClient(options: RouterOptions): IdentityApi {\n  return {\n    getIdentity: async ({ request }: IdentityApiGetIdentityRequest) => {\n      const header = request.headers.authorization;\n      const { logger } = options;\n\n      if (!header) {\n        return undefined;\n      }\n\n      try {\n        const token = header.match(/^Bearer\\s(\\S+\\.\\S+\\.\\S+)$/i)?.[1];\n        if (!token) {\n          throw new TypeError('Expected Bearer with JWT');\n        }\n\n        const [_header, rawPayload, _signature] = token.split('.');\n        const payload: JsonValue = JSON.parse(\n          Buffer.from(rawPayload, 'base64').toString(),\n        );\n\n        if (\n          typeof payload !== 'object' ||\n          payload === null ||\n          Array.isArray(payload)\n        ) {\n          throw new TypeError('Malformed JWT payload');\n        }\n\n        const sub = payload.sub;\n        if (typeof sub !== 'string') {\n          throw new TypeError('Expected string sub claim');\n        }\n\n        if (sub === 'backstage-server') {\n          return undefined;\n        }\n\n        // Check that it's a valid ref, otherwise this will throw.\n        parseEntityRef(sub);\n\n        return {\n          identity: {\n            userEntityRef: sub,\n            ownershipEntityRefs: [],\n            type: 'user',\n          },\n          token,\n        };\n      } catch (e) {\n        logger.error(`Invalid authorization header: ${stringifyError(e)}`);\n        return undefined;\n      }\n    },\n  };\n}\n\nconst readDuration = (\n  config: Config,\n  key: string,\n  defaultValue: HumanDuration,\n) => {\n  if (config.has(key)) {\n    return readDurationFromConfig(config, { key });\n  }\n  return defaultValue;\n};\n\n/**\n * A method to create a router for the scaffolder backend plugin.\n * @public\n */\nexport async function createRouter(\n  options: RouterOptions,\n): Promise<express.Router> {\n  const router = Router();\n  // Be generous in upload size to support a wide range of templates in dry-run mode.\n  router.use(express.json({ limit: '10MB' }));\n\n  const {\n    logger: parentLogger,\n    config,\n    reader,\n    database,\n    catalogClient,\n    actions,\n    taskWorkers,\n    scheduler,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n    permissions,\n    permissionRules,\n    discovery = HostDiscovery.fromConfig(config),\n    identity = buildDefaultIdentityClient(options),\n  } = options;\n\n  const { auth, httpAuth } = createLegacyAuthAdapters({\n    ...options,\n    identity,\n    discovery,\n  });\n\n  const concurrentTasksLimit =\n    options.concurrentTasksLimit ??\n    options.config.getOptionalNumber('scaffolder.concurrentTasksLimit');\n\n  const logger = parentLogger.child({ plugin: 'scaffolder' });\n\n  const workingDirectory = await getWorkingDirectory(config, logger);\n  const integrations = ScmIntegrations.fromConfig(config);\n\n  let taskBroker: TaskBroker;\n  if (!options.taskBroker) {\n    const databaseTaskStore = await DatabaseTaskStore.create({ database });\n    taskBroker = new StorageTaskBroker(databaseTaskStore, logger, config, auth);\n\n    if (scheduler && databaseTaskStore.listStaleTasks) {\n      await scheduler.scheduleTask({\n        id: 'close_stale_tasks',\n        frequency: readDuration(\n          config,\n          'scaffolder.taskTimeoutJanitorFrequency',\n          {\n            minutes: 5,\n          },\n        ),\n        timeout: { minutes: 15 },\n        fn: async () => {\n          const { tasks } = await databaseTaskStore.listStaleTasks({\n            timeoutS: Duration.fromObject(\n              readDuration(config, 'scaffolder.taskTimeout', {\n                hours: 24,\n              }),\n            ).as('seconds'),\n          });\n\n          for (const task of tasks) {\n            await databaseTaskStore.shutdownTask(task);\n            logger.info(`Successfully closed stale task ${task.taskId}`);\n          }\n        },\n      });\n    }\n  } else {\n    taskBroker = options.taskBroker;\n  }\n\n  const actionRegistry = new TemplateActionRegistry();\n\n  const workers: TaskWorker[] = [];\n  if (concurrentTasksLimit !== 0) {\n    for (let i = 0; i < (taskWorkers || 1); i++) {\n      const worker = await TaskWorker.create({\n        taskBroker,\n        actionRegistry,\n        integrations,\n        logger,\n        workingDirectory,\n        additionalTemplateFilters,\n        additionalTemplateGlobals,\n        concurrentTasksLimit,\n        permissions,\n      });\n      workers.push(worker);\n    }\n  }\n\n  const actionsToRegister = Array.isArray(actions)\n    ? actions\n    : createBuiltinActions({\n        integrations,\n        catalogClient,\n        reader,\n        config,\n        additionalTemplateFilters,\n        additionalTemplateGlobals,\n        auth,\n      });\n\n  actionsToRegister.forEach(action => actionRegistry.register(action));\n\n  const launchWorkers = () => workers.forEach(worker => worker.start());\n\n  const shutdownWorkers = () => {\n    workers.forEach(worker => worker.stop());\n  };\n\n  if (options.lifecycle) {\n    options.lifecycle.addStartupHook(launchWorkers);\n    options.lifecycle.addShutdownHook(shutdownWorkers);\n  } else {\n    launchWorkers();\n  }\n\n  const dryRunner = createDryRunner({\n    actionRegistry,\n    integrations,\n    logger,\n    workingDirectory,\n    additionalTemplateFilters,\n    additionalTemplateGlobals,\n    permissions,\n  });\n\n  const templateRules: TemplatePermissionRuleInput[] = Object.values(\n    scaffolderTemplateRules,\n  );\n  const actionRules: ActionPermissionRuleInput[] = Object.values(\n    scaffolderActionRules,\n  );\n\n  if (permissionRules) {\n    templateRules.push(\n      ...permissionRules.filter(isTemplatePermissionRuleInput),\n    );\n    actionRules.push(...permissionRules.filter(isActionPermissionRuleInput));\n  }\n\n  const isAuthorized = createConditionAuthorizer(Object.values(templateRules));\n\n  const permissionIntegrationRouter = createPermissionIntegrationRouter({\n    resources: [\n      {\n        resourceType: RESOURCE_TYPE_SCAFFOLDER_TEMPLATE,\n        permissions: scaffolderTemplatePermissions,\n        rules: templateRules,\n      },\n      {\n        resourceType: RESOURCE_TYPE_SCAFFOLDER_ACTION,\n        permissions: scaffolderActionPermissions,\n        rules: actionRules,\n      },\n    ],\n    permissions: scaffolderTaskPermissions,\n  });\n\n  router.use(permissionIntegrationRouter);\n\n  router\n    .get(\n      '/v2/templates/:namespace/:kind/:name/parameter-schema',\n      async (req, res) => {\n        const credentials = await httpAuth.credentials(req);\n\n        const { token } = await auth.getPluginRequestToken({\n          onBehalfOf: credentials,\n          targetPluginId: 'catalog',\n        });\n\n        const template = await authorizeTemplate(\n          req.params,\n          token,\n          credentials,\n        );\n\n        const parameters = [template.spec.parameters ?? []].flat();\n\n        const presentation = template.spec.presentation;\n\n        res.json({\n          title: template.metadata.title ?? template.metadata.name,\n          ...(presentation ? { presentation } : {}),\n          description: template.metadata.description,\n          'ui:options': template.metadata['ui:options'],\n          steps: parameters.map(schema => ({\n            title: schema.title ?? 'Please enter the following information',\n            description: schema.description,\n            schema,\n          })),\n        });\n      },\n    )\n    .get('/v2/actions', async (_req, res) => {\n      const actionsList = actionRegistry.list().map(action => {\n        return {\n          id: action.id,\n          description: action.description,\n          examples: action.examples,\n          schema: action.schema,\n        };\n      });\n      res.json(actionsList);\n    })\n    .post('/v2/tasks', async (req, res) => {\n      const templateRef: string = req.body.templateRef;\n      const { kind, namespace, name } = parseEntityRef(templateRef, {\n        defaultKind: 'template',\n      });\n\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskCreatePermission],\n        permissionService: permissions,\n      });\n\n      const { token } = await auth.getPluginRequestToken({\n        onBehalfOf: credentials,\n        targetPluginId: 'catalog',\n      });\n\n      const userEntityRef = auth.isPrincipal(credentials, 'user')\n        ? credentials.principal.userEntityRef\n        : undefined;\n\n      const userEntity = userEntityRef\n        ? await catalogClient.getEntityByRef(userEntityRef, { token })\n        : undefined;\n\n      let auditLog = `Scaffolding task for ${templateRef}`;\n      if (userEntityRef) {\n        auditLog += ` created by ${userEntityRef}`;\n      }\n      logger.info(auditLog);\n\n      const values = req.body.values;\n\n      const template = await authorizeTemplate(\n        { kind, namespace, name },\n        token,\n        credentials,\n      );\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(values, parameters);\n\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const baseUrl = getEntityBaseUrl(template);\n\n      const taskSpec: TaskSpec = {\n        apiVersion: template.apiVersion,\n        steps: template.spec.steps.map((step, index) => ({\n          ...step,\n          id: step.id ?? `step-${index + 1}`,\n          name: step.name ?? step.action,\n        })),\n        EXPERIMENTAL_recovery: template.spec.EXPERIMENTAL_recovery,\n        output: template.spec.output ?? {},\n        parameters: values,\n        user: {\n          entity: userEntity as UserEntity,\n          ref: userEntityRef,\n        },\n        templateInfo: {\n          entityRef: stringifyEntityRef({ kind, name, namespace }),\n          baseUrl,\n          entity: {\n            metadata: template.metadata,\n          },\n        },\n      };\n\n      const secrets: InternalTaskSecrets = {\n        ...req.body.secrets,\n        backstageToken: token,\n        __initiatorCredentials: JSON.stringify(credentials),\n      };\n\n      const result = await taskBroker.dispatch({\n        spec: taskSpec,\n        createdBy: userEntityRef,\n        secrets,\n      });\n\n      res.status(201).json({ id: result.taskId });\n    })\n    .get('/v2/tasks', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskReadPermission],\n        permissionService: permissions,\n      });\n\n      const [userEntityRef] = [req.query.createdBy].flat();\n      if (\n        typeof userEntityRef !== 'string' &&\n        typeof userEntityRef !== 'undefined'\n      ) {\n        throw new InputError('createdBy query parameter must be a string');\n      }\n\n      if (!taskBroker.list) {\n        throw new Error(\n          'TaskBroker does not support listing tasks, please implement the list method on the TaskBroker.',\n        );\n      }\n\n      const tasks = await taskBroker.list({\n        createdBy: userEntityRef,\n      });\n\n      res.status(200).json(tasks);\n    })\n    .get('/v2/tasks/:taskId', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskReadPermission],\n        permissionService: permissions,\n      });\n\n      const { taskId } = req.params;\n      const task = await taskBroker.get(taskId);\n      if (!task) {\n        throw new NotFoundError(`Task with id ${taskId} does not exist`);\n      }\n      // Do not disclose secrets\n      delete task.secrets;\n      res.status(200).json(task);\n    })\n    .post('/v2/tasks/:taskId/cancel', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      // Requires both read and cancel permissions\n      await checkPermission({\n        credentials,\n        permissions: [taskCancelPermission, taskReadPermission],\n        permissionService: permissions,\n      });\n\n      const { taskId } = req.params;\n      await taskBroker.cancel?.(taskId);\n      res.status(200).json({ status: 'cancelled' });\n    })\n    .get('/v2/tasks/:taskId/eventstream', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskReadPermission],\n        permissionService: permissions,\n      });\n\n      const { taskId } = req.params;\n      const after =\n        req.query.after !== undefined ? Number(req.query.after) : undefined;\n\n      logger.debug(`Event stream observing taskId '${taskId}' opened`);\n\n      // Mandatory headers and http status to keep connection open\n      res.writeHead(200, {\n        Connection: 'keep-alive',\n        'Cache-Control': 'no-cache',\n        'Content-Type': 'text/event-stream',\n      });\n\n      // After client opens connection send all events as string\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n          res.end();\n        },\n        next: ({ events }) => {\n          let shouldUnsubscribe = false;\n          for (const event of events) {\n            res.write(\n              `event: ${event.type}\\ndata: ${JSON.stringify(event)}\\n\\n`,\n            );\n            if (event.type === 'completion') {\n              shouldUnsubscribe = true;\n            }\n          }\n          // res.flush() is only available with the compression middleware\n          res.flush?.();\n          if (shouldUnsubscribe) {\n            subscription.unsubscribe();\n            res.end();\n          }\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        logger.debug(`Event stream observing taskId '${taskId}' closed`);\n      });\n    })\n    .get('/v2/tasks/:taskId/events', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskReadPermission],\n        permissionService: permissions,\n      });\n\n      const { taskId } = req.params;\n      const after = Number(req.query.after) || undefined;\n\n      // cancel the request after 30 seconds. this aligns with the recommendations of RFC 6202.\n      const timeout = setTimeout(() => {\n        res.json([]);\n      }, 30_000);\n\n      // Get all known events after an id (always includes the completion event) and return the first callback\n      const subscription = taskBroker.event$({ taskId, after }).subscribe({\n        error: error => {\n          logger.error(\n            `Received error from event stream when observing taskId '${taskId}', ${error}`,\n          );\n        },\n        next: ({ events }) => {\n          clearTimeout(timeout);\n          subscription.unsubscribe();\n          res.json(events);\n        },\n      });\n\n      // When client closes connection we update the clients list\n      // avoiding the disconnected one\n      req.on('close', () => {\n        subscription.unsubscribe();\n        clearTimeout(timeout);\n      });\n    })\n    .post('/v2/dry-run', async (req, res) => {\n      const credentials = await httpAuth.credentials(req);\n      await checkPermission({\n        credentials,\n        permissions: [taskCreatePermission],\n        permissionService: permissions,\n      });\n\n      const bodySchema = z.object({\n        template: z.unknown(),\n        values: z.record(z.unknown()),\n        secrets: z.record(z.string()).optional(),\n        directoryContents: z.array(\n          z.object({ path: z.string(), base64Content: z.string() }),\n        ),\n      });\n      const body = await bodySchema.parseAsync(req.body).catch(e => {\n        throw new InputError(`Malformed request: ${e}`);\n      });\n\n      const template = body.template as TemplateEntityV1beta3;\n      if (!(await templateEntityV1beta3Validator.check(template))) {\n        throw new InputError('Input template is not a template');\n      }\n\n      const { token } = await auth.getPluginRequestToken({\n        onBehalfOf: credentials,\n        targetPluginId: 'catalog',\n      });\n\n      for (const parameters of [template.spec.parameters ?? []].flat()) {\n        const result = validate(body.values, parameters);\n        if (!result.valid) {\n          res.status(400).json({ errors: result.errors });\n          return;\n        }\n      }\n\n      const steps = template.spec.steps.map((step, index) => ({\n        ...step,\n        id: step.id ?? `step-${index + 1}`,\n        name: step.name ?? step.action,\n      }));\n\n      const result = await dryRunner({\n        spec: {\n          apiVersion: template.apiVersion,\n          steps,\n          output: template.spec.output ?? {},\n          parameters: body.values as JsonObject,\n        },\n        directoryContents: (body.directoryContents ?? []).map(file => ({\n          path: file.path,\n          content: Buffer.from(file.base64Content, 'base64'),\n        })),\n        secrets: {\n          ...body.secrets,\n          ...(token && { backstageToken: token }),\n        },\n        credentials,\n      });\n\n      res.status(200).json({\n        ...result,\n        steps,\n        directoryContents: result.directoryContents.map(file => ({\n          path: file.path,\n          executable: file.executable,\n          base64Content: file.content.toString('base64'),\n        })),\n      });\n    });\n\n  const app = express();\n  app.set('logger', logger);\n  app.use('/', router);\n\n  async function authorizeTemplate(\n    entityRef: CompoundEntityRef,\n    token: string | undefined,\n    credentials: BackstageCredentials,\n  ) {\n    const template = await findTemplate({\n      catalogApi: catalogClient,\n      entityRef,\n      token,\n    });\n\n    if (!isSupportedTemplate(template)) {\n      throw new InputError(\n        `Unsupported apiVersion field in schema entity, ${\n          (template as Entity).apiVersion\n        }`,\n      );\n    }\n\n    if (!permissions) {\n      return template;\n    }\n\n    const [parameterDecision, stepDecision] =\n      await permissions.authorizeConditional(\n        [\n          { permission: templateParameterReadPermission },\n          { permission: templateStepReadPermission },\n        ],\n        { credentials },\n      );\n\n    // Authorize parameters\n    if (Array.isArray(template.spec.parameters)) {\n      template.spec.parameters = template.spec.parameters.filter(step =>\n        isAuthorized(parameterDecision, step),\n      );\n    } else if (\n      template.spec.parameters &&\n      !isAuthorized(parameterDecision, template.spec.parameters)\n    ) {\n      template.spec.parameters = undefined;\n    }\n\n    // Authorize steps\n    template.spec.steps = template.spec.steps.filter(step =>\n      isAuthorized(stepDecision, step),\n    );\n\n    return template;\n  }\n\n  return app;\n}\n"],"names":["examples","yaml","id","createTemplateAction","InputError","stringifyEntityRef","z","fs","resolveSafeChildPath","parseEntityRef","relative","readdir","join","stat","Duration","fetchContents","fetchFile","Isolate","resolvePackagePath","parseRepoUrl","get","globby","extname","isBinaryFile","DefaultGithubCredentialsProvider","createPublishGerritAction","createPublishGerritReviewAction","createPublishGiteaAction","createPublishGithubAction","createPublishGithubPullRequestAction","createPublishGitlabAction","createPublishGitlabMergeRequestAction","createGitlabRepoPushAction","createPublishBitbucketAction","createPublishBitbucketCloudAction","createPublishBitbucketServerAction","createPublishBitbucketServerPullRequestAction","createPublishAzureAction","createGithubActionsDispatchAction","createGithubWebhookAction","createGithubIssuesLabelAction","createGithubRepoCreateAction","createGithubRepoPushAction","createGithubEnvironmentAction","createGithubDeployKeyAction","createGithubAutolinksAction","createBitbucketPipelinesRunAction","ConflictError","NotFoundError","promisify","pipelineCb","tar","concatStream","Readable","DateTime","uuid","isArray","readDuration","config","readDurationFromConfig","ObservableImpl","register","Counter","Histogram","makeCreatePermissionRule","RESOURCE_TYPE_SCAFFOLDER_TEMPLATE","RESOURCE_TYPE_SCAFFOLDER_ACTION","Transport","createLogger","format","transports","MESSAGE","PassThrough","winston","createConditionAuthorizer","nunjucks","templated","validateJsonSchema","errors","NotAllowedError","loggerToWinstonLogger","stringifyError","path","actionExecutePermission","AuthorizeResult","PQueue","assertError","serializeDirectoryContents","deserializeDirectoryContents","pathToFileURL","os","ANNOTATION_SOURCE_LOCATION","ANNOTATION_LOCATION","parseLocationRef","Router","express","HostDiscovery","createLegacyAuthAdapters","ScmIntegrations","createPermissionIntegrationRouter","scaffolderTemplatePermissions","scaffolderActionPermissions","scaffolderTaskPermissions","taskCreatePermission","result","validate","taskReadPermission","taskCancelPermission","templateEntityV1beta3Validator","templateParameterReadPermission","templateStepReadPermission"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js
index d060e6a..3b5a588 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js
@@ -1,6 +1,6 @@
 'use strict';
 
-var router = require('./cjs/router-CDFi_apW.cjs.js');
+var router = require('./cjs/router-MKDOtEGf.cjs.js');
 var github = require('@backstage/plugin-scaffolder-backend-module-github');
 var gitlab = require('@backstage/plugin-scaffolder-backend-module-gitlab');
 var azure = require('@backstage/plugin-scaffolder-backend-module-azure');
@@ -23,6 +23,7 @@ require('jsonschema');
 require('zod');
 require('yaml');
 require('fs-extra');
+require('@backstage/backend-plugin-api');
 require('path');
 require('luxon');
 require('globby');
@@ -31,16 +32,20 @@ require('isolated-vm');
 require('lodash/get');
 require('@backstage/plugin-scaffolder-backend-module-gitea');
 require('uuid');
+require('tar');
+require('concat-stream');
+require('util');
+require('stream');
 require('zen-observable');
 require('lodash');
 require('p-queue');
 require('winston');
 require('nunjucks');
-require('stream');
 require('@backstage/plugin-permission-node');
 require('prom-client');
 require('@backstage/plugin-permission-common');
 require('winston-transport');
+require('triple-beam');
 require('url');
 require('os');
 
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js.map b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js.map
index fb7b362..f03d069 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js.map
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.cjs.js","sources":["../src/scaffolder/actions/deprecated.ts","../src/deprecated.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as github from '@backstage/plugin-scaffolder-backend-module-github';\nimport * as gitlab from '@backstage/plugin-scaffolder-backend-module-gitlab';\nimport * as azure from '@backstage/plugin-scaffolder-backend-module-azure';\nimport * as bitbucket from '@backstage/plugin-scaffolder-backend-module-bitbucket';\nimport * as bitbucketCloud from '@backstage/plugin-scaffolder-backend-module-bitbucket-cloud';\nimport * as bitbucketServer from '@backstage/plugin-scaffolder-backend-module-bitbucket-server';\nimport * as gerrit from '@backstage/plugin-scaffolder-backend-module-gerrit';\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubActionsDispatchAction =\n  github.createGithubActionsDispatchAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubDeployKeyAction = github.createGithubDeployKeyAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubEnvironmentAction =\n  github.createGithubEnvironmentAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubIssuesLabelAction =\n  github.createGithubIssuesLabelAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport type CreateGithubPullRequestActionOptions =\n  github.CreateGithubPullRequestActionOptions;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubRepoCreateAction = github.createGithubRepoCreateAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubRepoPushAction = github.createGithubRepoPushAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubWebhookAction = github.createGithubWebhookAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createPublishGithubAction = github.createPublishGithubAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createPublishGithubPullRequestAction =\n  github.createPublishGithubPullRequestAction;\n\n/**\n * @public @deprecated use \"createPublishBitbucketCloudAction\" from \\@backstage/plugin-scaffolder-backend-module-bitbucket-cloud or \"createPublishBitbucketServerAction\" from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketAction =\n  bitbucket.createPublishBitbucketAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-cloud instead\n */\nexport const createPublishBitbucketCloudAction =\n  bitbucketCloud.createPublishBitbucketCloudAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketServerAction =\n  bitbucketServer.createPublishBitbucketServerAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketServerPullRequestAction =\n  bitbucketServer.createPublishBitbucketServerPullRequestAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-azure instead\n */\nexport const createPublishAzureAction = azure.createPublishAzureAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gerrit instead\n */\nexport const createPublishGerritAction = gerrit.createPublishGerritAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gerrit instead\n */\nexport const createPublishGerritReviewAction =\n  gerrit.createPublishGerritReviewAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gitlab instead\n */\nexport const createPublishGitlabAction = gitlab.createPublishGitlabAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gitlab instead\n */\nexport const createPublishGitlabMergeRequestAction =\n  gitlab.createPublishGitlabMergeRequestAction;\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionContext as ActionContextNode,\n  createTemplateAction as createTemplateActionNode,\n  TaskSecrets as TaskSecretsNode,\n  TemplateAction as TemplateActionNode,\n  executeShellCommand as executeShellCommandNode,\n  ExecuteShellCommandOptions as ExecuteShellCommandOptionsNode,\n  fetchContents as fetchContentsNode,\n} from '@backstage/plugin-scaffolder-node';\nimport { JsonObject } from '@backstage/types';\nimport { ScaffolderEntitiesProcessor as ScaffolderEntitiesProcessorModule } from '@backstage/plugin-catalog-backend-module-scaffolder-entity-model';\n\n/**\n * @public\n * @deprecated Import from {@link @backstage/plugin-scaffolder-node#ActionContext} instead\n */\nexport type ActionContext<TInput extends JsonObject> =\n  ActionContextNode<TInput>;\n\n/**\n * @public\n * @deprecated Use `createTemplateAction` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const createTemplateAction = createTemplateActionNode;\n\n/**\n * @public\n * @deprecated Use `TaskSecrets` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type TaskSecrets = TaskSecretsNode;\n\n/**\n * @public\n * @deprecated Use `TemplateAction` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type TemplateAction<TInput extends JsonObject> =\n  TemplateActionNode<TInput>;\n\n/**\n * Options for {@link executeShellCommand}.\n *\n * @public\n * @deprecated Use `ExecuteShellCommandOptions` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type RunCommandOptions = ExecuteShellCommandOptionsNode;\n\n/**\n * Run a command in a sub-process, normally a shell command.\n *\n * @public\n * @deprecated Use `executeShellCommand` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const executeShellCommand = executeShellCommandNode;\n\n/**\n * A helper function that reads the contents of a directory from the given URL.\n * Can be used in your own actions, and also used behind fetch:template and fetch:plain\n *\n * @public\n * @deprecated Use `fetchContents` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const fetchContents = fetchContentsNode;\n\n/**\n * Adds support for scaffolder specific entity kinds to the catalog.\n *\n * @public\n * @deprecated Import from `@backstage/plugin-catalog-backend-module-scaffolder-entity-model` instead\n */\nexport const ScaffolderEntitiesProcessor = ScaffolderEntitiesProcessorModule;\n"],"names":["github","bitbucket","bitbucketCloud","bitbucketServer","azure","gerrit","gitlab","createTemplateActionNode","executeShellCommandNode","fetchContentsNode","ScaffolderEntitiesProcessorModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BO,MAAM,oCACXA,iBAAO,CAAA,kCAAA;AAKF,MAAM,8BAA8BA,iBAAO,CAAA,4BAAA;AAK3C,MAAM,gCACXA,iBAAO,CAAA,8BAAA;AAKF,MAAM,gCACXA,iBAAO,CAAA,8BAAA;AAWF,MAAM,+BAA+BA,iBAAO,CAAA,6BAAA;AAK5C,MAAM,6BAA6BA,iBAAO,CAAA,2BAAA;AAK1C,MAAM,4BAA4BA,iBAAO,CAAA,0BAAA;AAKzC,MAAM,4BAA4BA,iBAAO,CAAA,0BAAA;AAKzC,MAAM,uCACXA,iBAAO,CAAA,qCAAA;AAKF,MAAM,+BACXC,oBAAU,CAAA,6BAAA;AAKL,MAAM,oCACXC,yBAAe,CAAA,kCAAA;AAKV,MAAM,qCACXC,0BAAgB,CAAA,mCAAA;AAKX,MAAM,gDACXA,0BAAgB,CAAA,8CAAA;AAKX,MAAM,2BAA2BC,gBAAM,CAAA,yBAAA;AAKvC,MAAM,4BAA4BC,iBAAO,CAAA,0BAAA;AAKzC,MAAM,kCACXA,iBAAO,CAAA,gCAAA;AAKF,MAAM,4BAA4BC,iBAAO,CAAA,0BAAA;AAKzC,MAAM,wCACXA,iBAAO,CAAA;;ACxFF,MAAM,oBAAuB,GAAAC,0CAAA;AA6B7B,MAAM,mBAAsB,GAAAC,yCAAA;AAS5B,MAAM,aAAgB,GAAAC,mCAAA;AAQtB,MAAM,2BAA8B,GAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
+{"version":3,"file":"index.cjs.js","sources":["../src/scaffolder/actions/deprecated.ts","../src/deprecated.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as github from '@backstage/plugin-scaffolder-backend-module-github';\nimport * as gitlab from '@backstage/plugin-scaffolder-backend-module-gitlab';\nimport * as azure from '@backstage/plugin-scaffolder-backend-module-azure';\nimport * as bitbucket from '@backstage/plugin-scaffolder-backend-module-bitbucket';\nimport * as bitbucketCloud from '@backstage/plugin-scaffolder-backend-module-bitbucket-cloud';\nimport * as bitbucketServer from '@backstage/plugin-scaffolder-backend-module-bitbucket-server';\nimport * as gerrit from '@backstage/plugin-scaffolder-backend-module-gerrit';\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubActionsDispatchAction =\n  github.createGithubActionsDispatchAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubDeployKeyAction = github.createGithubDeployKeyAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubEnvironmentAction =\n  github.createGithubEnvironmentAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubIssuesLabelAction =\n  github.createGithubIssuesLabelAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport type CreateGithubPullRequestActionOptions =\n  github.CreateGithubPullRequestActionOptions;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubRepoCreateAction = github.createGithubRepoCreateAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubRepoPushAction = github.createGithubRepoPushAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createGithubWebhookAction = github.createGithubWebhookAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createPublishGithubAction = github.createPublishGithubAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-github instead\n */\nexport const createPublishGithubPullRequestAction =\n  github.createPublishGithubPullRequestAction;\n\n/**\n * @public @deprecated use \"createPublishBitbucketCloudAction\" from \\@backstage/plugin-scaffolder-backend-module-bitbucket-cloud or \"createPublishBitbucketServerAction\" from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketAction =\n  bitbucket.createPublishBitbucketAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-cloud instead\n */\nexport const createPublishBitbucketCloudAction =\n  bitbucketCloud.createPublishBitbucketCloudAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketServerAction =\n  bitbucketServer.createPublishBitbucketServerAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-bitbucket-server instead\n */\nexport const createPublishBitbucketServerPullRequestAction =\n  bitbucketServer.createPublishBitbucketServerPullRequestAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-azure instead\n */\nexport const createPublishAzureAction = azure.createPublishAzureAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gerrit instead\n */\nexport const createPublishGerritAction = gerrit.createPublishGerritAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gerrit instead\n */\nexport const createPublishGerritReviewAction =\n  gerrit.createPublishGerritReviewAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gitlab instead\n */\nexport const createPublishGitlabAction = gitlab.createPublishGitlabAction;\n\n/**\n * @public @deprecated use import from \\@backstage/plugin-scaffolder-backend-module-gitlab instead\n */\nexport const createPublishGitlabMergeRequestAction =\n  gitlab.createPublishGitlabMergeRequestAction;\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionContext as ActionContextNode,\n  createTemplateAction as createTemplateActionNode,\n  TaskSecrets as TaskSecretsNode,\n  TemplateAction as TemplateActionNode,\n  executeShellCommand as executeShellCommandNode,\n  ExecuteShellCommandOptions as ExecuteShellCommandOptionsNode,\n  fetchContents as fetchContentsNode,\n} from '@backstage/plugin-scaffolder-node';\nimport { JsonObject } from '@backstage/types';\nimport { ScaffolderEntitiesProcessor as ScaffolderEntitiesProcessorModule } from '@backstage/plugin-catalog-backend-module-scaffolder-entity-model';\n\n/**\n * @public\n * @deprecated Import from {@link @backstage/plugin-scaffolder-node#ActionContext} instead\n */\nexport type ActionContext<TInput extends JsonObject> =\n  ActionContextNode<TInput>;\n\n/**\n * @public\n * @deprecated Use `createTemplateAction` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const createTemplateAction = createTemplateActionNode;\n\n/**\n * @public\n * @deprecated Use `TaskSecrets` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type TaskSecrets = TaskSecretsNode;\n\n/**\n * @public\n * @deprecated Use `TemplateAction` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type TemplateAction<TInput extends JsonObject> =\n  TemplateActionNode<TInput>;\n\n/**\n * Options for {@link executeShellCommand}.\n *\n * @public\n * @deprecated Use `ExecuteShellCommandOptions` from `@backstage/plugin-scaffolder-node` instead\n */\nexport type RunCommandOptions = ExecuteShellCommandOptionsNode;\n\n/**\n * Run a command in a sub-process, normally a shell command.\n *\n * @public\n * @deprecated Use `executeShellCommand` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const executeShellCommand = executeShellCommandNode;\n\n/**\n * A helper function that reads the contents of a directory from the given URL.\n * Can be used in your own actions, and also used behind fetch:template and fetch:plain\n *\n * @public\n * @deprecated Use `fetchContents` from `@backstage/plugin-scaffolder-node` instead\n */\nexport const fetchContents = fetchContentsNode;\n\n/**\n * Adds support for scaffolder specific entity kinds to the catalog.\n *\n * @public\n * @deprecated Import from `@backstage/plugin-catalog-backend-module-scaffolder-entity-model` instead\n */\nexport const ScaffolderEntitiesProcessor = ScaffolderEntitiesProcessorModule;\n"],"names":["github","bitbucket","bitbucketCloud","bitbucketServer","azure","gerrit","gitlab","createTemplateActionNode","executeShellCommandNode","fetchContentsNode","ScaffolderEntitiesProcessorModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BO,MAAM,oCACXA,iBAAO,CAAA,kCAAA;AAKF,MAAM,8BAA8BA,iBAAO,CAAA,4BAAA;AAK3C,MAAM,gCACXA,iBAAO,CAAA,8BAAA;AAKF,MAAM,gCACXA,iBAAO,CAAA,8BAAA;AAWF,MAAM,+BAA+BA,iBAAO,CAAA,6BAAA;AAK5C,MAAM,6BAA6BA,iBAAO,CAAA,2BAAA;AAK1C,MAAM,4BAA4BA,iBAAO,CAAA,0BAAA;AAKzC,MAAM,4BAA4BA,iBAAO,CAAA,0BAAA;AAKzC,MAAM,uCACXA,iBAAO,CAAA,qCAAA;AAKF,MAAM,+BACXC,oBAAU,CAAA,6BAAA;AAKL,MAAM,oCACXC,yBAAe,CAAA,kCAAA;AAKV,MAAM,qCACXC,0BAAgB,CAAA,mCAAA;AAKX,MAAM,gDACXA,0BAAgB,CAAA,8CAAA;AAKX,MAAM,2BAA2BC,gBAAM,CAAA,yBAAA;AAKvC,MAAM,4BAA4BC,iBAAO,CAAA,0BAAA;AAKzC,MAAM,kCACXA,iBAAO,CAAA,gCAAA;AAKF,MAAM,4BAA4BC,iBAAO,CAAA,0BAAA;AAKzC,MAAM,wCACXA,iBAAO,CAAA;;ACxFF,MAAM,oBAAuB,GAAAC,0CAAA;AA6B7B,MAAM,mBAAsB,GAAAC,yCAAA;AAS5B,MAAM,aAAgB,GAAAC,mCAAA;AAQtB,MAAM,2BAA8B,GAAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.d.ts b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.d.ts
index 7f06b37..b33316f 100644
--- a/node_modules/@backstage/plugin-scaffolder-backend/dist/index.d.ts
+++ b/node_modules/@backstage/plugin-scaffolder-backend/dist/index.d.ts
@@ -1,3 +1,4 @@
+/// <reference types="qs" />
 import * as _backstage_plugin_scaffolder_node from '@backstage/plugin-scaffolder-node';
 import { TemplateFilter as TemplateFilter$1, TemplateGlobal as TemplateGlobal$1, TemplateAction as TemplateAction$1, TaskStatus as TaskStatus$1, TaskCompletionState as TaskCompletionState$1, SerializedTask as SerializedTask$1, TaskEventType as TaskEventType$1, SerializedTaskEvent as SerializedTaskEvent$1, TaskBrokerDispatchResult as TaskBrokerDispatchResult$1, TaskBrokerDispatchOptions as TaskBrokerDispatchOptions$1, TaskContext as TaskContext$1, TaskBroker as TaskBroker$1, TaskSecrets as TaskSecrets$1, ActionContext as ActionContext$1, ExecuteShellCommandOptions, executeShellCommand as executeShellCommand$1, fetchContents as fetchContents$1 } from '@backstage/plugin-scaffolder-node';
 import * as _backstage_types from '@backstage/types';
@@ -20,10 +21,11 @@ import { Knex } from 'knex';
 import * as _backstage_plugin_scaffolder_common from '@backstage/plugin-scaffolder-common';
 import { TaskSpec, TaskRecovery, TemplateEntityStepV1beta3, TemplateParametersV1beta3 } from '@backstage/plugin-scaffolder-common';
 import { Logger } from 'winston';
+import { ErrorLike } from '@backstage/errors';
+import express, { Request } from 'express';
 import { PermissionEvaluator, PermissionRuleParams } from '@backstage/plugin-permission-common';
 import { PluginTaskScheduler } from '@backstage/backend-tasks';
 import { RESOURCE_TYPE_SCAFFOLDER_TEMPLATE, RESOURCE_TYPE_SCAFFOLDER_ACTION } from '@backstage/plugin-scaffolder-common/alpha';
-import express from 'express';
 import { PermissionRule } from '@backstage/plugin-permission-node';
 import { IdentityApi } from '@backstage/plugin-auth-node';
 import * as jsonschema from 'jsonschema';
@@ -326,7 +328,7 @@ declare const createPublishGitlabMergeRequestAction: (options: {
     sourcePath?: string | undefined;
     targetPath?: string | undefined;
     token?: string | undefined;
-    commitAction?: "update" | "delete" | "create" | undefined;
+    commitAction?: "create" | "update" | "delete" | undefined;
     projectid?: string | undefined;
     removeSourceBranch?: boolean | undefined;
     assignee?: string | undefined;
@@ -571,6 +573,95 @@ declare class DatabaseTaskStore implements TaskStore {
     }>;
 }
 
+type ActorDetails = {
+    actorId: string;
+    ip?: string;
+    hostname?: string;
+    userAgent?: string;
+};
+type AuditRequest = {
+    body: any;
+    url: string;
+    method: string;
+    params?: any;
+    query?: any;
+};
+type AuditResponse = {
+    status: number;
+    body?: any;
+};
+type AuditLogStatus = {
+    status: 'failed';
+    errors: ErrorLike[];
+} | {
+    status: 'succeeded';
+};
+/**
+ * Common fields of an audit log. Note: timestamp and pluginId are automatically added at log creation.
+ *
+ * @public
+ */
+type AuditLogDetails = {
+    actor: ActorDetails;
+    eventName: string;
+    stage: string;
+    request?: AuditRequest;
+    response?: AuditResponse;
+    meta: JsonValue;
+    isAuditLog: true;
+} & AuditLogStatus;
+type AuditActorOptions = {
+    actor_id: string;
+    request?: Request;
+} | {
+    actor_id?: string;
+    request: Request;
+};
+type AuditLogDetailsOptions = {
+    eventName: string;
+    stage: string;
+    metadata?: JsonValue;
+    response?: AuditResponse;
+} & AuditActorOptions & ({
+    status: 'succeeded';
+} | {
+    status: 'failed';
+    errors: unknown[];
+});
+type AuditLogOptions = {
+    eventName: string;
+    message: string;
+    stage: string;
+    metadata?: JsonValue;
+    response?: AuditResponse;
+} & AuditActorOptions;
+type AuditErrorLogOptions = AuditLogOptions & {
+    errors: unknown[];
+};
+interface AuditLogger {
+    /**
+     *
+     * Processes an express request and obtains the actorId from it. Returns undefined if actorId is not obtainable.
+     */
+    getActorId(request?: Request): Promise<string | undefined>;
+    /**
+     *
+     * Generates an AuditLogDetails object containing non-message details of the audit log
+     * Secrets in the request body field should be redacted by the user before passing in the request object
+     */
+    createAuditLogDetails(options: AuditLogDetailsOptions): Promise<AuditLogDetails>;
+    /**
+     *
+     * Generates an Audit Log and logs it at the info level
+     */
+    auditLog(options: AuditLogOptions): Promise<void>;
+    /**
+     *
+     * Generates an Audit Log for an error and logs it at the error level
+     */
+    auditErrorLog(options: AuditErrorLogOptions): Promise<void>;
+}
+
 /**
  * TaskManager
  *
@@ -581,11 +672,13 @@ declare class TaskManager implements TaskContext$1 {
     private readonly storage;
     private readonly signal;
     private readonly logger;
+    private readonly auditLogger;
     private readonly auth?;
     private isDone;
     private heartbeatTimeoutId?;
-    static create(task: CurrentClaimedTask, storage: TaskStore, abortSignal: AbortSignal, logger: Logger, auth?: AuthService): TaskManager;
+    static create(task: CurrentClaimedTask, storage: TaskStore, abortSignal: AbortSignal, logger: Logger, auditLogger: AuditLogger, auth?: AuthService): TaskManager;
     private constructor();
+    get taskId(): string;
     get spec(): _backstage_plugin_scaffolder_common.TaskSpecV1beta3;
     get cancelSignal(): AbortSignal;
     get secrets(): TaskSecrets$1 | undefined;
@@ -648,6 +741,7 @@ type CreateWorkerOptions = {
     integrations: ScmIntegrations;
     workingDirectory: string;
     logger: Logger;
+    auditLogger: AuditLogger;
     additionalTemplateFilters?: Record<string, TemplateFilter$1>;
     /**
      * The number of tasks that can be executed at the same time by the worker
diff --git a/node_modules/@backstage/plugin-scaffolder-backend/migrations/20240401213200_workspace.js b/node_modules/@backstage/plugin-scaffolder-backend/migrations/20240401213200_workspace.js
new file mode 100644
index 0000000..175de54
--- /dev/null
+++ b/node_modules/@backstage/plugin-scaffolder-backend/migrations/20240401213200_workspace.js
@@ -0,0 +1,35 @@
+/*
+ * Copyright 2020 The Backstage Authors
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+// @ts-check
+
+/**
+ * @param {import('knex').Knex} knex
+ */
+exports.up = async function up(knex) {
+  await knex.schema.alterTable('tasks', table => {
+    table.binary('workspace').nullable().comment('A snapshot of the workspace');
+  });
+};
+
+/**
+ * @param {import('knex').Knex} knex
+ */
+exports.down = async function down(knex) {
+  await knex.schema.alterTable('tasks', table => {
+    table.dropColumn('workspace');
+  });
+};
